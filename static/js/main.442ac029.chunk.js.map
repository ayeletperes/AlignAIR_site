{"version":3,"sources":["images/alignair_logo.svg","images/landing_page.jpg","alignairPageHeader.js","homePage.js","processSequence.js","loadModel.js","fileUpload.js","sequenceInput.js","paramInput.js","toolPageContent.js","fastaReader.js","Reference.js","postProcessing.js","predictAlignment.js","fileProcessor.js","toolPageSubmission.js","processResults.js","toolPageResults.js","toolPage.js","index.js"],"names":["module","exports","__webpack_require__","p","assets","Logo","Header","React","createElement","className","href","src","alt","style","width","height","borderRadius","Image","HomePageAPP","fontSize","fontFamily","color","padding","SequenceTokenizer","[object Object]","sequence","maxSeqLength","arguments","length","undefined","split","encodedSequence","Float32Array","i","this","tokenizerDictionary","remainingLength","paddingArray","padArrays","paddingLength","fill","padStart","slice","padEnd","finalSequence","set","paddedArray","encodeAndEqualPadSequence","tokenized_sequence","tf","A","T","G","C","N","P","LoadModelComponent","_ref","setSelectedChain","selectedChain","setModel","setOutputIndices","setIsLoading","model_urls","IGH","IGK","IGL","fetchModel","async","model_url","console","log","concat","response","fetch","arrayBuffer","byteLength","Error","model","indices","mutation_rate","v_call","d_sequence_start","v_sequence_start","d_sequence_end","j_sequence_end","v_sequence_end","j_call","ar_indels","j_sequence_start","d_call","productive","loadModel","encodedSequences","tokenizeSingleSequence","status","predict","error","warmUpModel","useEffect","selectButton","buttonId","onClick","FileUpload","setFile","fileInputRef","useRef","dragAreaRef","fileInfoRef","fileName","setFileName","useState","sequenceCount","setSequenceCount","processFile","file","reader","FileReader","onload","e","content","target","result","countSequences","name","displayFileInfo","readAsText","lines","count","line","startsWith","current","display","Fragment","id","clearFile","value","ref","instance","onDragOver","event","preventDefault","classList","add","onDragLeave","handleDragLeave","remove","onDrop","dataTransfer","files","handleBrowseClick","click","type","onChange","SequenceInput","setSequence","sequenceInputRef","example_sequences","handleExample","clear","ParamInput","setParams","params","handleInputChange","prevInputs","min","max","vCap","dCap","jCap","vConf","step","dConf","jConf","Content","fastaReader","queryToDict","fastaContent","fastaLines","dataDict","currentKey","currentValue","currentQuery","forEach","index","trim","fastaToDict","sortAndReturnDict","sortedDataDict","Object","keys","sort","reduce","obj","key","alleleCallOHE","allele","processFastaContents","IGHV","IGHD","IGHJ","IGHVnameConvert","vAlleleCallOHE","sortedIGHVDataDict","dAlleleCallOHE","sortedIGHDDataDict","jAlleleCallOHE","sortedIGHJDataDict","IGHVF1-G1*01","IGHVF1-G1*02","IGHVF1-G1*03","IGHVF1-G2*01","IGHVF1-G2*02","IGHVF1-G3*01","IGHVF1-G3*02","IGHVF1-G3*03","IGHVF1-G3*04","IGHVF1-G3*05","IGHVF1-G3*06","IGHVF2-G4*01","IGHVF2-G4*02","IGHVF3-G5*01","IGHVF3-G6*01","IGHVF3-G6*02","IGHVF3-G6*03","IGHVF3-G6*04","IGHVF3-G6*05","IGHVF3-G6*06","IGHVF3-G6*07","IGHVF3-G6*08","IGHVF3-G7*01","IGHVF3-G7*02","IGHVF3-G7*03","IGHVF3-G7*04","IGHVF3-G7*05","IGHVF3-G8*01","IGHVF3-G8*02","IGHVF3-G8*03","IGHVF3-G8*04","IGHVF3-G9*01","IGHVF3-G9*02","IGHVF3-G9*03","IGHVF3-G9*04","IGHVF3-G10*01","IGHVF3-G10*02","IGHVF3-G10*03","IGHVF3-G10*04","IGHVF3-G10*05","IGHVF3-G10*06","IGHVF3-G10*07","IGHVF3-G11*01","IGHVF3-G11*02","IGHVF3-G11*03","IGHVF3-G11*04","IGHVF3-G11*05","IGHVF3-G11*06","IGHVF3-G12*01","IGHVF3-G12*02","IGHVF3-G12*03","IGHVF3-G12*04","IGHVF4-G13*01","IGHVF4-G13*02","IGHVF4-G14*01","IGHVF4-G14*02","IGHVF4-G14*03","IGHVF4-G14*04","IGHVF5-G15*01","IGHVF5-G16*01","IGHVF5-G16*02","IGHVF5-G16*03","IGHVF5-G16*04","IGHVF6-G17*01","IGHVF6-G18*01","IGHVF6-G19*01","IGHVF6-G19*02","IGHVF6-G19*03","IGHVF6-G20*01","IGHVF6-G20*02","IGHVF6-G21*01","IGHVF6-G21*02","IGHVF6-G21*03","IGHVF6-G21*04","IGHVF6-G21*05","IGHVF6-G21*06","IGHVF6-G21*07","IGHVF6-G21*08","IGHVF6-G21*09","IGHVF6-G21*10","IGHVF6-G21*11","IGHVF6-G21*12","IGHVF6-G21*13","IGHVF6-G21*14","IGHVF6-G21*15","IGHVF6-G21*16","IGHVF6-G22*01","IGHVF6-G22*02","IGHVF6-G22*03","IGHVF6-G23*01","IGHVF6-G23*02","IGHVF6-G23*03","IGHVF6-G24*01","IGHVF6-G24*02","IGHVF6-G24*03","IGHVF6-G24*04","IGHVF6-G24*05","IGHVF6-G25*01","IGHVF6-G25*02","IGHVF6-G25*03","IGHVF6-G26*01","IGHVF6-G26*02","IGHVF6-G26*03","IGHVF6-G27*01","IGHVF6-G27*02","IGHVF6-G27*03","IGHVF6-G27*04","IGHVF6-G27*05","IGHVF6-G28*01","IGHVF6-G29*01","IGHVF6-G30*01","IGHVF6-G31*01","IGHVF6-G31*02","IGHVF6-G31*03","extractAllele","prediction","percentage","cap","AlleleCallOHE","flattenedArray","array","flat","valueIndexPairs","map","a","b","threshold","sum","pair","cumulativeConfidence","alleles","probability","push","prob","extratSegmentation","totalPadding","Math","floor","maxLength","round","arraySync","calculatePadSize","extractGermline","s1","s2","alignmentScore","velocity","lastMatch","isMatch","shortSegment","refSeq","k","s","L_seg","L_ref","L_diff","adjustedS","endWindow","minDifference","Infinity","bestEndPos","offset","refWindow","difference","AA_Score","startWindow","endBasedStart","bestStartPos","startSearchRange","currentStart","currentEnd","abs","results","segment","referenceAlleles","call_id","segmentedSequence","segmentLength","referenceSequence","referenceLength","refStart","refEnd","alignWithGermline","_ref2","HeuristicReferenceMatcher","extratProductivity","processBatch","batchKeys","confidences","caps","outputIndices","encodedSequencesPromises","item","replace","toUpperCase","Promise","all","stackSequences","predicted","tensorsToDispose","sequences","values","tensorData","tensorArray","tensor","includes","dynamicCumulativeConfidenceThreshold","assesProductivity","calculateSegment","element","charAt","dictionary","entries","segments","dispose","countSequencesInBatch","batchContent","filter","Boolean","countTotalSequences","batchSize","totalSequences","buffer","readChunk","start","end","resolve","reject","onerror","fileSize","size","fastaStartIndex","indexOf","submitSequences","sequenceInput","fileInput","setResults","then","catch","readFileContent","sequenceData","numElements","remainingKeys","currentBatchSize","processAllBatches","Submission","modelReady","setSubmission","submission","submissionStatus","setSubmissionStatus","time","setTime","handleClick","startTime","Date","getTime","endTime","window","alert","disabled","handleReset","seconds","ResultsHTMLTable","overflowX","join","v_likelihoods","d_likelihoods","j_likelihoods","getColor","likelihood","SelectWidget","call","reference","setSelected","selected","selectedAllele","setSelectedAllele","likelihoods","seq","getGermlineSequence","document","querySelector","textContent","likelihoodElement","Number","toFixed","backgroundColor","SelectWidgetVertical","_ref3","setSplitedSeq","splitedSeq","splitSequence","maxCharsPerRow","numRows","ceil","chunkSize","chunks","AlignmentBrowser","_ref4","selectedSequenceV","setSelectedSequenceV","selectedSequenceD","setSelectedSequenceD","selectedSequenceJ","setSelectedSequenceJ","selectedAlleleV","setSelectedAlleleV","selectedAlleleD","setSelectedAlleleD","selectedAlleleJ","setSelectedAlleleJ","selectedLikelihoodV","setSelectedLikelihoodV","selectedLikelihoodD","setSelectedLikelihoodD","selectedLikelihoodJ","setSelectedLikelihoodJ","splitedSequenceV","setSplitedSequenceV","splitedSequenceD","setSplitedSequenceD","splitedSequenceJ","setSplitedSequenceJ","v_germline_start","v_germline_end","d_germline_start","d_germline_end","j_germline_start","j_germline_end","rows","isVerticalView","setIsVerticalView","d_left_margin","j_left_margin","toggleView","gridRow","gridColumn","chunk","marginLeft","TabSetResults","_ref5","activeTab","setActiveTab","_ref6","_ref7","DownloadResultsTable","_ref10","data","_ref8","_ref9","sequence_id","sequence_alignment","substring","ResultsTSVTable","headers","tsv","row","header","blob","Blob","url","URL","createObjectURL","download","AlignairPageResults","ToolPageApp","setModelReady","vSeg","dSeg","jSeg","Routing","Routes","Route","path","Navigate","to","rootElement","getElementById","ReactDOM","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.442ac029.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alignair_logo.766699c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing_page.a090c432.jpg\";","import React from 'react';\nimport Logo from './images/alignair_logo.svg';\n\nconst assets = {\n  Logo\n  }\n\nconst Header = () => (\n  <header>\n    {/* <div className=\"logo\">AlignAIR</div> */}\n    <div className=\"logo\">\n      <a href=\"#/\">\n        <img src={assets.Logo} alt=\"logo\" style={{ width: '100px', height: 'auto', borderRadius: '0px' }}/>\n      </a>\n    </div>\n    <nav>\n      <a href=\"#/\">Home</a>\n      <a href=\"#/alignair\">AlignAIR tool</a>\n      {/* <a href=\"#\">Help</a>\n      <a href=\"#\">About</a> */}\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React  from 'react';\nimport Header from './alignairPageHeader';\nimport Image from './images/landing_page.jpg'\nimport Logo from './images/alignair_logo.svg';\n\nconst assets = {\n    Image,\n    Logo\n  }\n\n// TODO replace the github link with the actual github link  \nexport default function HomePageAPP(){\n    return(\n        <div>\n                <Header />\n                <div className=\"content-home\">\n                    <h1 style={{ fontSize: '64px', fontFamily: 'Inter, sans-serif' }}>AlignAIR</h1>\n                    {/* <img src={assets.Logo} alt=\"Computer screen with dna\"  style={{ width: '200px', height: 'auto', borderRadius: '0px' }}/> */}\n                    <p style={{ fontSize: '24px', fontFamily: 'Inter, sans-serif', color: \"#828282\"}}>Improving immunoglobulin sequence alignment.</p>\n                    <a href=\"#/alignair\" className=\"start-button\" style={{fontSize: \"20px\", padding: '15px 30px'}}>Start</a>\n                    <img src={assets.Image} alt=\"Computer screen with dna\" width=\"800\" height=\"600\"/>\n                </div>\n                <footer>\n                    <div className=\"footer-logo\">AlignAIR</div>\n                    <a href=\"https://github.com\" className=\"github-logo\">\n                        <i className=\"fab fa-github\" style={{fontSize: '24px', color: '#828282'}}></i>\n                    </a>\n                </footer>\n        </div>\n    )\n};\n\n\n\n\n","import * as tf from \"@tensorflow/tfjs\";\n\n\nexport class SequenceTokenizer {\n  /**\n   * Create a SequenceTokenizer.\n   */\n  \n  static tokenizerDictionary = {\n    \"A\": 1,\n    \"T\": 2,\n    \"G\": 3,\n    \"C\": 4,\n    \"N\": 5,\n    \"P\": 0,  // pad token\n  };\n\n  static padArrays = {};\n\n  /**\n   * Encodes and equal pad a sequence.\n   * @param {string} sequence - The input sequence to encode and pad.\n   * @param {number} maxSeqLength - The maximum sequence length.\n   * @returns {number[]} The encoded and padded sequence.\n   */\n  static encodeAndEqualPadSequence(sequence, maxSeqLength = 576) {\n    sequence = sequence.split('');\n    const encodedSequence = new Float32Array(sequence.length);\n    \n    for (let i = 0; i < sequence.length; i++) {\n      encodedSequence[i] = this.tokenizerDictionary[sequence[i]] || 0;\n    }\n    const remainingLength = maxSeqLength - encodedSequence.length;\n    let paddingArray = this.padArrays[remainingLength];\n    if (!paddingArray) {\n      paddingArray = new Float32Array(remainingLength);\n      const paddingLength = remainingLength % 2 === 0 ? remainingLength / 2 : (remainingLength + 1) / 2;\n      paddingArray.fill(0, 0, paddingLength);\n      this.padArrays[remainingLength] = paddingArray;\n    }\n    const padStart = paddingArray.slice(0, paddingArray.length / 2);\n    const padEnd = paddingArray.slice(paddingArray.length / 2);\n    const finalSequence = new Float32Array(maxSeqLength);\n    finalSequence.set(padStart, 0);\n    finalSequence.set(encodedSequence, padStart.length);\n    finalSequence.set(padEnd, padStart.length + encodedSequence.length);\n    return finalSequence;\n\n  }\n\n  /**\n   * Tokenizes a single sequence.\n   * @param {string} sequence - The input sequence to tokenize.\n   * @param {number} maxSeqLength - The maximum sequence length.\n   * @returns {Object} The tokenized sequence.\n   */\n  static tokenizeSingleSequence(sequence, maxSeqLength = 576) {\n    const paddedArray = SequenceTokenizer.encodeAndEqualPadSequence(sequence, maxSeqLength);\n    \n    const paddedSequenceTensor = tf.tensor2d([paddedArray], [1, maxSeqLength], 'float32');\n    const input = {\n      'tokenized_sequence': paddedSequenceTensor\n    };\n\n    return input;\n  }\n}","import * as tf from '@tensorflow/tfjs';\nimport { SequenceTokenizer} from './processSequence';\nimport React, { useEffect } from 'react';\n// functions\nexport async function loadModel(model_url) {\n  const model = await tf.loadGraphModel(model_url);\n  const indices = {\n    mutation_rate: 0,\n    v_call: 1,\n    d_sequence_start: 2,\n    v_sequence_start: 3,\n    d_sequence_end: 4,\n    j_sequence_end: 5,\n    v_sequence_end: 6,\n    j_call: 7,\n    ar_indels: 8,\n    j_sequence_start: 9,\n    d_call: 10,\n    productive: 11,\n  }\n  //await getModelOutputIndices(model, desiredModelOutputNames);\n  return { model, indices };\n}\n\n// export async function getModelOutputIndices(model, desiredModelOutputNames) {\n//   if (!model) {\n//     console.error(\"Model not loaded yet.\");\n//     return null;\n//   }\n\n//   const outputIndices = {};\n//   Object.keys(model.signature.outputs).forEach((key, index) => {\n//     if (desiredModelOutputNames.includes(key)) {\n//       outputIndices[key] = index;\n//     }\n//   });\n\n//   return outputIndices;\n// }\n\nexport async function warmUpModel(model, indices, maxSeqLength) {\n    //const isDevMode = process.env.NODE_ENV === 'development';\n    const seq = 'TGGCACTTCATCGTGTACTTACAGCGCCACCTCCTAACGGGGCCCCCTCCTTGATCCACACAGCGAATCCGCCACGACCTGCGATAGCTTCGAGCAGGCCTTCAGTGGACAACATACTCTCAGCTAGGCCACCACCATTCCACAGATGCAGCTGGTGCAATCTGGGTCTGAGTCGAAGAAGCCTGGGGCCTCATTGAAGGTTTCCTGCAAGGCTTCTGGAGACACCTTCACTAGGTATGCTATGAATTGGGTGCGACAGGCCCCGGGACAAGGGCTTGAGCGGATGGGATGGATCACCACCAACACTGAGAACCCAACGTCTGCCCAGGGCTTCACAGGACGCTTTGTCTTCTCCTTGGACACCTCTGTCAGAACGGCATATCTGCAGATCTGCAGCCTAACGGCTAAGGACACTGCCGTATATTATTGTGCGAGAGATAGACTGGGACCGTATTATTACTATCACTACATGGACGTCTGGGTCAAAGGGACCACGATCACCGTCTCCTCAG'\n    const encodedSequences = SequenceTokenizer.tokenizeSingleSequence(seq, maxSeqLength);\n    let status = 'success';\n    const predicted = model.predict(encodedSequences);\n    // console.log(predicted);\n    // console.log(\"mutation rate:\", predicted[0].arraySync()[0]) // mutation rate\n    // console.log(\"V allele:\",predicted[1].arraySync()[0]) // V allele\n    // console.log(\"D start:\",predicted[2].arraySync()[0]) // D start\n    // console.log(\"V start:\", predicted[3].arraySync()[0]) // V start\n    // console.log(\"D end:\",predicted[4].arraySync()[0]) // D end\n    // console.log(\"J end:\",predicted[5].arraySync()[0]) // J end\n    // console.log(\"V end:\",predicted[6].arraySync()[0]) // V end\n    // console.log(\"J allele:\",predicted[7].arraySync()[0]) // J allele\n    // console.log(\"Indels:\",predicted[8].arraySync()[0]) // indels\n    // console.log(\"J start:\",predicted[9].arraySync()[0]) // J start\n    // console.log(\"D allele:\",predicted[10].arraySync()[0]) // D allele\n    // console.log(\"Productive:\",predicted[11].arraySync()[0]) // productive\n    if (!predicted) {\n        console.error(\"Prediction failed.\");\n        status = 'failed'\n        return status;\n    }\n    return status;\n}\n\nfunction LoadModelComponent({ setSelectedChain, selectedChain, setModel, setOutputIndices, setIsLoading }) {\n    // constants\n    const model_urls = {\n        IGH: \"tfjs/AlignAIRR/model.json\",\n        IGK: \"tfjs/AlignAIRR/model.json\",\n        IGL: \"tfjs/AlignAIRR/model.json\",\n    };\n\n    const maxSeqLength = 576;\n\n    const fetchModel = async () => {\n        const model_url = model_urls[selectedChain];\n        try {\n            // Fetch model\n            console.log(`Fetching model from ${model_url}`);\n            const response = await fetch(model_url);\n            const arrayBuffer = await response.arrayBuffer();\n            \n            // Validate buffer length\n            console.log(\"Buffer length:\", arrayBuffer.byteLength);\n            if (arrayBuffer.byteLength % 4 !== 0) {\n                throw new Error(\"Buffer length is not a multiple of 4\");\n            }\n\n            // Convert buffer to Float32Array\n            const floatArray = new Float32Array(arrayBuffer);\n            console.log(\"Float32Array created successfully\");\n\n            // Load the model\n            const { model, indices } = await loadModel(model_url);\n            setModel(model);\n            setOutputIndices(indices);\n            setIsLoading(false);\n            console.log('Model loaded successfully');\n\n            // Warm up the model\n            const status = warmUpModel(model, indices, maxSeqLength);\n            if (status === 'success') {\n                console.log('Warmup completed.');\n            }\n        } catch (error) {\n            console.error(\"Error loading model:\", error);\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchModel();\n    }, [selectedChain]);\n\n    // Function to handle button selection\n    const selectButton = (buttonId) => {\n        setSelectedChain(buttonId);\n    };\n\n    return (\n        <div>\n            <div className=\"row\">\n                <p>Immunoglobulin Chain</p>\n                <div className=\"btn-group\">\n                    <button onClick={() => selectButton('IGH')} className={selectedChain === 'IGH' ? 'selected' : ''}>IGH</button>\n                    <button onClick={() => selectButton('IGK')} className={selectedChain === 'IGK' ? 'selected' : ''}>IGK</button>\n                    <button onClick={() => selectButton('IGL')} className={selectedChain === 'IGL' ? 'selected' : ''}>IGL</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoadModelComponent;\n","import React, { useRef, useState } from 'react';\n\nexport default function FileUpload({setFile}){\n    const fileInputRef = useRef(null);\n    const dragAreaRef = useRef(null);\n    const fileInfoRef = useRef(null);\n    const [fileName, setFileName] = useState('');\n    const [sequenceCount, setSequenceCount] = useState(0);\n\n    const setRefs = (instance) => {\n        dragAreaRef.current = instance;\n      };\n\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            processFile(file);\n            setFile(file);\n        }\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        dragAreaRef.current.classList.add('active');\n    };\n\n    const handleDragLeave = () => {\n        dragAreaRef.current.classList.remove('active');\n    };\n\n    const handleFileDrop = (event) => {\n        event.preventDefault(); \n        const file = event.dataTransfer.files[0];\n        if (file) {\n            console.log(file);\n            fileInputRef.current.files = event.dataTransfer.files;\n            processFile(file);\n            setFile(file);\n        }\n        dragAreaRef.current.classList.remove('active');\n    };\n\n    const processFile = (file) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const content = e.target.result;\n            const sequenceCount = countSequences(content);\n            console.log(sequenceCount);\n            setFileName(file.name);\n            setSequenceCount(sequenceCount);\n            displayFileInfo();\n        };\n        reader.readAsText(file);\n    };\n\n    const countSequences = (content) => {\n        const lines = content.split('\\n');\n        let count = 0;\n        for (const line of lines) {\n            if (line.startsWith('>')) {\n                count++;\n            }\n        }\n        return count;\n    };\n\n    const displayFileInfo = () => {\n        fileInfoRef.current.style.display = 'flex';\n        dragAreaRef.current.style.display = 'none';\n    };\n\n    const clearFile = () => {\n\n        if (fileInputRef.current) {\n            fileInputRef.current.value = '';\n        }\n        dragAreaRef.current.style.display = 'flex';\n        fileInfoRef.current.style.display = 'none';\n        setFileName('');\n        setSequenceCount(0);\n        setFile(null);\n    };\n\n    const handleBrowseClick = () => {\n        fileInputRef.current.click();\n      };\n\n    return (\n        <>\n            <div className=\"row\">\n                <p>Upload your File :</p>\n                <button id=\"clearFile\" className=\"example-button\" onClick={clearFile}>Clear File</button>\n            </div>\n            <div className=\"drag-area\" id=\"dragArea\" ref={setRefs} style={{ display: 'flex' }} onDragOver={handleDragOver} onDragLeave={handleDragLeave} onDrop={handleFileDrop}>\n                <div className=\"icon\">\n                    <i className=\"fas fa-images\"></i>\n                </div>  \n                <span className=\"header\">Drag & Drop</span>\n                <span className=\"header\">or </span>\n                <span className=\"button\" onClick={handleBrowseClick}>browse</span>\n                <input type=\"file\" ref={fileInputRef} style={{ display: 'none'}} onChange={handleFileUpload} />\n                <span className=\"support\">Supports: Fasta</span>\n            </div>\n            <div ref={fileInfoRef} style={{ display: 'none' }}>\n                File Name: {fileName}\n                <br />\n                Number of Sequences: {sequenceCount}\n            </div>\n        </>\n    )\n};\n","import React, { useRef} from 'react';\n\nexport default function SequenceInput({selectedChain, setSequence, sequence}){\n    const sequenceInputRef = useRef(null);\n\n    const example_sequences = {\n        IGH:\"CAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTGCTGTGCGAGAAAACTGGTGGTGTATGCTCCTATCTCCCACATAGGGCTTGGTACTTCGATCTCTGGGGCCGTGGCACCCTGGTCACTGTCTCCTCAG\",\n        IGK:\"CAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTGCTGTGCGAGAAAACTGGTGGTGTATGCTCCTATCTCCCACATAGGGCTTGGTACTTCGATCTCTGGGGCCGTGGCACCCTGGTCACTGTCTCCTCAG\",\n        IGL:\"CAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTGCTGTGCGAGAAAACTGGTGGTGTATGCTCCTATCTCCCACATAGGGCTTGGTACTTCGATCTCTGGGGCCGTGGCACCCTGGTCACTGTCTCCTCAG\"\n    };\n\n    const handleExample = () => {\n        if (selectedChain) {\n          sequenceInputRef.current.value = example_sequences[selectedChain];\n          setSequence(sequenceInputRef.current.value);\n        }\n    };\n    \n    const clear = () => {\n        sequenceInputRef.current.value = '';\n        setSequence(sequenceInputRef.current.value);\n    }\n\n    return (\n        <>\n            <div className=\"row\">\n                <p>Or enter a sequence :</p>\n                <button className=\"example-button\" onClick={handleExample} ref={sequenceInputRef}>Sequence example</button>\n            </div>\n            <div className=\"sequence-text-area\">\n                <textarea id=\"sequenceInput\" value={sequence} onChange={e => setSequence(e.target.value)}> </textarea>\n                <button onClick={clear}>\n                    <span id=\"clear-btn\">Clear</span>\n                </button>\n            </div>\n        </>\n    )\n\n}\n","import React from 'react';\n\nexport default function ParamInput({setParams, params}){\n\n    const handleInputChange = (e) => {\n        const { id, value } = e.target;\n        setParams((prevInputs) => ({\n            ...prevInputs,\n            [id]: value,\n        }));\n    };\n\n    return (\n        <>\n            <p>Alignment format option :</p>\n            <div className=\"alignment-param-area\">\n                <div className=\"alignment-input-row\">\n                    <div></div>\n                    <div>V</div>\n                    <div>D</div>\n                    <div>J</div>\n                </div>\n                <div className=\"alignment-input-row\">\n                    <div>Cap number of assignments</div>\n                    <div><input type=\"number\" id=\"vCap\" className=\"numberSpinButton\" min=\"1\" max=\"100\" value={params.vCap} onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"dCap\" className=\"numberSpinButton\" min=\"1\" max=\"100\" value={params.dCap} onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"jCap\" className=\"numberSpinButton\" min=\"1\" max=\"100\" value={params.jCap} onChange={handleInputChange}/></div>\n                </div>\n                <div className=\"alignment-input-row\">\n                    <div>Confidence threshold</div>\n                    <div><input type=\"number\" id=\"vConf\" className=\"numberSpinButton\" min=\"0\" max=\"1\" value={params.vConf} step=\"0.01\" onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"dConf\" className=\"numberSpinButton\" min=\"0\" max=\"1\" value={params.dConf} step=\"0.01\" onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"jConf\" className=\"numberSpinButton\" min=\"0\" max=\"1\" value={params.jConf} step=\"0.01\" onChange={handleInputChange}/></div>\n                </div>\n                {/* <div className=\"alignment-input-row\">\n                    <div>Segmentation threshold</div>\n                    <div><input type=\"number\" id=\"vSeg\" className=\"numberSpinButton\" min=\"0.01\" max=\"1\" value={params.vSeg} step=\"0.01\" onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"dSeg\" className=\"numberSpinButton\" min=\"0.01\" max=\"1\" value={params.dSeg} step=\"0.01\" onChange={handleInputChange}/></div>\n                    <div><input type=\"number\" id=\"jSeg\" className=\"numberSpinButton\" min=\"0.01\" max=\"1\" value={params.jSeg} step=\"0.01\" onChange={handleInputChange}/></div>\n                </div> */}\n            </div>\n        </>\n    )\n\n}\n","import React from 'react';\nimport LoadModelComponent from './loadModel';\nimport FileUpload from './fileUpload';\nimport SequenceInput from './sequenceInput';\nimport ParamInput from './paramInput';\nfunction Content({setSelectedChain, selectedChain, setFile, setSequence, sequence, setModel, setOutputIndices, setIsLoading, params, setParams}) {\n    return(\n        <div className=\"content\">\n            <div className=\"left-column\">\n                <LoadModelComponent setSelectedChain={setSelectedChain} selectedChain={selectedChain} setModel={setModel} setOutputIndices={setOutputIndices} setIsLoading={setIsLoading}/>\n                <SequenceInput selectedChain={selectedChain} setSequence={setSequence} sequence={sequence}/>\n                <FileUpload setFile={setFile}/>\n            </div>\n            <div className=\"right-column\">\n            <ParamInput params={params} setParams={setParams}/>\n                <p> Genotype parameters :</p>\n                <div className=\"genotype-param-area\">\n                    <div className=\"text-placeholder placeholder\"></div>\n                    <div className=\"text-placeholder placeholder\"></div>\n                    <div className=\"text-placeholder placeholder\"></div>\n                    <div className=\"text-placeholder placeholder\"></div>\n                </div>\n            </div>\n        </div>\n    )\n  };\n\nexport default Content;\n\n","import {IGHV,IGHD,IGHJ,IGHVnameConvert} from \"./Reference\";\n\nexport class FastaReader {\n    \n    queryToDict(fastaContent) {\n        const fastaLines = fastaContent.split('\\n');\n        \n        const dataDict = {};\n        let currentKey = '';\n        let currentValue = '';\n        let currentQuery = 0;\n        \n        fastaLines.forEach((line, index) => {\n            \n            if (index === 0 && !line.startsWith('>')){\n                currentKey = 'seq 1';\n                dataDict['query ' + currentQuery] = { name: currentKey, sequence: ''};\n            }\n            if (line.startsWith('>')) {\n                if (currentKey && currentValue) {\n                    dataDict['query ' + currentQuery] = { name: currentKey, sequence: currentValue };\n                    currentQuery += 1;\n                }\n                currentKey = line.slice(1).trim();\n                currentValue = '';\n            } else {\n                currentValue += line.trim();\n            }\n        });\n        if (currentKey && currentValue) {\n            dataDict['query ' + currentQuery] = { name: currentKey, sequence: currentValue };\n        }\n        \n        return dataDict;\n    }\n\n    fastaToDict(fastaContent) {\n        const fastaLines = fastaContent.split('\\n');\n        const dataDict = {};\n        let currentKey = '';\n        let currentValue = '';\n        fastaLines.forEach(line => {\n            if (line.startsWith('>')) {\n                if (currentKey && currentValue) {\n                    dataDict[currentKey] = currentValue;\n                }\n                currentKey = line.slice(1).trim();\n                currentValue = '';\n            } else {\n                currentValue += line.trim();\n            }\n        });\n        if (currentKey && currentValue) {\n            dataDict[currentKey] = currentValue;\n        }\n        return dataDict;\n    }\n\n    sortAndReturnDict(fastaContent) {\n        const dataDict = this.fastaToDict(fastaContent);\n        const sortedDataDict = Object.keys(dataDict).sort().reduce((obj, key) => {\n            obj[key] = dataDict[key];\n            return obj;\n        }, {});\n\n        const alleleCallOHE = {};\n        Object.keys(sortedDataDict).forEach((allele, index) => {\n            alleleCallOHE[index] = {\n                name:allele,\n                sequence:sortedDataDict[allele]\n            };\n        });\n\n        return { alleleCallOHE, sortedDataDict };\n    }\n\n    processFastaContents(IGHV, IGHD, IGHJ, IGHVnameConvert) {\n        const { alleleCallOHE: vAlleleCallOHE, sortedDataDict: sortedIGHVDataDict } = this.sortAndReturnDict(IGHV);\n        // go over each name in the vAlleleCallOHE and convert the name to the IGHVnameConvert\n        Object.keys(vAlleleCallOHE).forEach((key) => {\n            vAlleleCallOHE[key].name = IGHVnameConvert[vAlleleCallOHE[key].name];\n        });\n\n        const { alleleCallOHE: dAlleleCallOHE, sortedDataDict: sortedIGHDDataDict } = this.sortAndReturnDict(IGHD);\n        dAlleleCallOHE[Object.keys(dAlleleCallOHE).length] = {name:\"Short-D\",sequence:\"\"};\n        const { alleleCallOHE: jAlleleCallOHE, sortedDataDict: sortedIGHJDataDict } = this.sortAndReturnDict(IGHJ);\n\n        return {\n            vAlleleCallOHE,\n            sortedIGHVDataDict,\n            dAlleleCallOHE,\n            sortedIGHDDataDict,\n            jAlleleCallOHE,\n            sortedIGHJDataDict,\n        };\n    }\n}\n\nexport const fastaReader = new FastaReader();\nexport const {\n    vAlleleCallOHE,\n    sortedIGHVDataDict,\n    dAlleleCallOHE,\n    sortedIGHDDataDict,\n    jAlleleCallOHE,\n    sortedIGHJDataDict,\n} = fastaReader.processFastaContents(IGHV, IGHD, IGHJ, IGHVnameConvert);\n\n\n","export const IGHV = `\n>IGHVF1-G1*01\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAATATGGACCCTGTGGACACAGCCACATATTACTGTGCATGGATAC\n>IGHVF1-G1*02\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACGGATAC\n>IGHVF1-G1*03\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAATATGGACCCTGTGGACACAGCCACATATTACTGTGCACGGATAC\n>IGHVF1-G2*01\nCAGATCACCTTGAAGGAGTCTGGTCCTACGCTGGTGAAACCCACACAGACCCTCACGCTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAGTGGGTGTGGGCTGGATCCGTCAGCCCCCAGGAAAGGCCCTGGAGTGGCTTGCACTCATTTATTGGAATGATGATAAGCGCTACAGCCCATCTCTGAAGAGCAGGCTCACCATCACCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACACAGAC\n>IGHVF1-G2*02\nCAGATCACCTTGAAGGAGTCTGGTCCTACGCTGGTGAAACCCACACAGACCCTCACGCTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAGTGGGTGTGGGCTGGATCCGTCAGCCCCCAGGAAAGGCCCTGGAGTGGCTTGCACTCATTTATTGGGATGATGATAAGCGCTACAGCCCATCTCTGAAGAGCAGGCTCACCATCACCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACACAGAC\n>IGHVF1-G3*01\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGGTCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACTCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGA\n>IGHVF1-G3*02\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACTCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*03\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*04\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGTGAGCTGGATCCGTCAGCCCCCAGGTAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*05\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGCGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*06\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF2-G4*01\nCAGGTACAGCTGCAGCAGTCAGGTCCAGGACTGGTGAAGCCCTCGCAGACCCTCTCACTCACCTGTGCCATCTCCGGGGACAGTGTCTCTAGCAACAGTGCTGCTTGGAACTGGATCAGGCAGTCCCCATCGAGAGGCCTTGAGTGGCTGGGAAGGACATACTACAGGTCCAAGTGGTATAATGATTATGCAGTATCTGTGAAAAGTCGAATAACCATCAACCCAGACACATCCAAGAACCAGTTCTCCCTGCAGCTGAACTCTGTGACTCCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF2-G4*02\nCAGGTACAGCTGCAGCAGTCAGGTCCAGGACTGGTGAAGCCCTCGCAGACCCTCTCACTCACCTGTGCCATCTCCGGGGACAGTGTCTCTAGCAACAGTGCTGCTTGGAACTGGATCAGGCAGTCCCCATCGAGAGGCCTTGAGTGGCTGGGAAGGACATACTACAGGTCCAAGTGGTATAATGATTATGCAGTATCTGTGAAAAGTTGAATAACCATCAACCCAGACACATCCAAGAACCAGTTCTCCCTGCAGCTGAACTCTGTGACTCCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF3-G5*01\nCAGGTGCAGCTACAGCAGTGGGGCGCAGGACTGTTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCGCTGTCTATGGTGGGTCCTTCAGTGGTTACTACTGGAGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCAATCATAGTGGAAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCTGTGTATTACTGTGCGAGAGG\n>IGHVF3-G6*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGA\n>IGHVF3-G6*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G6*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGACA\n>IGHVF3-G6*06\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTAAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G6*07\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*08\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTCACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G7*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G7*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAGGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G8*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTGCTGTGCGAGAGA\n>IGHVF3-G8*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G8*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G8*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G9*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCATCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*02\nCAGGTACAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCATCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*04_A319G\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTGGTTACTACTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTTACTCCATCAGCAGTGGTTACTACTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*03\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*04\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCAGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G10*05\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCAAGAC\n>IGHVF3-G10*06\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCGAGACA\n>IGHVF3-G10*07\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACGTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCGAGAC\n>IGHVF3-G11*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G11*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCTAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G11*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G11*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGTTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAG\n>IGHVF3-G11*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGATTACTACTGGAGTTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G11*06\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGATTACTACTGGAGCTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAG\n>IGHVF3-G12*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*02\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*03\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAGGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*04\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGTCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAGGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF4-G13*01\nGAAGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAGGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCAGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGAGGATTGATCCTAGTGACTCTTATACCAACTACAGCCCGTCCTTCCAAGGCCACGTCACCATCTCAGCTGACAAGTCCATCAGCACTGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G13*02\nGAAGTGCAGCTGGTGCAGTCCGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAGGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCAGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGAGGATTGATCCTAGTGACTCTTATACCAACTACAGCCCGTCCTTCCAAGGCCACGTCACCATCTCAGCTGACAAGTCCATCAGCACTGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*01\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCACCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*02\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCGGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTTACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGA\n>IGHVF4-G14*03\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*04\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCGGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF5-G15*01\nCAGGTGCAGCTGGTGCAGTCTGGCCATGAGGTGAAGCAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACAGTTTCACCACCTATGGTATGAATTGGGTGCCACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGTTCAACACCTACACTGGGAACCCAACATATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCATGGACACCTCTGCCAGCACAGCATACCTGCAGATCAGCAGCCTAAAGGCTGAGGACATGGCCATGTATTACTGTGCGAGATA\n>IGHVF5-G16*01\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCACGGCATATCTGCAGATCTGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*02\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCACGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*03\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCATGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*04\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCATGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTGTTACTGTGCGAGAGA\n>IGHVF6-G17*01\nCAGGTCCAGCTGGTACAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGTTTCCGGATACACCCTCACTGAATTATCCATGCACTGGGTGCGACAGGCTCCTGGAAAAGGGCTTGAGTGGATGGGAGGTTTTGATCCTGAAGATGGTGAAACAATCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCGAGGACACATCTACAGACACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCAACAGA\n>IGHVF6-G18*01\nGAGGTCCAGCTGGTACAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCTACAGTGAAAATCTCCTGCAAGGTTTCTGGATACACCTTCACCGACTACTACATGCACTGGGTGCAACAGGCCCCTGGAAAAGGGCTTGAGTGGATGGGACTTGTTGATCCTGAAGATGGTGAAACAATATACGCAGAGAAGTTCCAGGGCAGAGTCACCATAACCGCGGACACGTCTACAGACACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCAACAGA\n>IGHVF6-G19*01\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAAGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTGTGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAG\n>IGHVF6-G19*02\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAGGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTGTGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAGA\n>IGHVF6-G19*03\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAGGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTATGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAGA\n>IGHVF6-G20*01\nCAGATGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGACTGGGTCCTCAGTGAAGGTTTCCTGCAAGGCTTCCGGATACACCTTCACCTACCGCTACCTGCACTGGGTGCGACAGGCCCCCGGACAAGCGCTTGAGTGGATGGGATGGATCACACCTTTCAATGGTAACACCAACTACGCACAGAAATTCCAGGACAGAGTCACCATTACCAGGGACAGGTCTATGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACAGCCATGTATTACTGTGCAAGATA\n>IGHVF6-G20*02\nCAGATGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGACTGGGTCCTCAGTGAAGGTTTCCTGCAAGGCTTCCGGATACACCTTCACCTACCGCTACCTGCACTGGGTGCGACAGGCCCCCAGACAAGCGCTTGAGTGGATGGGATGGATCACACCTTTCAATGGTAACACCAACTACGCACAGAAATTCCAGGACAGAGTCACCATTACCAGGGACAGGTCTATGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACAGCCATGTATTACTGTGCAAGATA\n>IGHVF6-G21*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGATGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCAGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*04\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*05\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*06\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*07\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*08\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*09\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*10\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCACGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*11\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*12\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*13\nCAGGTCCAGCTGGTGCAATCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATACTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*14\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*15\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*16\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G22*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGCTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G22*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGTTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G22*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGCTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G23*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTGCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G23*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G23*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCTAGAGA\n>IGHVF6-G24*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGACGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGTCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGACGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G24*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACATAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*04\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*05\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCTGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*01\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTACGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*02\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTATGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*03\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTATGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACATGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*01\nCAGGTTCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGAGCAACGCTGGCAATGGTAACACAAAATATTCACAGGAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*02\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGAGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACGCTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*03\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACGCTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*04\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACACTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF7-G27*01\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACGTGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*02\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTGAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*03\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGATCAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*04\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF8-G28*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACCACTACATGGACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTGGCCGTACTAGAAACAAAGCTAACAGTTACACCACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAGAACTCACTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTGCTAGAGA\n>IGHVF8-G29*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAAACTCTCCTGTGCAGCCTCTGGGTTCACCTTCAGTGGCTCTGCTATGCACTGGGTCCGCCAGGCTTCCGGGAAAGGGCTGGAGTGGGTTGGCCGTATTAGAAGCAAAGCTAACAGTTACGCGACAGCATATGCTGCGTCGGTGAAAGGCAGGTTCACCATCTCCAGAGATGATTCAAAGAACACGGCGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTACTAGACA\n>IGHVF8-G29*02\nGAGGTGCAGCTGGTGGAGTCCGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAAACTCTCCTGTGCAGCCTCTGGGTTCACCTTCAGTGGCTCTGCTATGCACTGGGTCCGCCAGGCTTCCGGGAAAGGGCTGGAGTGGGTTGGCCGTATTAGAAGCAAAGCTAACAGTTACGCGACAGCATATGCTGCGTCGGTGAAAGGCAGGTTCACCATCTCCAGAGATGATTCAAAGAACACGGCGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTACTAGACA\n>IGHVF8-G30*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGTTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G30*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGTTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G30*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G31*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTTAGACTCTCCTGTGCAGCCTCTGGATTCACTTTCAGTAACGCCTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTGGCCGTATTAAAAGCAAAACTGATGGTGGGACAACAGACTACGCTGCACCCGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAAAACACGCTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACCACAGA\n>IGHVF8-G31*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTTAGACTCTCCTGTGCAGCCTCTGGTTTCACTTTCAGTAACGCCTGGATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCGGCCGTATTAAAAGCAAAACTGATGGTGGGACAACAGACTACGCTGCACCCGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAAAACACGCTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACCACAGA\n>IGHVF9-G32*01\nGAGACGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGGGCGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTGTATTACTGTACCAGAGA\n>IGHVF9-G32*02\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTGTATTAGTGTACCAGAGA\n>IGHVF9-G32*03\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTTGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTCTATTAGTGTACCAGAGA\n>IGHVF9-G32*04\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTCTATTAGTGTACCAGAGA\n>IGHVF10-G33*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCAAGAG\n>IGHVF10-G33*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACCCATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G33*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G33*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAATGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G34*01\nGAGGATCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGCGACCCTCCTGTGCAGCCTCTGGATTCGCCTTCAGTAGCTATGCTCTGCACTGGGTTCGCCGGGCTCCAGGGAAGGGTCTGGAGTGGGTATCAGCTATTGGTACTGGTGGTGATACATACTATGCAGACTCCGTGATGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAAGTCCTTGTATCTTCATATGAACAGCCTGATAGCTGAGGACATGGCTGTGTATTATTGTGCAAGAGA\n>IGHVF10-G34*02\nGAGGATCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACCCTCCTGTGCAGCCTCTGGATTCGCCTTCAGTAGCTATGTTCTGCACTGGGTTCGCCGGGCTCCAGGGAAGGGTCCGGAGTGGGTATCAGCTATTGGTACTGGTGGTGATACATACTATGCAGACTCCGTGATGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAAGTCCTTGTATCTTCAAATGAACAGCCTGATAGCTGAGGACATGGCTGTGTATTATTGTGCAAGAGA\n>IGHVF10-G35*01\nGAGGTGCAGCTGGTGGAGTCTCGGGGAGTCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGTCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGCATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTAAGAAAGA\n>IGHVF10-G35*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGTCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGTGTATTACTGTGCCAGATATA\n>IGHVF10-G35*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGCGTATTACTGTGCCAGATATA\n>IGHVF10-G35*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGTGTATTACTGTGCCAGATATA\n>IGHVF10-G36*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGTAGCACATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAG\n>IGHVF10-G37*02\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTAGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*03\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGCAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*04\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*05\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGCAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G37*06\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*07\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*08\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCATTTATACGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*09\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G37*10\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*11\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G38*01\nGAGGTGCAGCTGGTGGAGTCTGGGGAAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAGACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAAACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAGACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCAGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G38*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G38*06\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACTCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G39*01\nGAGGTGCAGCTGGTGGAGTCCGGGGGAGGCTTAGTTCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACTGGATGCACTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGTGTGGGTCTCACGTATTAATAGTGATGGGAGTAGCACAAGCTACGCGGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACACGCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G40*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*03\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCTGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*04\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGACACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*05\nGAGGTGCAGCTGGTGGAGACTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF10-G40*06\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*07\nGAGGTGCAGCTGGTGGAGACTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G41*01\nGAGGTGCAGCTGTTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGTAGCACATACTATGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGATAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G41*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGCTATTAGTGGTAGTGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G41*03\nGAGGTGCAGCTGTTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGCTATTAGTGGTAGTGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G42*01\nGAAATGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGAT\n>IGHVF10-G42*02\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACCTACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G42*03\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGAT\n>IGHVF10-G42*04\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATACCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAACTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G42*05\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCAGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTGGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAACTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G43*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATTACTGTGCGAGAGA\n>IGHVF10-G43*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATCACTGTGCGAGAGA\n>IGHVF10-G43*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTTTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATCACTGTGCGAGAGA\n>IGHVF10-G44*01\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATCACTGTGCAAAAG\n>IGHVF10-G44*02\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACATGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G44*03\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G44*04\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTCTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G45*01\nGAGGTGCAGCTGGTGGAGTCTGGGGAAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTCTGCTATGCACTGGGTCCGCCAGGCTCCAAGAAAGGGTTTGTAGTGGGTCTCAGTTATTAGTACAAGTGGTGATACCGTACTCTACACAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCCAGAATTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGACGACATGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G46*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGATACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCCGCAAGGCTCCAGGAAAGGGGCTGAAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G46*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCCGCAAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G46*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCTGCAAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G47*01\nACAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAGAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCGCCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTTCCTGTATCAGCAAATGAACAGCCTGAGGCCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G48*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGATCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCATCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCGATTCATCATCTCCAGAGACAATTCCAGGAACACCCTGTATCTGCAAACGAATAGCCTGAGGGCCGAGGACACGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G48*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGATCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCATCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCAATTCATCATCTCCAGAGACAATTCCAGGAACACCCTGTATCTGCAAACGAATAGCCTGAGGGCCGAGGACACGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G49*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAAGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGGG\n>IGHVF10-G49*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAAGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G49*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G49*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGGGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*02\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGGGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*03\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACACAAACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*04\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACACAAACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G51*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAATTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACAGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTTTATTACTGTGCGAGAGA\n>IGHVF10-G52*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGTTATGAAATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTTTATTACTGTGCGAGAGA\n>IGHVF10-G52*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*06\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGACGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n`;\n\nexport const IGHD = `\n>IGHD1-1*01\nGGTACAACTGGAACGAC\n>IGHD1-14*01\nGGTATAACCGGAACCAC\n>IGHD1-20*01\nGGTATAACTGGAACGAC\n>IGHD1-26*01\nGGTATAGTGGGAGCTACTAC\n>IGHD1-7*01\nGGTATAACTGGAACTAC\n>IGHD2-15*01\nAGGATATTGTAGTGGTGGTAGCTGCTACTCC\n>IGHD2-2*01\nAGGATATTGTAGTAGTACCAGCTGCTATGCC\n>IGHD2-2*02\nAGGATATTGTAGTAGTACCAGCTGCTATACC\n>IGHD2-21*01\nAGCATATTGTGGTGGTGATTGCTATTCC\n>IGHD2-21*02\nAGCATATTGTGGTGGTGACTGCTATTCC\n>IGHD2-8*01\nAGGATATTGTACTAATGGTGTATGCTATACC\n>IGHD2-8*02\nAGGATATTGTACTGGTGGTGTATGCTATACC\n>IGHD3-10*01\nGTATTACTATGGTTCGGGGAGTTATTATAAC\n>IGHD3-10*03\nGTATTACTATGGTTCAGGGAGTTATTATAAC\n>IGHD3-16*02\nGTATTATGATTACGTTTGGGGGAGTTATCGTTATACC\n>IGHD3-16*03\nGTATTATGATTACATTTGGGGGAGTTATCGTTATACC\n>IGHD3-22*01\nGTATTACTATGATAGTAGTGGTTATTACTAC\n>IGHD3-3*01\nGTATTACGATTTTTGGAGTGGTTATTATACC\n>IGHD3-9*01\nGTATTACGATATTTTGACTGGTTATTATAAC\n>IGHD4-11*01\nTGACTACAGTAACTAC\n>IGHD4-17*01\nTGACTACGGTGACTAC\n>IGHD4-23*01\nTGACTACGGTGGTAACTCC\n>IGHD4-4*01\nTGACTACAGTAACTAC\n>IGHD5-12*01\nGTGGATATAGTGGCTACGATTAC\n>IGHD5-18*01\nGTGGATACAGCTATGGTTAC\n>IGHD5-18*02\nGTGAATATAGTGGCTACGATTAC\n>IGHD5-24*01\nGTAGAGATGGCTACAATTAC\n>IGHD5-5*01\nGTGGATACAGCTATGGTTAC\n>IGHD6-13*01\nGGGTATAGCAGCAGCTGGTAC\n>IGHD6-19*01\nGGGTATAGCAGTGGCTGGTAC\n>IGHD6-25*01\nGGGTATAGCAGCGGCTAC\n>IGHD6-6*01\nGAGTATAGCAGCTCGTCC\n>IGHD7-27*01\nCTAACTGGGGA\n`;\n\nexport const IGHJ = `\n>IGHJ1*01\nGCTGAATACTTCCAGCACTGGGGCCAGGGCACCCTGGTCACCGTCTCCTCAG\n>IGHJ2*01\nCTACTGGTACTTCGATCTCTGGGGCCGTGGCACCCTGGTCACTGTCTCCTCAG\n>IGHJ3*02\nTGATGCTTTTGATATCTGGGGCCAAGGGACAATGGTCACCGTCTCTTCAG\n>IGHJ4*02\nACTACTTTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG\n>IGHJ5*02\nACAACTGGTTCGACCCCTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG\n>IGHJ6*02\nATTACTACTACTACTACGGTATGGACGTCTGGGGCCAAGGGACCACGGTCACCGTCTCCTCAG\n>IGHJ6*03\nATTACTACTACTACTACTACATGGACGTCTGGGGCAAAGGGACCACGGTCACCGTCTCCTCAG\n`;\n\nexport const IGHVnameConvert = {\n    \"IGHVF1-G1*01\": \"IGHV2-26*04\",\n    \"IGHVF1-G1*02\": \"IGHV2-26*01\",\n    \"IGHVF1-G1*03\": \"IGHV2-26*02\",\n    \"IGHVF1-G2*01\": \"IGHV2-5*01\",\n    \"IGHVF1-G2*02\": \"IGHV2-5*02\",\n    \"IGHVF1-G3*01\": \"IGHV2-70*20\",\n    \"IGHVF1-G3*02\": \"IGHV2-70*01\",\n    \"IGHVF1-G3*03\": \"IGHV2-70*15\",\n    \"IGHVF1-G3*04\": \"IGHV2-70D*14\",\n    \"IGHVF1-G3*05\": \"IGHV2-70*05\",\n    \"IGHVF1-G3*06\": \"IGHV2-70*04/IGHV2-70D*04\",\n    \"IGHVF2-G4*01\": \"IGHV6-1*01\",\n    \"IGHVF2-G4*02\": \"IGHV6-1*03\",\n    \"IGHVF3-G5*01\": \"IGHV4-34*01\",\n    \"IGHVF3-G6*01\": \"IGHV4-4*07\",\n    \"IGHVF3-G6*02\": \"IGHV4-4*08\",\n    \"IGHVF3-G6*03\": \"IGHV4-4*09\",\n    \"IGHVF3-G6*04\": \"IGHV4-59*12\",\n    \"IGHVF3-G6*05\": \"IGHV4-NL1*01\",\n    \"IGHVF3-G6*06\": \"IGHV4-59*i03\",\n    \"IGHVF3-G6*07\": \"IGHV4-59*01\",\n    \"IGHVF3-G6*08\": \"IGHV4-59*11\",\n    \"IGHVF3-G7*01\": \"IGHV4-61*02\",\n    \"IGHVF3-G7*02\": \"IGHV4-61*11\",\n    \"IGHVF3-G7*03\": \"IGHV4-61*10\",\n    \"IGHVF3-G7*04\": \"IGHV4-61*01\",\n    \"IGHVF3-G7*05\": \"IGHV4-61*i04\",\n    \"IGHVF3-G8*01\": \"IGHV4-4*01\",\n    \"IGHVF3-G8*02\": \"IGHV4-4*03\",\n    \"IGHVF3-G8*03\": \"IGHV4-4*02\",\n    \"IGHVF3-G8*04\": \"IGHV4-4*10\",\n    \"IGHVF3-G9*01\": \"IGHV4-28*02\",\n    \"IGHVF3-G9*02\": \"IGHV4-28*07\",\n    \"IGHVF3-G9*03\": \"IGHV4-28*05\",\n    \"IGHVF3-G9*04\": \"IGHV4-28*01/IGHV4-28*03\",\n    \"IGHVF3-G10*01\": \"IGHV4-38-2*01\",\n    \"IGHVF3-G10*02\": \"IGHV4-38-2*02\",\n    \"IGHVF3-G10*03\": \"IGHV4-39*07\",\n    \"IGHVF3-G10*04\": \"IGHV4-39*09\",\n    \"IGHVF3-G10*05\": \"IGHV4-39*i03\",\n    \"IGHVF3-G10*06\": \"IGHV4-39*01\",\n    \"IGHVF3-G10*07\": \"IGHV4-39*08\",\n    \"IGHVF3-G11*01\": \"IGHV4-31*11\",\n    \"IGHVF3-G11*02\": \"IGHV4-31*01\",\n    \"IGHVF3-G11*03\": \"IGHV4-30-4*09/IGHV4-31*03\",\n    \"IGHVF3-G11*04\": \"IGHV4-30-4*i02\",\n    \"IGHVF3-G11*05\": \"IGHV4-30-4*01\",\n    \"IGHVF3-G11*06\": \"IGHV4-30-4*08\",\n    \"IGHVF3-G12*01\": \"IGHV4-30-4*07\",\n    \"IGHVF3-G12*02\": \"IGHV4-30-2*05\",\n    \"IGHVF3-G12*03\": \"IGHV4-30-2*01\",\n    \"IGHVF3-G12*04\": \"IGHV4-30-2*06\",\n    \"IGHVF4-G13*01\": \"IGHV5-10-1*01\",\n    \"IGHVF4-G13*02\": \"IGHV5-10-1*03\",\n    \"IGHVF4-G14*01\": \"IGHV5-51*07\",\n    \"IGHVF4-G14*02\": \"IGHV5-51*06\",\n    \"IGHVF4-G14*03\": \"IGHV5-51*01\",\n    \"IGHVF4-G14*04\": \"IGHV5-51*03\",\n    \"IGHVF5-G15*01\": \"IGHV7-81*01\",\n    \"IGHVF5-G16*01\": \"IGHV7-4-1*01\",\n    \"IGHVF5-G16*02\": \"IGHV7-4-1*02\",\n    \"IGHVF5-G16*03\": \"IGHV7-4-1*04\",\n    \"IGHVF5-G16*04\": \"IGHV7-4-1*05\",\n    \"IGHVF6-G17*01\": \"IGHV1-24*01\",\n    \"IGHVF6-G18*01\": \"IGHV1-69-2*01\",\n    \"IGHVF6-G19*01\": \"IGHV1-58*03\",\n    \"IGHVF6-G19*02\": \"IGHV1-58*01\",\n    \"IGHVF6-G19*03\": \"IGHV1-58*02\",\n    \"IGHVF6-G20*01\": \"IGHV1-45*02\",\n    \"IGHVF6-G20*02\": \"IGHV1-45*03\",\n    \"IGHVF6-G21*01\": \"IGHV1-69*19\",\n    \"IGHVF6-G21*02\": \"IGHV1-69*i04\",\n    \"IGHVF6-G21*03\": \"IGHV1-69*17\",\n    \"IGHVF6-G21*04\": \"IGHV1-69*14\",\n    \"IGHVF6-G21*05\": \"IGHV1-69*06\",\n    \"IGHVF6-G21*06\": \"IGHV1-69*01/IGHV1-69D*01\",\n    \"IGHVF6-G21*07\": \"IGHV1-69*15\",\n    \"IGHVF6-G21*08\": \"IGHV1-69*18\",\n    \"IGHVF6-G21*09\": \"IGHV1-69*13\",\n    \"IGHVF6-G21*10\": \"IGHV1-69*05\",\n    \"IGHVF6-G21*11\": \"IGHV1-69*12\",\n    \"IGHVF6-G21*12\": \"IGHV1-69*10\",\n    \"IGHVF6-G21*13\": \"IGHV1-69*02\",\n    \"IGHVF6-G21*14\": \"IGHV1-69*20\",\n    \"IGHVF6-G21*15\": \"IGHV1-69*04\",\n    \"IGHVF6-G21*16\": \"IGHV1-69*09\",\n    \"IGHVF6-G22*01\": \"IGHV1-8*03\",\n    \"IGHVF6-G22*02\": \"IGHV1-8*01\",\n    \"IGHVF6-G22*03\": \"IGHV1-8*02\",\n    \"IGHVF6-G23*01\": \"IGHV1-46*04\",\n    \"IGHVF6-G23*02\": \"IGHV1-46*01\",\n    \"IGHVF6-G23*03\": \"IGHV1-46*03\",\n    \"IGHVF6-G24*01\": \"IGHV1-2*05\",\n    \"IGHVF6-G24*02\": \"IGHV1-2*06\",\n    \"IGHVF6-G24*03\": \"IGHV1-2*07\",\n    \"IGHVF6-G24*04\": \"IGHV1-2*02\",\n    \"IGHVF6-G24*05\": \"IGHV1-2*04\",\n    \"IGHVF6-G25*01\": \"IGHV1-18*04\",\n    \"IGHVF6-G25*02\": \"IGHV1-18*01\",\n    \"IGHVF6-G25*03\": \"IGHV1-18*03\",\n    \"IGHVF6-G26*01\": \"IGHV1-3*02\",\n    \"IGHVF6-G26*02\": \"IGHV1-3*01\",\n    \"IGHVF6-G26*03\": \"IGHV1-3*03\",\n    \"IGHVF6-G27*01\": \"IGHV1-69*08\",\n    \"IGHVF6-G27*02\": \"IGHV1-69*03\",\n    \"IGHVF6-G27*03\": \"IGHV1-69*11\",\n    \"IGHVF6-G27*04\": \"IGHV1-69D*03\",\n    \"IGHVF6-G27*05\": \"IGHV1-69D*02\",\n    \"IGHVF6-G28*01\": \"IGHV1-12*01\",\n    \"IGHVF6-G29*01\": \"IGHV1-46*02\",\n    \"IGHVF6-G30*01\": \"IGHV1-3*04\",\n    \"IGHVF6-G31*01\": \"IGHV1-58*04\",\n    \"IGHVF6-G31*02\": \"IGHV1-58*05\",\n    \"IGHVF6-G31*03\": \"IGHV1-58*06\"\n  };\n  ","export class extractAllele {\n    // get the annotation for each allele based on percentage and cap\n    static async dynamicCumulativeConfidenceThreshold(prediction, percentage = 0.9, cap = 3, AlleleCallOHE){\n        \n        const array = await prediction.array();\n        const flattenedArray = array.flat();\n        const valueIndexPairs = flattenedArray\n        .map((value, index) => ({ value, index }))\n        .sort((a, b) => b.value - a.value)\n        .slice(0, cap);\n        const totalConfidence = valueIndexPairs.reduce((sum, pair) => sum + pair.value, 0);\n        const threshold = percentage * totalConfidence;\n\n        let cumulativeConfidence = 0.0;\n        const alleles = [];\n        const probability = [];\n        for (const pair of valueIndexPairs) {\n        cumulativeConfidence += pair.value;\n        alleles.push(AlleleCallOHE[pair.index].name);\n        probability.push(flattenedArray[pair.index]);\n        if (cumulativeConfidence >= threshold || alleles.length >= cap) {\n            break;\n        }\n        }\n\n        return ({\n            index: alleles,\n            prob: probability\n        });\n        \n    };\n}\n\nexport class extratSegmentation {\n    \n    static calculatePadSize(sequence, maxLength = 576) {\n        const totalPadding = maxLength - sequence.length;\n        const padSize = Math.floor(totalPadding / 2);\n\n        return padSize;\n    }\n\n    static async calculateSegment(prediction, sequence, maxLength = 576){\n        \n        const segmenSize = Math.round(await prediction.arraySync());\n        const padSize = this.calculatePadSize(sequence, maxLength);\n        \n        return segmenSize-padSize;\n    };\n    \n    \n}\n\nexport class extractGermline {\n    \n    static calculatePadSize(sequence, maxLength = 576) {\n        const totalPadding = maxLength - sequence.length;\n        const padSize = Math.floor(totalPadding / 2);\n\n        return padSize;\n    }\n\n    static AA_Score(s1, s2) {\n        let alignmentScore = 0;\n        let velocity = 0;\n        const acceleration = 0.05;\n        let lastMatch = null;\n\n        for (let i = 0; i < s1.length && i < s2.length; i++) {\n            const isMatch = s1[i] === s2[i];\n            if (isMatch) {\n                if (lastMatch) {\n                    velocity += acceleration;\n                } else {\n                    velocity = acceleration;\n                }\n                alignmentScore -= 1 + velocity;\n            } else {\n                if (lastMatch === false) {\n                    velocity += acceleration;\n                } else {\n                    velocity = acceleration;\n                }\n                alignmentScore += 1 + velocity;\n            }\n            lastMatch = isMatch;\n        }\n\n        return alignmentScore;\n    }\n\n    static alignWithGermline(shortSegment, refSeq, k = 20, s = 25) {\n        if (shortSegment.length < k) return [-1, -1];\n\n        const L_seg = shortSegment.length;\n        const L_ref = refSeq.length;\n        const L_diff = L_ref - L_seg;\n        const adjustedS = Math.min(L_diff, s) + 1;\n        const endWindow = shortSegment.slice(-k);\n\n        let minDifference = Infinity;\n        let bestEndPos = L_ref;\n        for (let offset = 0; offset < adjustedS; offset++) {\n            const refWindow = refSeq.slice(L_ref - (k + offset), L_ref - offset);\n            const difference = this.AA_Score(endWindow, refWindow);\n            if (difference < minDifference) {\n                minDifference = difference;\n                bestEndPos = L_ref - offset;\n                if (minDifference === 0) break;\n            }\n        }\n\n        minDifference = Infinity;\n        const startWindow = shortSegment.slice(0, k);\n        const endBasedStart = bestEndPos - L_seg;\n        let bestStartPos = endBasedStart;\n        const startSearchRange = Math.min(9, L_diff);\n        for (let offset = -startSearchRange - 1; offset <= startSearchRange + 1; offset++) {\n            const currentStart = Math.max(0, endBasedStart + offset);\n            const currentEnd = Math.min(currentStart + k, L_ref);\n            const refWindow = refSeq.slice(currentStart, currentEnd);\n            if (refWindow.length !== startWindow.length) continue;\n            const difference = this.AA_Score(startWindow, refWindow) + Math.abs(offset);\n            if (difference < minDifference) {\n                minDifference = difference;\n                bestStartPos = currentStart;\n                if (difference === 0) break;\n            }\n        }\n\n        return [bestStartPos, bestEndPos];\n    }\n\n    static HeuristicReferenceMatcher({results, segment, referenceAlleles, call_id=0, k = 15, s = 30}) {\n        // get the alignment of the sequence.\n        \n        const segmentedSequence = results.sequence.slice(results[`${segment}_sequence_start`], results[`${segment}_sequence_end`]);\n        const segmentLength = segmentedSequence.length\n        const call = results[`${segment}_call`][call_id];\n        const referenceSequence = referenceAlleles[call];\n        const referenceLength = referenceSequence.length;\n       \n        if (segmentLength === referenceLength) {\n            return({\n                [segment+'_germline_start']: 0,\n                [segment+'_germline_end']: referenceLength\n            });\n        } else if (segmentLength > referenceLength) {\n            const [refStart, refEnd] = this.alignWithGermline(segmentedSequence, referenceSequence, k, s);\n            return({\n                [segment+'_germline_start']: refStart,\n                [segment+'_germline_end']: refEnd\n            });\n        } else if (segmentLength < referenceLength) {\n            const [refStart, refEnd] = this.alignWithGermline(segmentedSequence, referenceSequence, k, s);\n            if (refStart !== null) {\n                return({\n                    [segment+'_germline_start']: refStart,\n                    [segment+'_germline_end']: refEnd\n                });\n            } else {\n                throw new Error('Error in alignment');\n            }\n        }\n    }\n\n    static getGermlineSequence({results, segment, referenceAlleles, call_id=0, k = 15, s = 30}) {\n        const { [segment+'_germline_start']: refStart, [segment+'_germline_end']: refEnd } = this.HeuristicReferenceMatcher({results, segment, referenceAlleles, call_id, k, s});\n        const call = results[`${segment}_call`][call_id];\n        const referenceSequence = referenceAlleles[call];\n        return referenceSequence.slice(refStart, refEnd);\n    }\n}\n\nexport class extratProductivity {\n    \n    static async assesProductivity(prediction){\n        \n        const productive = await prediction.arraySync() > 0.5;\n        \n        return productive;\n    };\n    \n}\n","import * as tf from \"@tensorflow/tfjs\";\nimport { SequenceTokenizer } from \"./processSequence\";\nimport {extractAllele, extratSegmentation, extratProductivity, extractGermline} from \"./postProcessing\";\n\n// post processing of the batch\nexport async function processBatch(batchKeys, dataDict, AlleleCallOHE, confidences, caps, model, outputIndices) {\n    const batch = batchKeys.map(key => dataDict[key]);\n    const encodedSequencesPromises = batch.map(item => SequenceTokenizer.encodeAndEqualPadSequence(item.sequence.replace(/\\n/g, '').toUpperCase()));\n    const encodedSequences = await Promise.all(encodedSequencesPromises);\n    const stackSequences = tf.stack(encodedSequences);\n    const predicted = model.predict(stackSequences);\n    const tensorsToDispose = [];\n\n    const sequences = [];\n      Object.values(dataDict).forEach(item => {\n      sequences.push(item.sequence);\n    });\n\n    await Promise.all(['v_call', 'd_call', 'j_call', 'v_sequence_start', 'v_sequence_end', 'd_sequence_start', 'd_sequence_end', 'j_sequence_start', 'j_sequence_end', 'productive', 'mutation_rate', 'ar_indels'].map(async (allele) => {\n      const tensorData = predicted[outputIndices[allele]];\n      const tensorArray = tf.unstack(tensorData);\n      const processedData = await Promise.all(tensorArray.map(async (tensor, index) => {\n      if (['v_call', 'd_call', 'j_call'].includes(allele)) {\n        const alleles = extractAllele.dynamicCumulativeConfidenceThreshold(tensor, confidences[allele], caps[allele], AlleleCallOHE[allele]);\n        tensorsToDispose.push(tensor);\n        return alleles;\n      } else {\n        if (['mutation_rate', 'ar_indels'].includes(allele)){\n            const value = Math.abs(tensor.arraySync()[0]);\n            tensorsToDispose.push(tensor);\n            return value;\n        }else{\n          if (allele === 'productive') {\n            const productive = extratProductivity.assesProductivity(tensor);\n            tensorsToDispose.push(tensor);\n            return productive;\n          } else {\n            const segment = extratSegmentation.calculateSegment(tensor, sequences[index]);\n            tensorsToDispose.push(tensor);\n            return segment;\n          }\n        }\n      }\n      }));\n      processedData.forEach((element, index) => {\n      const key = batchKeys[index];\n      if (!dataDict[key]) {\n        dataDict[key] = {};\n      }\n      if (['v_call', 'd_call', 'j_call'].includes(allele)) {\n        dataDict[key][allele] = element.index;\n        dataDict[key][allele.charAt(0) + '_likelihoods'] = element.prob;\n      } else {\n        if (['mutation_rate', 'ar_indels'].includes(allele)){\n            dataDict[key][allele] = element;\n          }\n          else {\n            if (allele === 'productive') {\n              dataDict[key][allele] = element;\n            } else {\n              dataDict[key][allele] = element;\n            }\n        }\n      }\n      });\n    }));\n\n    // for each key in dataDict, add the germline alignment. Here, we just gonna pull the records for the first match. \n    let dictionary = {};\n    Object.entries(AlleleCallOHE).forEach(([index, value]) => {\n      dictionary[index] = Object.values(value).reduce((obj, item) => {\n        obj[item.name] = item.sequence;\n        return obj;\n      }, {});\n    });\n    \n    \n    batchKeys.forEach(key => {\n      const item = dataDict[key];\n      ['v', 'd', 'j'].forEach((allele) => {\n        const k = allele === 'd' ? 5 : 15;\n        const segments = extractGermline.HeuristicReferenceMatcher({results:item, segment:allele, referenceAlleles:dictionary[`${allele}_call`], k:k});\n        dataDict[key] = { ...dataDict[key], ...segments };\n      });\n    });      \n    \n    tensorsToDispose.forEach(tensor => tf.dispose(tensor));\n    predicted.forEach(tensor => tensor.dispose());\n}\n\n// post processing of all batches\nexport async function processAllBatches(keys, dataDict, AlleleCallOHE, confidences, caps, model, outputIndices, numElements = 500) {\n    const totalSequences = keys.length;\n    const batchSize = Math.min(totalSequences, numElements); // Adjust batch size as needed\n    for (let i = 0; i < totalSequences; i += batchSize) {\n      const remainingKeys = totalSequences - i;\n      const currentBatchSize = Math.min(batchSize, remainingKeys);\n      const batchKeys = keys.slice(i, i + currentBatchSize);\n      await processBatch(batchKeys, dataDict, AlleleCallOHE, confidences, caps, model, outputIndices);\n    }\n  }\n  ","const countSequencesInBatch = (batchContent) => {\n    // Split the batch content by '>' to separate individual sequences\n    const sequences = batchContent.split('>').filter(Boolean); // Filter out empty strings\n  \n    // Count the number of sequences in this batch\n    return sequences.length;\n  };\n  \n  // Async function to count total sequences in a FASTA file\n  export const countTotalSequences = async (file, batchSize = 100) => {\n    let totalSequences = 0;\n    let buffer = '';\n  \n    const readChunk = async (start, end) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => resolve(event.target.result);\n        reader.onerror = (error) => reject(error);\n        reader.readAsText(file.slice(start, end));\n      });\n    };\n  \n    const fileSize = file.size;\n    let start = 0;\n    let end = Math.min(batchSize, fileSize);\n  \n    while (start < fileSize) {\n      const chunk = await readChunk(start, end);\n      buffer += chunk;\n  \n      while (buffer.includes('>')) {\n        const fastaStartIndex = buffer.indexOf('>');\n        const batchContent = buffer.slice(0, fastaStartIndex); // Extract the batch content up to the next '>'\n        buffer = buffer.slice(fastaStartIndex + 1); // Skip the '>'\n        totalSequences += countSequencesInBatch(batchContent);\n      }\n  \n      start = end;\n      end = Math.min(start + batchSize, fileSize);\n    }\n  \n    // Handle remaining content in buffer after reading all chunks\n    totalSequences += countSequencesInBatch(buffer);\n  \n    return totalSequences; // Return the total sequence count\n  };","import React, {useState} from 'react';\nimport {fastaReader, vAlleleCallOHE, dAlleleCallOHE, jAlleleCallOHE} from \"./fastaReader\";\nimport { processAllBatches } from './predictAlignment';\nimport { countTotalSequences } from './fileProcessor';\n\nexport function formatTime(seconds) {\n  if (seconds < 60) {\n    return `${seconds} second(s)`;\n  } else if (seconds < 3600) {\n    return `${Math.round(seconds / 60)} minute(s)`;\n  } else {\n    return `${Math.round(seconds / 3600)} hour(s)`;\n  }\n}\n\nexport async function readFileContent(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = event => resolve(event.target.result);\n    reader.onerror = error => reject(error);\n    reader.readAsText(file);\n  });\n}\n\nasync function submitSequences(sequenceInput, fileInput, params, model, outputIndices, setResults) {\n\n  let fastaLines = sequenceInput;\n  if (!sequenceInput && fileInput) {\n      countTotalSequences(fileInput, 100)\n      .then((totalSequences) => {\n          console.log('Total sequences:', totalSequences);\n      })\n      .catch((error) => {\n          console.error('Error:', error);\n      });\n      fastaLines = await readFileContent(fileInput);\n  }\n\n  const sequenceData = fastaReader.queryToDict(fastaLines);\n  const confidences = { v_call: params.vConf, d_call: params.dConf, j_call: params.jConf };\n  const caps = { v_call: params.vCap, d_call: params.dCap, j_call: params.jCap };\n  const AlleleCallOHE = { v_call: vAlleleCallOHE, d_call: dAlleleCallOHE, j_call: jAlleleCallOHE };\n  const keys = Object.keys(sequenceData);\n  const numElements = 500;\n\n  await processAllBatches(keys, sequenceData, AlleleCallOHE, confidences, caps, model, outputIndices, numElements)\n  // set the results\n  setResults(sequenceData);\n}\n\n\nexport default function Submission({modelReady, setSubmission, submission, sequence, file, params, model, outputIndices, setResults}){\n  // TODO: Implement the submission button. Add the following:\n  // - A function that checks if there is a sequence or file to submit\n  // - A function that sets the submission state to true if there is a sequence or file to submit\n  // - A function to process the submission\n  // - A progress bar to show the submission progress\n  const [submissionStatus, setSubmissionStatus] = useState(false);\n  const [time, setTime] = useState(0);\n\n  const handleClick = () => {\n    if (!sequence && !file) {\n      window.alert(\"No sequence or file to submit\");\n    }else if (sequence || file) {\n      setSubmission(true);\n      const startTime = new Date().getTime();\n      submitSequences(sequence, file, params, model, outputIndices, setResults).then(() => {\n          const endTime = new Date().getTime();\n          setTime((endTime - startTime)/1000);\n      });\n      setSubmission(false);\n      setSubmissionStatus(true);\n    }\n  };\n  \n  const handleReset = () => {\n    setSubmission(false);\n    setSubmissionStatus(false);\n    setResults(null);\n  };\n\n  return(\n    <>\n      <div className=\"submmit-button-container\">\n        <button id=\"submitButton\" className=\"submmit-button\" onClick={handleClick} disabled={modelReady}>\n          {/* {submissionStatus ? \"Submitting...\" : \"Submit\"} */}\n          Submit\n        </button>\n      </div>\n      {submissionStatus && !submission && (\n          <>\n            <button id=\"resetButton\" className=\"example-button\" onClick={handleReset}>Reset results</button>\n            <p>Process sequences in: <span>{formatTime(time)}</span></p>\n          </>\n      )}\n    </>\n  )\n};\n\n\n\n","import React, {useState, useEffect, useRef} from 'react';\nimport { extractGermline } from './postProcessing';\n\nexport function ResultsHTMLTable({results}) {\n  //console.log(results)\n  return (\n    <>\n      <table className=\"styled-table\" style={{overflowX:'auto'}}>\n        <thead>\n          <tr>\n            <th>Sequence ID</th>\n            <th>V call</th>\n            <th>D call</th>\n            <th>J call</th>\n            <th>V likelihood</th>\n            <th>D likelihood</th>\n            <th>J likelihood</th>\n            <th>Productivity</th>\n            <th>Mutation rate</th>\n            <th>Indels</th>\n            <th>V sequence start</th>\n            <th>V sequence end</th>\n            <th>D sequence start</th>\n            <th>D sequence end</th>\n            <th>J sequence start</th>\n            <th>J sequence end</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{results.name}</td>\n            <td>{results.v_call.join(\", \")}</td>\n            <td>{results.d_call.join(\", \")}</td>\n            <td>{results.j_call.join(\", \")}</td>\n            <td>{results.v_likelihoods.join(\", \")}</td>\n            <td>{results.d_likelihoods.join(\", \")}</td>\n            <td>{results.j_likelihoods.join(\", \")}</td>\n            <td>{results.productive ? \"True\" : \"False\"}</td>\n            <td>{results.mutation_rate}</td>\n            <td>{results.ar_indels}</td>\n            <td>{results.v_sequence_start}</td>\n            <td>{results.v_sequence_end}</td>\n            <td>{results.d_sequence_start}</td>\n            <td>{results.d_sequence_end}</td>\n            <td>{results.j_sequence_start}</td>\n            <td>{results.j_sequence_end}</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nfunction getColor(likelihood) {\n  if (likelihood > 0.9) {\n    return '#baffc9';\n  } else if (likelihood > 0.8) {\n    return '#bae1ff';\n  } else if (likelihood > 0.7) {\n    return '#eecbff';\n  } else if (likelihood > 0.6) {\n    return '#f7e7b4';\n  } else if (likelihood > 0.5) {\n    return '#ffdfba';\n  } else {\n    return '#ffb3ba';\n  }\n}\n\n// function highlightMismatches(sequence, germlineSequence){\n//   let highlightedSequence = '';\n\n//     for (let i = 0; i < sequence.length; i++) {\n//       if (sequence[i] === germlineSequence[i]) {\n//         highlightedSequence += `<span class=\"match\">${sequence[i]}</span>`;\n//       } else {\n//         highlightedSequence += `<span class=\"mismatch\">${sequence[i]}</span>`;\n//       }\n//     }\n\n//     return highlightedSequence;\n// }\n\nfunction SelectWidget({call, results, reference, setSelected, selected, selectedAllele, setSelectedAllele}){\n  const alleles = results[call];\n  const likelihoods = results[`${call.charAt(0)}_likelihoods`];\n\n  const handleChange = (event) => {\n    const allele = event.target.value;\n    setSelectedAllele(allele);\n    const index = alleles.indexOf(allele);\n    const k = call === 'd_call' ? 5 : 15;\n    const seq = extractGermline.getGermlineSequence({results:results, segment:call.charAt(0), referenceAlleles:reference[call], call_id:index, k:k});\n    setSelected(seq);\n    \n    const alleleElement = document.querySelector(`.allele.${call}`);\n    \n    alleleElement.textContent = seq;\n\n    const likelihoodElement = document.querySelector(`.likelihood.${call}`);\n    likelihoodElement.textContent = Number(likelihoods[index].toFixed(3));\n    likelihoodElement.style.width = likelihoods[index] * 100 + 100 + 'px';\n    likelihoodElement.style.backgroundColor = getColor(likelihoods[index]);\n    \n  }\n\n  return (\n    <>\n      <select value={selectedAllele}  onChange={handleChange} style={{fontSize:\"18px\"}}> \n        {alleles.map((allele, index) => (\n          <option key={index} value={allele}>\n            {allele}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n\nfunction SelectWidgetVertical({call, results, reference, setSelected, selected, selectedAllele, setSelectedAllele, setSplitedSeq}){\n  const alleles = results[call];\n  const likelihoods = results[`${call.charAt(0)}_likelihoods`];\n\n  const handleChange = (event) => {\n    const allele = event.target.value;\n    setSelectedAllele(allele);\n    const index = alleles.indexOf(allele);\n    const k = call === 'd_call' ? 5 : 15;\n    const seq = extractGermline.getGermlineSequence({results:results, segment:call.charAt(0), referenceAlleles:reference[call], call_id:index, k:k});\n    setSelected(seq);\n    const splitedSeq = splitSequence(seq, 70);\n    setSplitedSeq(splitedSeq);\n\n    splitedSeq.map((seq, index) => {\n      let alleleElement = document.querySelector(`.allele.${call}-${index}`);\n      alleleElement.textContent = seq;\n      // alleleElement = document.querySelector(`.alignment-label.${call}-${index}`);\n      // alleleElement.textContent = allele;\n    });\n\n    const likelihoodElement = document.querySelector(`.likelihood.${call}`);\n    likelihoodElement.textContent = Number(likelihoods[index].toFixed(3));\n    likelihoodElement.style.width = likelihoods[index] * 100 + 100 + 'px';\n    likelihoodElement.style.backgroundColor = getColor(likelihoods[index]);\n    \n  }\n\n  return (\n    <>\n      <select value={selectedAllele}  onChange={handleChange} style={{fontSize:\"18px\"}}> \n        {alleles.map((allele, index) => (\n          <option key={index} value={allele}>\n            {allele}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n\nexport const regions = {\n  'FR1-IMGT': [0, 78], \n  'CDR1-IMGT': [78, 114], \n  'FR2-IMGT': [114, 165], \n  'CDR2-IMGT': [165, 195], \n  'FR3-IMGT': [195, 312], \n  // 'CDR3-IMGT': [312, null], \n  // 'FR4-IMGT': [null, null], \n  // 'Junction': [309, null]\n};\n\nconst regionColors = {\n  'FR': 'blue',\n  'CDR': 'green',\n  'Junction': 'orange' // Added color for Junction\n};\n\n// Function to get the color based on the region name\nconst getRegionColor = (regionName) => {\n  if (regionName.startsWith('FR')) {\n    return regionColors['FR'];\n  } else if (regionName.startsWith('CDR')) {\n    return regionColors['CDR'];\n  } else {\n    return regionColors['Junction'];\n  }\n};\n\nfunction splitSequence(sequence, maxCharsPerRow){\n  const numRows = Math.ceil(sequence.length / maxCharsPerRow)\n  const chunkSize = Math.ceil(sequence.length / numRows);\n  \n  const chunks = [];\n  for (let i = 0; i < sequence.length; i += chunkSize) {\n    chunks.push(sequence.slice(i, i + chunkSize));\n  }\n  return chunks;\n};\n\nfunction AlignmentBrowser({ results, referenceAlleles }) {\n  const [selectedSequenceV, setSelectedSequenceV] = useState('');\n  const [selectedSequenceD, setSelectedSequenceD] = useState('');\n  const [selectedSequenceJ, setSelectedSequenceJ] = useState('');\n  \n  const [selectedAlleleV, setSelectedAlleleV] = useState(results.v_call[0]);\n  const [selectedAlleleD, setSelectedAlleleD] = useState(results.d_call[0]);\n  const [selectedAlleleJ, setSelectedAlleleJ] = useState(results.j_call[0]);\n  \n  const [selectedLikelihoodV, setSelectedLikelihoodV] = useState(results.v_likelihoods[0]);\n  const [selectedLikelihoodD, setSelectedLikelihoodD] = useState(results.d_likelihoods[0]);\n  const [selectedLikelihoodJ, setSelectedLikelihoodJ] = useState(results.j_likelihoods[0]);\n  \n  const maxCharsPerRow = 70;\n  \n  const [splitedSequenceV, setSplitedSequenceV] = useState([]);\n  const [splitedSequenceD, setSplitedSequenceD] = useState([]);\n  const [splitedSequenceJ, setSplitedSequenceJ] = useState([]);\n\n  useEffect(() => {\n    setSelectedSequenceV(\n      referenceAlleles['v_call'][results.v_call[0]].slice(results.v_germline_start, results.v_germline_end)\n    );\n    \n\n    setSelectedSequenceD(\n      referenceAlleles['d_call'][results.d_call[0]].slice(results.d_germline_start, results.d_germline_end)\n    );\n    \n    \n    setSelectedSequenceJ(\n      referenceAlleles['j_call'][results.j_call[0]].slice(results.j_germline_start, results.j_germline_end)\n    );\n    \n\n  }, [results, referenceAlleles]);\n\n  useEffect(() => {\n    setSplitedSequenceV(splitSequence(selectedSequenceV, maxCharsPerRow));\n    setSplitedSequenceD(splitSequence(selectedSequenceD, maxCharsPerRow));\n    setSplitedSequenceJ(splitSequence(selectedSequenceJ, maxCharsPerRow));\n  },[selectedSequenceV, selectedSequenceD, selectedSequenceJ])\n\n  const rows = {\n        header: 1,\n        seq: 2,\n        v: 3,\n        d: 4,\n        j: 5,\n      }\n\n  const [isVerticalView, setIsVerticalView] = useState(false);\n  \n  const toggleView = () => {\n    setIsVerticalView(!isVerticalView);\n    \n  };\n\n  \n  // console.log(splitSequence(selectedSequenceV, rowsVertical))\n  // console.log(splitSequence(selectedSequenceD, rowsVertical))\n  // console.log(splitSequence(selectedSequenceJ, rowsVertical))\n\n  const d_left_margin = results.d_sequence_start;\n  const j_left_margin = results.j_sequence_start ;\n\n  \n\n  const renderVerticalView = () => (\n    <div className=\"alignment-browser vertical-view\">\n      <div className=\"alignment-label\" style={{ gridRow: 1 }}>Allele</div>\n      <div className=\"alignment-label\" style={{ gridColumn: 2, gridRow: 1 }}>Likelihood</div>\n\n      {splitSequence(results.sequence.slice(0,selectedSequenceV.length), maxCharsPerRow).map((chunk, index) => (\n        <React.Fragment key={`input-sequence-v-${index}`}>\n          <div className=\"sequence input-sequence-v\" style={{ gridRow: (index * 2) + 2 }}>\n            <span className=\"sequence\">{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n\n      <div className=\"alignment-label\" style={{ gridRow: rows.v }}>\n          <SelectWidgetVertical\n            call='v_call'\n            results={results}\n            reference={referenceAlleles}\n            setSelected={setSelectedSequenceV}\n            selected={selectedSequenceV}\n            selectedAllele={selectedAlleleV}\n            setSelectedAllele={setSelectedAlleleV}\n            setSplitedSeq={setSplitedSequenceV}\n          />\n        </div>\n      <div className=\"bar\" style={{gridRow: rows.v}}>\n        <div className=\"likelihood v_call\" style={{gridRow: rows.v, width:`${Math.round(selectedLikelihoodV*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodV)}`}}>{Number(selectedLikelihoodV.toFixed(3))}</div>\n      </div>\n\n      {splitedSequenceV.map((chunk, index) => (\n        <React.Fragment key={`v-sequence-${index}`}>\n          {index > 0 && (\n            <div className={`alignment-label`} style={{ gridRow: (index * 2) + rows.v, gridColumn:1 }}>\n              <span className={`alignment-label v_call-${index}`}>{selectedAlleleV}</span>\n            </div>\n          )}\n          <div className=\"sequence\" style={{ gridRow: (index * 2) + rows.v }}>\n            <span className={`allele v_call-${index}`}>{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n\n      {splitSequence(results.sequence.slice(0,selectedSequenceD.length), maxCharsPerRow).map((chunk, index) => (\n        <React.Fragment key={`input-sequence-d-${index}`}>\n          <div className=\"sequence input-sequence-d\" style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + rows.v -1) }}>\n            <span className=\"sequence\">{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n\n      <div className=\"alignment-label\" style={{ gridRow: (splitedSequenceV.length*2)+ rows.v }}>\n        <SelectWidgetVertical\n          call='d_call'\n          results={results}\n          reference={referenceAlleles}\n          setSelected={setSelectedSequenceD}\n          selected={selectedSequenceD}\n          selectedAllele={selectedAlleleD}\n          setSelectedAllele={setSelectedAlleleD}\n          setSplitedSeq={setSplitedSequenceD}\n        />\n      </div>\n      \n      <div className=\"bar\" style={{gridRow: (splitedSequenceV.length*2) + rows.v}}>\n        <div className=\"likelihood d_call\" style={{gridRow: (splitedSequenceV.length*2) + rows.v, width:`${Math.round(selectedLikelihoodD*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodD)}`}}>{Number(selectedLikelihoodD.toFixed(3))}</div>\n      </div>\n      \n      {splitedSequenceD.map((chunk, index) => (\n        <React.Fragment key={`d-sequence-${index}`}>\n          {index > 0 && (\n            <div className={`alignment-label d_call-${index}`} style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + rows.v), gridColumn:1 }}>\n              {selectedAlleleD}\n            </div>\n          )}\n          <div className=\"sequence\" style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + rows.v)}}>\n            <span className={`allele d_call-${index}`}>{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n\n\n      {splitSequence(results.sequence.slice(0,selectedSequenceJ.length), maxCharsPerRow).map((chunk, index) => (\n        <React.Fragment key={`input-sequence-j-${index}`}>\n          <div className=\"sequence input-sequence-j\" style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v -1) }}>\n            <span className=\"sequence\">{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n\n      <div className=\"alignment-label\" style={{ gridRow: ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v) }}>\n        <SelectWidgetVertical\n          call='j_call'\n          results={results}\n          reference={referenceAlleles}\n          setSelected={setSelectedSequenceJ}\n          selected={selectedSequenceJ}\n          selectedAllele={selectedAlleleJ}\n          setSelectedAllele={setSelectedAlleleJ}\n          setSplitedSeq={setSplitedSequenceJ}\n        />\n      </div>\n      \n      <div className=\"bar\" style={{gridRow: ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v)}}>\n        <div className=\"likelihood j_call\" style={{gridRow: ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v), width:`${Math.round(selectedLikelihoodD*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodJ)}`}}>{Number(selectedLikelihoodJ.toFixed(3))}</div>\n      </div>\n      \n      {splitedSequenceJ.map((chunk, index) => (\n        <React.Fragment key={`j-sequence-${index}`}>\n          {index > 0 && (\n            <div className={`alignment-label j_call-${index}`} style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v), gridColumn:1 }}>\n              {selectedAlleleJ}\n            </div>\n          )}\n          <div className=\"sequence\" style={{ gridRow: (index * 2) + ((splitedSequenceV.length*2) + (splitedSequenceD.length*2) + rows.v)}}>\n            <span className={`allele j_call-${index}`}>{chunk}</span>\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n\n  const renderHorizontalView = () => (\n    <div className=\"alignment-browser\">\n            <div className=\"alignment-label\" style={{gridRow: rows.header}}>Allele</div>\n         <div className=\"alignment-label\" style={{gridColumn:2, gridRow: rows.header}}>Likelihood</div>\n         <div className=\"sequence input-sequence\" style={{gridRow: rows.seq}}>{results.sequence}</div>\n                 <div className=\"alignment-label\" style={{gridRow: rows.v}}>\n           <SelectWidget\n            call='v_call'\n            results={results}\n            reference={referenceAlleles}\n            setSelected={setSelectedSequenceV}\n            selected={selectedSequenceV}\n            selectedAllele={selectedAlleleV}\n            setSelectedAllele={setSelectedAlleleV}\n          />\n        </div>\n        <div className=\"bar\" style={{gridRow: rows.v}}>\n          <div className=\"likelihood v_call\" style={{gridRow: rows.v, width:`${Math.round(selectedLikelihoodV*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodV)}`}}>{Number(selectedLikelihoodV.toFixed(3))}</div>\n        </div>\n        <div className=\"sequence\" style={{gridRow: rows.v}}>\n          <span className=\"allele v_call\" style={{gridRow: rows.v}}>{selectedSequenceV}</span>\n        </div>\n        <div className=\"alignment-label\" style={{gridRow: rows.d}}>\n          <SelectWidget\n            call='d_call'\n            results={results}\n            reference={referenceAlleles}\n            setSelected={setSelectedSequenceD}\n            selected={selectedSequenceD}\n            selectedAllele={selectedAlleleD}\n            setSelectedAllele={setSelectedAlleleD}\n          />\n        </div>\n        <div className=\"bar\" style={{gridRow: rows.d}}>\n          <div className=\"likelihood d_call\" style={{gridRow: rows.d, width:`${Math.round(selectedLikelihoodD*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodD)}`}}>{Number(selectedLikelihoodD.toFixed(3))}</div>\n        </div>\n        <div className=\"sequence\" style={{gridRow: rows.d, marginLeft: `${d_left_margin}ch`}}>\n          <span className=\"allele d_call\" style={{gridRow: rows.d}}>{selectedSequenceD}</span>\n        </div>\n        <div className=\"alignment-label\" style={{gridRow: rows.j}}>\n          <SelectWidget\n            call='j_call'\n            results={results}\n            reference={referenceAlleles}\n            setSelected={setSelectedSequenceJ}\n            selected={selectedSequenceJ}\n            selectedAllele={selectedAlleleJ}\n            setSelectedAllele={setSelectedAlleleJ}\n          />\n        </div>\n        <div className=\"bar\" style={{gridRow: rows.j}}>\n          <div className=\"likelihood j_call\" style={{gridRow: rows.j, width:`${Math.round(selectedLikelihoodJ*100)+100}px`, backgroundColor:`${getColor(selectedLikelihoodJ)}`}}>{Number(selectedLikelihoodJ.toFixed(3))}</div>\n        </div>\n        <div className=\"sequence\" style={{gridRow: rows.j, marginLeft: `${j_left_margin}ch`}}>\n          <span className=\"allele j_call\" style={{gridRow: rows.j}}>{selectedSequenceJ}</span>\n        </div>\n      </div>\n  );\n\n  return (\n    <div>\n      <button id=\"toggleWrap\" className=\"button\" onClick={toggleView}>\n        {isVerticalView ? 'Horizontal view' : 'Vertical view'}\n      </button>\n      {isVerticalView ? renderVerticalView() : renderHorizontalView()}\n    </div>\n  );\n}\n\n\n\n\n\n\nexport function TabSetResults({results, referenceAlleles}){\n  // for each sequence in the results create a tab\n  const [activeTab, setActiveTab] = useState(\"query 0\");\n  // console.log(activeTab)\n  const handleClick = (index) => {\n    setActiveTab(index);\n  };\n  return (\n    <>\n      <div className=\"tab\">\n        {Object.entries(results).map(([index, item]) => (\n          <button key={index} className={`button${activeTab === index ? ' active' : ''}`} onClick={() => handleClick(index)}>{item.name}</button>\n        ))}\n      </div>\n\n      {Object.entries(results).map(([index, item]) => (\n        // console.log(index), \n        <div key={index} id={item.name} className={`tabcontent${activeTab === index ? ' active' : ''}`}>\n          <ResultsHTMLTable results={item} />\n          <br/>\n          <AlignmentBrowser results={item} referenceAlleles={referenceAlleles}/>\n        </div>\n      ))}\n    </>\n  );\n}\n\n// add a function that process the results into a downloadable table\nexport function ResultsTSVTable({results}) {\n  const data = Object.entries(results).map(([index, sequence]) => {  \n    return {\n      sequence_id: sequence.name,\n      sequence: sequence.sequence,\n      v_call: sequence.v_call.join(\", \"),\n      d_call: sequence.d_call.join(\", \"),\n      j_call: sequence.j_call.join(\", \"),\n      productive: results.productive ? \"true\" : \"false\",\n      v_likelihoods: sequence.v_likelihoods.join(\", \"),\n      d_likelihoods: sequence.d_likelihoods.join(\", \"),\n      j_likelihoods: sequence.j_likelihoods.join(\", \"),\n      mutation_rate: sequence.mutation_rate,\n      sequence_alignment: sequence.sequence.substring(sequence.v_sequence_start, sequence.j_sequence_end + 1),\n      v_sequence_start: sequence.v_sequence_start,\n      v_sequence_end: sequence.v_sequence_end,\n      d_sequence_start: sequence.d_sequence_start,\n      d_sequence_end: sequence.d_sequence_end,\n      j_sequence_start:sequence.j_sequence_start,\n      j_sequence_end: sequence.j_sequence_end,\n      ar_indels: sequence.ar_indels,\n    };\n  });\n  return data;\n}\n\nexport function DownloadResultsTable({results}) {\n  const data = ResultsTSVTable({results});\n  const headers = Object.keys(data[0]);\n  const tsv = data.map(row => headers.map(header => row[header]).join('\\t')).join('\\n');\n  const blob = new Blob([tsv], {type: 'text/tsv'});\n  const url = URL.createObjectURL(blob);\n  return (\n    <>\n      <a href={url} download=\"results.tsv\">Download Results</a>\n    </>\n    \n  );\n}\n\n","import React from 'react';\nimport {TabSetResults, DownloadResultsTable} from './processResults'; //ResultsTable TabSetResults,\nimport {vAlleleCallOHE, dAlleleCallOHE, jAlleleCallOHE} from \"./fastaReader\";\n\nconst AlignairPageResults = ({ results}) => {\n  \n  const AlleleCallOHE = { v_call: vAlleleCallOHE, d_call: dAlleleCallOHE, j_call: jAlleleCallOHE };\n  let dictionary = {};\n  Object.entries(AlleleCallOHE).forEach(([index, value]) => {\n    dictionary[index] = Object.values(value).reduce((obj, item) => {\n      obj[item.name] = item.sequence;\n      return obj;\n    }, {});\n  });\n  \n  // if the length of results is less then 15, return the tabset view, else return \"In production\"\n  if (results && Object.keys(results).length < 15) {\n    return (\n      // <ResultsTable results={results[Object.keys(results)[0]]} />\n      <>\n        <TabSetResults results={results} referenceAlleles={dictionary}/>\n        {/* <br/>\n        <AlignmentBrowser resultsObj={results} /> */}\n      </>\n    );\n  } else {\n    if(results){\n      return (\n        <DownloadResultsTable results={results} />\n      );\n    } else{\n      // return null if there are no results\n      return null;\n    }\n  }\n\n};\n\nexport default AlignairPageResults;","import React, {useState} from 'react';\nimport Header from './alignairPageHeader';\nimport Content from './toolPageContent';\nimport Submission from './toolPageSubmission';\nimport AlignairPageResults from './toolPageResults';\n\nexport default function ToolPageApp(){\n  const [submission, setSubmission] = useState(false);\n  const [file, setFile] = useState(null);\n  const [sequence, setSequence] = useState('');\n  const [selectedChain, setSelectedChain] = useState('IGH');\n  const [model, setModel] = useState(null);\n  const [outputIndices, setOutputIndices] = useState(null);\n  const [modelReady, setModelReady] = useState(true);\n  const [results, setResults] = useState(null);\n  const [params, setParams] = useState({\n      vCap: 3,\n      dCap: 3,\n      jCap: 3,\n      vConf: 0.9,\n      dConf: 0.2,\n      jConf: 0.8,\n      vSeg: 0.1,\n      dSeg: 0.01,\n      jSeg: 0.01,\n  });\n\n  return(\n    <div>\n      <Header />\n      <Content setFile={setFile} setSequence={setSequence} sequence={sequence} setSelectedChain={setSelectedChain} selectedChain={selectedChain} setModel={setModel} setOutputIndices={setOutputIndices} setIsLoading={setModelReady} params={params} setParams={setParams}/>\n      <Submission modelReady={modelReady} setSubmission={setSubmission} submission={submission} sequence={sequence} file={file} params={params} model={model} outputIndices={outputIndices} setResults={setResults} /> \n      {!modelReady && \n        <>\n          <AlignairPageResults results={results} />\n        </>\n      }\n      <footer>\n        <div className=\"footer-logo\">AlignAIR</div>\n        <a href=\"https://github.com\" className=\"github-logo\">\n            <i className=\"fab fa-github\" style={{fontSize: '24px', color: '#828282'}}></i>\n        </a>\n      </footer>\n    </div>\n  )\n};\n\n\n\n\n","import React from 'react';\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from 'react-router-dom';\nimport { Route, Routes, Navigate } from 'react-router-dom';\n// import { initializeIcons } from \"@fluentui/react/lib/Icons\";\nimport HomePageAPP from \"./homePage\";\nimport ToolPageApp from \"./toolPage\";\n\n// initializeIcons(/* optional base url */);\n\nconst Routing = () => (\n  <Routes>\n    <Route path=\"/\" element={<HomePageAPP />} />\n    <Route path=\"/alignair\" element={<ToolPageApp />} />\n    <Route path=\"*\" element={<Navigate to=\"/\" />} />\n  </Routes>\n);\n\nconst rootElement = document.getElementById(\"root\");\n\n// ReactDOM.render(\n//   <StrictMode>\n//     <Router>\n//       <Routing />\n//     </Router>\n//   </StrictMode>,\n//   rootElement\n// );\n\n// for github pages\nReactDOM.render(\n  <StrictMode>\n    <HashRouter>\n      <Routing />\n    </HashRouter>\n  </StrictMode>,\n  rootElement\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}