/*! For license information please see main.c32b38d5.js.LICENSE.txt */
(()=>{var e={353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(w){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?T:A;if(t){if(e<0)return T;if(e>=p)return b}else{if(e<=-G)return x;if(e+1>=G)return y}return e<0?i(-e,t).neg():c(e%d|0,e/d|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return A;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=A,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+c),n);if(c<8){var d=i(l(n,c));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,G=p/2,C=o(1<<24),A=o(0);n.ZERO=A;var T=o(0,!0);n.UZERO=T;var f=o(1);n.ONE=f;var m=o(1,!0);n.UONE=m;var g=o(-1);n.NEG_ONE=g;var y=c(-1,2147483647,!1);n.MAX_VALUE=y;var b=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=b;var x=c(0,-2147483648,!1);n.MIN_VALUE=x;var v=n.prototype;v.toInt=function(){return this.unsigned?this.low>>>0:this.low},v.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},v.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(x)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},v.getHighBits=function(){return this.high},v.getHighBitsUnsigned=function(){return this.high>>>0},v.getLowBits=function(){return this.low},v.getLowBitsUnsigned=function(){return this.low>>>0},v.getNumBitsAbs=function(){if(this.isNegative())return this.eq(x)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},v.isZero=function(){return 0===this.high&&0===this.low},v.eqz=v.isZero,v.isNegative=function(){return!this.unsigned&&this.high<0},v.isPositive=function(){return this.unsigned||this.high>=0},v.isOdd=function(){return 1===(1&this.low)},v.isEven=function(){return 0===(1&this.low)},v.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},v.eq=v.equals,v.notEquals=function(e){return!this.eq(e)},v.neq=v.notEquals,v.ne=v.notEquals,v.lessThan=function(e){return this.comp(e)<0},v.lt=v.lessThan,v.lessThanOrEqual=function(e){return this.comp(e)<=0},v.lte=v.lessThanOrEqual,v.le=v.lessThanOrEqual,v.greaterThan=function(e){return this.comp(e)>0},v.gt=v.greaterThan,v.greaterThanOrEqual=function(e){return this.comp(e)>=0},v.gte=v.greaterThanOrEqual,v.ge=v.greaterThanOrEqual,v.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},v.comp=v.compare,v.negate=function(){return!this.unsigned&&this.eq(x)?x:this.not().add(f)},v.neg=v.negate,v.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,d=0,p=0,G=0;return p+=(G+=s+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,u+=(d+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(G&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},v.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},v.sub=v.subtract,v.multiply=function(e){if(this.isZero())return A;if(a(e)||(e=h(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return A;if(this.eq(x))return e.isOdd()?x:A;if(e.eq(x))return this.isOdd()?x:A;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(C)&&e.lt(C))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,d=e.low>>>16,p=65535&e.low,G=0,T=0,f=0,m=0;return f+=(m+=o*p)>>>16,T+=(f+=s*p)>>>16,f&=65535,T+=(f+=o*d)>>>16,G+=(T+=r*p)>>>16,T&=65535,G+=(T+=s*d)>>>16,T&=65535,G+=(T+=o*u)>>>16,G+=n*p+r*d+s*u+o*l,c((f&=65535)<<16|(m&=65535),(G&=65535)<<16|(T&=65535),this.unsigned)},v.mul=v.multiply,v.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?T:A;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return T;if(e.gt(this.shru(1)))return m;s=T}else{if(this.eq(x))return e.eq(f)||e.eq(g)?x:e.eq(x)?f:(n=this.shr(1).div(e).shl(1)).eq(A)?e.isNegative()?f:g:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(x))return this.unsigned?T:A;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=A}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=u,this.unsigned)).mul(e);d.isZero()&&(d=f),s=s.add(d),r=r.sub(p)}return s},v.div=v.divide,v.modulo=function(e){return a(e)||(e=h(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},v.mod=v.modulo,v.rem=v.modulo,v.not=function(){return c(~this.low,~this.high,this.unsigned)},v.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},v.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},v.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},v.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},v.shl=v.shiftLeft,v.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},v.shr=v.shiftRight,v.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},v.shru=v.shiftRightUnsigned,v.shr_u=v.shiftRightUnsigned,v.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},v.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},v.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},v.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},v.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},123:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(e,r){for(var s,o,i=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))n.call(s,l)&&(i[l]=s[l]);if(t){o=t(s);for(var u=0;u<o.length;u++)a.call(s,o[u])&&(i[o[u]]=s[o[u]])}}return i}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(123),s=n(853);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!a)throw Error(o(227));var i=new Set,c={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(c[e]=t,e=0;e<t.length;e++)i.add(t[e])}var h=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,G={},C={};function A(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var T={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){T[e]=new A(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];T[t]=new A(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){T[e]=new A(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){T[e]=new A(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){T[e]=new A(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){T[e]=new A(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){T[e]=new A(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){T[e]=new A(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){T[e]=new A(e,5,!1,e.toLowerCase(),null,!1,!1)}));var f=/[\-:]([a-z])/g;function m(e){return e[1].toUpperCase()}function g(e,t,n,a){var r=T.hasOwnProperty(t)?T[t]:null;(null!==r?0===r.type:!a&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!p.call(C,e)||!p.call(G,e)&&(d.test(e)?C[e]=!0:(G[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(f,m);T[t]=new A(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(f,m);T[t]=new A(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(f,m);T[t]=new A(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){T[e]=new A(e,1,!1,e.toLowerCase(),null,!1,!1)})),T.xlinkHref=new A("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){T[e]=new A(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,b=60103,x=60106,v=60107,w=60108,k=60114,I=60109,N=60110,S=60112,E=60113,R=60120,_=60115,F=60116,D=60121,O=60128,M=60129,L=60130,z=60131;if("function"===typeof Symbol&&Symbol.for){var P=Symbol.for;b=P("react.element"),x=P("react.portal"),v=P("react.fragment"),w=P("react.strict_mode"),k=P("react.profiler"),I=P("react.provider"),N=P("react.context"),S=P("react.forward_ref"),E=P("react.suspense"),R=P("react.suspense_list"),_=P("react.memo"),F=P("react.lazy"),D=P("react.block"),P("react.scope"),O=P("react.opaque.id"),M=P("react.debug_trace_mode"),L=P("react.offscreen"),z=P("react.legacy_hidden")}var V,B="function"===typeof Symbol&&Symbol.iterator;function W(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=B&&e[B]||e["@@iterator"])?e:null}function U(e){if(void 0===V)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);V=t&&t[1]||""}return"\n"+V+e}var H=!1;function j(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var a=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){a=c}e.call(t.prototype)}else{try{throw Error()}catch(c){a=c}e()}}catch(c){if(c&&a&&"string"===typeof c.stack){for(var r=c.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i])return"\n"+r[o].replace(" at new "," at ")}while(1<=o&&0<=i);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function q(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return e=j(e.type,!1);case 11:return e=j(e.type.render,!1);case 22:return e=j(e.type._render,!1);case 1:return e=j(e.type,!0);default:return""}}function K(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case v:return"Fragment";case x:return"Portal";case k:return"Profiler";case w:return"StrictMode";case E:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case N:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case S:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case _:return K(e.type);case D:return K(e._render);case F:t=e._payload,e=e._init;try{return K(e(t))}catch(n){}}return null}function X(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=Y(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function Z(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return r({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=X(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&g(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=X(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?re(e,t.type,n):t.hasOwnProperty("defaultValue")&&re(e,t.type,X(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ae(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function re(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function se(e,t){return e=r({children:void 0},t),(t=function(e){var t="";return a.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+X(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return r({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ce(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:X(n)}}function le(e,t){var n=X(t.value),a=X(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function ue(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var he={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ge,Ce,Ae=(Ce=function(e,t){if(e.namespaceURI!==he.svg||"innerHTML"in e)e.innerHTML=t;else{for((Ge=Ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return Ce(e,t)}))}:Ce);function Te(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ye(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=ge(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(fe).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var be=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(o(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ie=null,Ne=null;function Se(e){if(e=nr(e)){if("function"!==typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=rr(t),ke(e.stateNode,e.type,t))}}function Ee(e){Ie?Ne?Ne.push(e):Ne=[e]:Ie=e}function Re(){if(Ie){var e=Ie,t=Ne;if(Ne=Ie=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function _e(e,t){return e(t)}function Fe(e,t,n,a,r){return e(t,n,a,r)}function De(){}var Oe=_e,Me=!1,Le=!1;function ze(){null===Ie&&null===Ne||(De(),Re())}function Pe(e,t){var n=e.stateNode;if(null===n)return null;var a=rr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var Ve=!1;if(h)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Ve=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(Ce){Ve=!1}function We(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Ue=!1,He=null,je=!1,qe=null,Ke={onError:function(e){Ue=!0,He=e}};function Xe(e,t,n,a,r,s,o,i,c){Ue=!1,He=null,We.apply(Ke,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Qe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ye(e)!==e)throw Error(o(188))}function Ze(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return Je(r),e;if(s===a)return Je(r),t;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function $e(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,at,rt=!1,st=[],ot=null,it=null,ct=null,lt=new Map,ut=new Map,ht=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,a,r){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:r,targetContainers:[a]}}function Gt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ut.delete(t.pointerId)}}function Ct(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e=pt(t,n,a,r,s),null!==t&&(null!==(t=nr(t))&&tt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function At(e){var t=tr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Qe(n)))return e.blockedOn=t,void at(e.lanePriority,(function(){s.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Tt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=nr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function ft(e,t,n){Tt(e)&&n.delete(t)}function mt(){for(rt=!1;0<st.length;){var e=st[0];if(null!==e.blockedOn){null!==(e=nr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&st.shift()}null!==ot&&Tt(ot)&&(ot=null),null!==it&&Tt(it)&&(it=null),null!==ct&&Tt(ct)&&(ct=null),lt.forEach(ft),ut.forEach(ft)}function gt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,mt)))}function yt(e){function t(t){return gt(t,e)}if(0<st.length){gt(st[0],e);for(var n=1;n<st.length;n++){var a=st[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==ot&&gt(ot,e),null!==it&&gt(it,e),null!==ct&&gt(ct,e),lt.forEach(t),ut.forEach(t),n=0;n<ht.length;n++)(a=ht[n]).blockedOn===e&&(a.blockedOn=null);for(;0<ht.length&&null===(n=ht[0]).blockedOn;)At(n),null===n.blockedOn&&ht.shift()}function bt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xt={animationend:bt("Animation","AnimationEnd"),animationiteration:bt("Animation","AnimationIteration"),animationstart:bt("Animation","AnimationStart"),transitionend:bt("Transition","TransitionEnd")},vt={},wt={};function kt(e){if(vt[e])return vt[e];if(!xt[e])return e;var t,n=xt[e];for(t in n)if(n.hasOwnProperty(t)&&t in wt)return vt[e]=n[t];return e}h&&(wt=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var It=kt("animationend"),Nt=kt("animationiteration"),St=kt("animationstart"),Et=kt("transitionend"),Rt=new Map,_t=new Map,Ft=["abort","abort",It,"animationEnd",Nt,"animationIteration",St,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Et,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var n=0;n<e.length;n+=2){var a=e[n],r=e[n+1];r="on"+(r[0].toUpperCase()+r.slice(1)),_t.set(a,t),Rt.set(a,r),l(r,[a])}}(0,s.unstable_now)();var Ot=8;function Mt(e){if(0!==(1&e))return Ot=15,1;if(0!==(2&e))return Ot=14,2;if(0!==(4&e))return Ot=13,4;var t=24&e;return 0!==t?(Ot=12,t):0!==(32&e)?(Ot=11,32):0!==(t=192&e)?(Ot=10,t):0!==(256&e)?(Ot=9,256):0!==(t=3584&e)?(Ot=8,t):0!==(4096&e)?(Ot=7,4096):0!==(t=4186112&e)?(Ot=6,t):0!==(t=62914560&e)?(Ot=5,t):67108864&e?(Ot=4,67108864):0!==(134217728&e)?(Ot=3,134217728):0!==(t=805306368&e)?(Ot=2,t):0!==(1073741824&e)?(Ot=1,1073741824):(Ot=8,e)}function Lt(e,t){var n=e.pendingLanes;if(0===n)return Ot=0;var a=0,r=0,s=e.expiredLanes,o=e.suspendedLanes,i=e.pingedLanes;if(0!==s)a=s,r=Ot=15;else if(0!==(s=134217727&n)){var c=s&~o;0!==c?(a=Mt(c),r=Ot):0!==(i&=s)&&(a=Mt(i),r=Ot)}else 0!==(s=n&~o)?(a=Mt(s),r=Ot):0!==i&&(a=Mt(i),r=Ot);if(0===a)return 0;if(a=n&((0>(a=31-Ut(a))?0:1<<a)<<1)-1,0!==t&&t!==a&&0===(t&o)){if(Mt(t),r<=Ot)return t;Ot=r}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-Ut(t)),a|=e[n],t&=~r;return a}function zt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Pt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Vt(24&~t))?Pt(10,t):e;case 10:return 0===(e=Vt(192&~t))?Pt(8,t):e;case 8:return 0===(e=Vt(3584&~t))&&(0===(e=Vt(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Vt(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function Vt(e){return e&-e}function Bt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Wt(e,t,n){e.pendingLanes|=t;var a=t-1;e.suspendedLanes&=a,e.pingedLanes&=a,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/jt|0)|0},Ht=Math.log,jt=Math.LN2;var qt=s.unstable_UserBlockingPriority,Kt=s.unstable_runWithPriority,Xt=!0;function Yt(e,t,n,a){Me||De();var r=Jt,s=Me;Me=!0;try{Fe(r,e,t,n,a)}finally{(Me=s)||ze()}}function Qt(e,t,n,a){Kt(qt,Jt.bind(null,e,t,n,a))}function Jt(e,t,n,a){var r;if(Xt)if((r=0===(4&t))&&0<st.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,a),st.push(e);else{var s=Zt(e,t,n,a);if(null===s)r&&Gt(e,a);else{if(r){if(-1<dt.indexOf(e))return e=pt(s,e,t,n,a),void st.push(e);if(function(e,t,n,a,r){switch(t){case"focusin":return ot=Ct(ot,e,t,n,a,r),!0;case"dragenter":return it=Ct(it,e,t,n,a,r),!0;case"mouseover":return ct=Ct(ct,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return lt.set(s,Ct(lt.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,ut.set(s,Ct(ut.get(s)||null,e,t,n,a,r)),!0}return!1}(s,e,t,n,a))return;Gt(e,a)}Da(e,t,a,null,n)}}}function Zt(e,t,n,a){var r=we(a);if(null!==(r=tr(r))){var s=Ye(r);if(null===s)r=null;else{var o=s.tag;if(13===o){if(null!==(r=Qe(s)))return r;r=null}else if(3===o){if(s.stateNode.hydrate)return 3===s.tag?s.stateNode.containerInfo:null;r=null}else s!==r&&(r=null)}}return Da(e,t,a,r,n),null}var $t=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,a=n.length,r="value"in $t?$t.value:$t.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return tn=r.slice(e,1<t?1-t:void 0)}function an(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function sn(){return!1}function on(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?rn:sn,this.isPropagationStopped=sn,this}return r(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var cn,ln,un,hn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=on(hn),pn=r({},hn,{view:0,detail:0}),Gn=on(pn),Cn=r({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(cn=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=cn=0,un=e),cn)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),An=on(Cn),Tn=on(r({},Cn,{dataTransfer:0})),fn=on(r({},pn,{relatedTarget:0})),mn=on(r({},hn,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=r({},hn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yn=on(gn),bn=on(r({},hn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},vn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=wn[e])&&!!t[e]}function In(){return kn}var Nn=r({},pn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=an(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?vn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?an(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?an(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Sn=on(Nn),En=on(r({},Cn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=on(r({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),_n=on(r({},hn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Fn=r({},Cn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=on(Fn),On=[9,13,27,32],Mn=h&&"CompositionEvent"in window,Ln=null;h&&"documentMode"in document&&(Ln=document.documentMode);var zn=h&&"TextEvent"in window&&!Ln,Pn=h&&(!Mn||Ln&&8<Ln&&11>=Ln),Vn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var jn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!jn[e.type]:"textarea"===t}function Kn(e,t,n,a){Ee(a),0<(t=Ma(t,"onChange")).length&&(n=new dn("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Xn=null,Yn=null;function Qn(e){Na(e,0)}function Jn(e){if(J(ar(e)))return e}function Zn(e,t){if("change"===e)return t}var $n=!1;if(h){var ea;if(h){var ta="oninput"in document;if(!ta){var na=document.createElement("div");na.setAttribute("oninput","return;"),ta="function"===typeof na.oninput}ea=ta}else ea=!1;$n=ea&&(!document.documentMode||9<document.documentMode)}function aa(){Xn&&(Xn.detachEvent("onpropertychange",ra),Yn=Xn=null)}function ra(e){if("value"===e.propertyName&&Jn(Yn)){var t=[];if(Kn(t,Yn,e,we(e)),e=Qn,Me)e(t);else{Me=!0;try{_e(e,t)}finally{Me=!1,ze()}}}}function sa(e,t,n){"focusin"===e?(aa(),Yn=n,(Xn=t).attachEvent("onpropertychange",ra)):"focusout"===e&&aa()}function oa(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Jn(Yn)}function ia(e,t){if("click"===e)return Jn(t)}function ca(e,t){if("input"===e||"change"===e)return Jn(t)}var la="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},ua=Object.prototype.hasOwnProperty;function ha(e,t){if(la(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++)if(!ua.call(t,n[a])||!la(e[n[a]],t[n[a]]))return!1;return!0}function da(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pa(e,t){var n,a=da(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=da(a)}}function Ga(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Ga(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Ca(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function Aa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Ta=h&&"documentMode"in document&&11>=document.documentMode,fa=null,ma=null,ga=null,ya=!1;function ba(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;ya||null==fa||fa!==Z(a)||("selectionStart"in(a=fa)&&Aa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ga&&ha(ga,a)||(ga=a,0<(a=Ma(ma,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=fa)))}Dt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Ft,2);for(var xa="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),va=0;va<xa.length;va++)_t.set(xa[va],0);u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var wa="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ka=new Set("cancel close invalid load scroll toggle".split(" ").concat(wa));function Ia(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,s,i,c,l){if(Xe.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var u=He;Ue=!1,He=null,je||(je=!0,qe=u)}}(a,t,void 0,e),e.currentTarget=null}function Na(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;Ia(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;Ia(r,i,l),s=c}}}if(je)throw e=qe,je=!1,qe=null,e}function Sa(e,t){var n=sr(t),a=e+"__bubble";n.has(a)||(Fa(t,e,2,!1),n.add(a))}var Ea="_reactListening"+Math.random().toString(36).slice(2);function Ra(e){e[Ea]||(e[Ea]=!0,i.forEach((function(t){ka.has(t)||_a(t,!1,e,null),_a(t,!0,e,null)})))}function _a(e,t,n,a){var r=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,s=n;if("selectionchange"===e&&9!==n.nodeType&&(s=n.ownerDocument),null!==a&&!t&&ka.has(e)){if("scroll"!==e)return;r|=2,s=a}var o=sr(s),i=e+"__"+(t?"capture":"bubble");o.has(i)||(t&&(r|=4),Fa(s,e,r,t),o.add(i))}function Fa(e,t,n,a){var r=_t.get(t);switch(void 0===r?2:r){case 0:r=Yt;break;case 1:r=Qt;break;default:r=Jt}n=r.bind(null,t,n,e),r=void 0,!Ve||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Da(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=tr(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}!function(e,t,n){if(Le)return e(t,n);Le=!0;try{return Oe(e,t,n)}finally{Le=!1,ze()}}((function(){var a=s,r=we(n),o=[];e:{var i=Rt.get(e);if(void 0!==i){var c=dn,l=e;switch(e){case"keypress":if(0===an(n))break e;case"keydown":case"keyup":c=Sn;break;case"focusin":l="focus",c=fn;break;case"focusout":l="blur",c=fn;break;case"beforeblur":case"afterblur":c=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=An;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=Tn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Rn;break;case It:case Nt:case St:c=mn;break;case Et:c=_n;break;case"scroll":c=Gn;break;case"wheel":c=Dn;break;case"copy":case"cut":case"paste":c=yn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),h=!u&&"scroll"===e,d=u?null!==i?i+"Capture":null:i;u=[];for(var p,G=a;null!==G;){var C=(p=G).stateNode;if(5===p.tag&&null!==C&&(p=C,null!==d&&(null!=(C=Pe(G,d))&&u.push(Oa(G,C,p)))),h)break;G=G.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(l=n.relatedTarget||n.fromElement)||!tr(l)&&!l[$a])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?tr(l):null)&&(l!==(h=Ye(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=An,C="onMouseLeave",d="onMouseEnter",G="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,C="onPointerLeave",d="onPointerEnter",G="pointer"),h=null==c?i:ar(c),p=null==l?i:ar(l),(i=new u(C,G+"leave",c,n,r)).target=h,i.relatedTarget=p,C=null,tr(r)===a&&((u=new u(d,G+"enter",l,n,r)).target=p,u.relatedTarget=h,C=u),h=C,c&&l)e:{for(d=l,G=0,p=u=c;p;p=La(p))G++;for(p=0,C=d;C;C=La(C))p++;for(;0<G-p;)u=La(u),G--;for(;0<p-G;)d=La(d),p--;for(;G--;){if(u===d||null!==d&&u===d.alternate)break e;u=La(u),d=La(d)}u=null}else u=null;null!==c&&za(o,i,c,u,!1),null!==l&&null!==h&&za(o,h,l,u,!0)}if("select"===(c=(i=a?ar(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var A=Zn;else if(qn(i))if($n)A=ca;else{A=oa;var T=sa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(A=ia);switch(A&&(A=A(e,a))?Kn(o,A,n,r):(T&&T(e,i,a),"focusout"===e&&(T=i._wrapperState)&&T.controlled&&"number"===i.type&&re(i,"number",i.value)),T=a?ar(a):window,e){case"focusin":(qn(T)||"true"===T.contentEditable)&&(fa=T,ma=a,ga=null);break;case"focusout":ga=ma=fa=null;break;case"mousedown":ya=!0;break;case"contextmenu":case"mouseup":case"dragend":ya=!1,ba(o,n,r);break;case"selectionchange":if(Ta)break;case"keydown":case"keyup":ba(o,n,r)}var f;if(Mn)e:{switch(e){case"compositionstart":var m="onCompositionStart";break e;case"compositionend":m="onCompositionEnd";break e;case"compositionupdate":m="onCompositionUpdate";break e}m=void 0}else Hn?Wn(e,n)&&(m="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(m="onCompositionStart");m&&(Pn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==m?"onCompositionEnd"===m&&Hn&&(f=nn()):(en="value"in($t=r)?$t.value:$t.textContent,Hn=!0)),0<(T=Ma(a,m)).length&&(m=new bn(m,e,null,n,r),o.push({event:m,listeners:T}),f?m.data=f:null!==(f=Un(n))&&(m.data=f))),(f=zn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Bn=!0,Vn);case"textInput":return(e=t.data)===Vn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Mn&&Wn(e,t)?(e=nn(),tn=en=$t=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Pn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Ma(a,"onBeforeInput")).length&&(r=new bn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=f))}Na(o,t)}))}function Oa(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ma(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Pe(e,n))&&a.unshift(Oa(e,s,r)),null!=(s=Pe(e,t))&&a.push(Oa(e,s,r))),e=e.return}return a}function La(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function za(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Pe(n,s))&&o.unshift(Oa(n,c,i)):r||null!=(c=Pe(n,s))&&o.push(Oa(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Pa(){}var Va=null,Ba=null;function Wa(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ua(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Ha="function"===typeof setTimeout?setTimeout:void 0,ja="function"===typeof clearTimeout?clearTimeout:void 0;function qa(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Ka(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Xa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Ya=0;var Qa=Math.random().toString(36).slice(2),Ja="__reactFiber$"+Qa,Za="__reactProps$"+Qa,$a="__reactContainer$"+Qa,er="__reactEvents$"+Qa;function tr(e){var t=e[Ja];if(t)return t;for(var n=e.parentNode;n;){if(t=n[$a]||n[Ja]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Xa(e);null!==e;){if(n=e[Ja])return n;e=Xa(e)}return t}n=(e=n).parentNode}return null}function nr(e){return!(e=e[Ja]||e[$a])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ar(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function rr(e){return e[Za]||null}function sr(e){var t=e[er];return void 0===t&&(t=e[er]=new Set),t}var or=[],ir=-1;function cr(e){return{current:e}}function lr(e){0>ir||(e.current=or[ir],or[ir]=null,ir--)}function ur(e,t){ir++,or[ir]=e.current,e.current=t}var hr={},dr=cr(hr),pr=cr(!1),Gr=hr;function Cr(e,t){var n=e.type.contextTypes;if(!n)return hr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Ar(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Tr(){lr(pr),lr(dr)}function fr(e,t,n){if(dr.current!==hr)throw Error(o(168));ur(dr,t),ur(pr,n)}function mr(e,t,n){var a=e.stateNode;if(e=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var s in a=a.getChildContext())if(!(s in e))throw Error(o(108,K(t)||"Unknown",s));return r({},n,a)}function gr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||hr,Gr=dr.current,ur(dr,e),ur(pr,pr.current),!0}function yr(e,t,n){var a=e.stateNode;if(!a)throw Error(o(169));n?(e=mr(e,t,Gr),a.__reactInternalMemoizedMergedChildContext=e,lr(pr),lr(dr),ur(dr,e)):lr(pr),ur(pr,n)}var br=null,xr=null,vr=s.unstable_runWithPriority,wr=s.unstable_scheduleCallback,kr=s.unstable_cancelCallback,Ir=s.unstable_shouldYield,Nr=s.unstable_requestPaint,Sr=s.unstable_now,Er=s.unstable_getCurrentPriorityLevel,Rr=s.unstable_ImmediatePriority,_r=s.unstable_UserBlockingPriority,Fr=s.unstable_NormalPriority,Dr=s.unstable_LowPriority,Or=s.unstable_IdlePriority,Mr={},Lr=void 0!==Nr?Nr:function(){},zr=null,Pr=null,Vr=!1,Br=Sr(),Wr=1e4>Br?Sr:function(){return Sr()-Br};function Ur(){switch(Er()){case Rr:return 99;case _r:return 98;case Fr:return 97;case Dr:return 96;case Or:return 95;default:throw Error(o(332))}}function Hr(e){switch(e){case 99:return Rr;case 98:return _r;case 97:return Fr;case 96:return Dr;case 95:return Or;default:throw Error(o(332))}}function jr(e,t){return e=Hr(e),vr(e,t)}function qr(e,t,n){return e=Hr(e),wr(e,t,n)}function Kr(){if(null!==Pr){var e=Pr;Pr=null,kr(e)}Xr()}function Xr(){if(!Vr&&null!==zr){Vr=!0;var e=0;try{var t=zr;jr(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),zr=null}catch(n){throw null!==zr&&(zr=zr.slice(e+1)),wr(Rr,Kr),n}finally{Vr=!1}}}var Yr=y.ReactCurrentBatchConfig;function Qr(e,t){if(e&&e.defaultProps){for(var n in t=r({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Jr=cr(null),Zr=null,$r=null,es=null;function ts(){es=$r=Zr=null}function ns(e){var t=Jr.current;lr(Jr),e.type._context._currentValue=t}function as(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function rs(e,t){Zr=e,es=$r=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Mo=!0),e.firstContext=null)}function ss(e,t){if(es!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(es=e,t=1073741823),t={context:e,observedBits:t,next:null},null===$r){if(null===Zr)throw Error(o(308));$r=t,Zr.dependencies={lanes:0,firstContext:t,responders:null}}else $r=$r.next=t;return e._currentValue}var os=!1;function is(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function cs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ls(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function us(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function hs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ds(e,t,n,a){var s=e.updateQueue;os=!1;var o=s.firstBaseUpdate,i=s.lastBaseUpdate,c=s.shared.pending;if(null!==c){s.shared.pending=null;var l=c,u=l.next;l.next=null,null===i?o=u:i.next=u,i=l;var h=e.alternate;if(null!==h){var d=(h=h.updateQueue).lastBaseUpdate;d!==i&&(null===d?h.firstBaseUpdate=u:d.next=u,h.lastBaseUpdate=l)}}if(null!==o){for(d=s.baseState,i=0,h=u=l=null;;){c=o.lane;var p=o.eventTime;if((a&c)===c){null!==h&&(h=h.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var G=e,C=o;switch(c=t,p=n,C.tag){case 1:if("function"===typeof(G=C.payload)){d=G.call(p,d,c);break e}d=G;break e;case 3:G.flags=-4097&G.flags|64;case 0:if(null===(c="function"===typeof(G=C.payload)?G.call(p,d,c):G)||void 0===c)break e;d=r({},d,c);break e;case 2:os=!0}}null!==o.callback&&(e.flags|=32,null===(c=s.effects)?s.effects=[o]:c.push(o))}else p={eventTime:p,lane:c,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===h?(u=h=p,l=d):h=h.next=p,i|=c;if(null===(o=o.next)){if(null===(c=s.shared.pending))break;o=c.next,c.next=null,s.lastBaseUpdate=c,s.shared.pending=null}}null===h&&(l=d),s.baseState=l,s.firstBaseUpdate=u,s.lastBaseUpdate=h,Bi|=i,e.lanes=i,e.memoizedState=d}}function ps(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(o(191,r));r.call(a)}}}var Gs=(new a.Component).refs;function Cs(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:r({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var As={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=dc(),r=pc(e),s=ls(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),us(e,s),Gc(e,r,a)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=dc(),r=pc(e),s=ls(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),us(e,s),Gc(e,r,a)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=dc(),a=pc(e),r=ls(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),us(e,r),Gc(e,a,n)}};function Ts(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ha(n,a)||!ha(r,s))}function fs(e,t,n){var a=!1,r=hr,s=t.contextType;return"object"===typeof s&&null!==s?s=ss(s):(r=Ar(t)?Gr:dr.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Cr(e,r):hr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=As,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ms(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&As.enqueueReplaceState(t,t.state,null)}function gs(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Gs,is(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=ss(s):(s=Ar(t)?Gr:dr.current,r.context=Cr(e,s)),ds(e,n,r,a),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Cs(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&As.enqueueReplaceState(r,r.state,null),ds(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4)}var ys=Array.isArray;function bs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,e));var r=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===r?t.ref:(t=function(e){var t=a.refs;t===Gs&&(t=a.refs={}),null===e?delete t[r]:t[r]=e},t._stringRef=r,t)}if("string"!==typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function xs(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function vs(e){function t(t,n){if(e){var a=t.lastEffect;null!==a?(a.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=qc(e,t)).index=0,e.sibling=null,e}function s(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags=2,n):a:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Qc(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){return null!==t&&t.elementType===n.type?((a=r(t,n.props)).ref=bs(e,t,n),a.return=e,a):((a=Kc(n.type,n.key,n.props,null,e.mode,a)).ref=bs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jc(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,s){return null===t||7!==t.tag?((t=Xc(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Qc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case b:return(n=Kc(t.type,t.key,t.props,null,e.mode,n)).ref=bs(e,null,t),n.return=e,n;case x:return(t=Jc(t,e.mode,n)).return=e,t}if(ys(t)||W(t))return(t=Xc(t,e.mode,n,null)).return=e,t;xs(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case b:return n.key===r?n.type===v?h(e,t,n.props.children,a,r):l(e,t,n,a):null;case x:return n.key===r?u(e,t,n,a):null}if(ys(n)||W(n))return null!==r?null:h(e,t,n,a,null);xs(e,n)}return null}function G(e,t,n,a,r){if("string"===typeof a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case b:return e=e.get(null===a.key?n:a.key)||null,a.type===v?h(t,e,a.props.children,r,a.key):l(t,e,a,r);case x:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r)}if(ys(a)||W(a))return h(t,e=e.get(n)||null,a,r,null);xs(t,a)}return null}function C(r,o,i,c){for(var l=null,u=null,h=o,C=o=0,A=null;null!==h&&C<i.length;C++){h.index>C?(A=h,h=null):A=h.sibling;var T=p(r,h,i[C],c);if(null===T){null===h&&(h=A);break}e&&h&&null===T.alternate&&t(r,h),o=s(T,o,C),null===u?l=T:u.sibling=T,u=T,h=A}if(C===i.length)return n(r,h),l;if(null===h){for(;C<i.length;C++)null!==(h=d(r,i[C],c))&&(o=s(h,o,C),null===u?l=h:u.sibling=h,u=h);return l}for(h=a(r,h);C<i.length;C++)null!==(A=G(h,r,C,i[C],c))&&(e&&null!==A.alternate&&h.delete(null===A.key?C:A.key),o=s(A,o,C),null===u?l=A:u.sibling=A,u=A);return e&&h.forEach((function(e){return t(r,e)})),l}function A(r,i,c,l){var u=W(c);if("function"!==typeof u)throw Error(o(150));if(null==(c=u.call(c)))throw Error(o(151));for(var h=u=null,C=i,A=i=0,T=null,f=c.next();null!==C&&!f.done;A++,f=c.next()){C.index>A?(T=C,C=null):T=C.sibling;var m=p(r,C,f.value,l);if(null===m){null===C&&(C=T);break}e&&C&&null===m.alternate&&t(r,C),i=s(m,i,A),null===h?u=m:h.sibling=m,h=m,C=T}if(f.done)return n(r,C),u;if(null===C){for(;!f.done;A++,f=c.next())null!==(f=d(r,f.value,l))&&(i=s(f,i,A),null===h?u=f:h.sibling=f,h=f);return u}for(C=a(r,C);!f.done;A++,f=c.next())null!==(f=G(C,r,A,f.value,l))&&(e&&null!==f.alternate&&C.delete(null===f.key?A:f.key),i=s(f,i,A),null===h?u=f:h.sibling=f,h=f);return e&&C.forEach((function(e){return t(r,e)})),u}return function(e,a,s,c){var l="object"===typeof s&&null!==s&&s.type===v&&null===s.key;l&&(s=s.props.children);var u="object"===typeof s&&null!==s;if(u)switch(s.$$typeof){case b:e:{for(u=s.key,l=a;null!==l;){if(l.key===u){if(7===l.tag){if(s.type===v){n(e,l.sibling),(a=r(l,s.props.children)).return=e,e=a;break e}}else if(l.elementType===s.type){n(e,l.sibling),(a=r(l,s.props)).ref=bs(e,l,s),a.return=e,e=a;break e}n(e,l);break}t(e,l),l=l.sibling}s.type===v?((a=Xc(s.props.children,e.mode,c,s.key)).return=e,e=a):((c=Kc(s.type,s.key,s.props,null,e.mode,c)).ref=bs(e,a,s),c.return=e,e=c)}return i(e);case x:e:{for(l=s.key;null!==a;){if(a.key===l){if(4===a.tag&&a.stateNode.containerInfo===s.containerInfo&&a.stateNode.implementation===s.implementation){n(e,a.sibling),(a=r(a,s.children||[])).return=e,e=a;break e}n(e,a);break}t(e,a),a=a.sibling}(a=Jc(s,e.mode,c)).return=e,e=a}return i(e)}if("string"===typeof s||"number"===typeof s)return s=""+s,null!==a&&6===a.tag?(n(e,a.sibling),(a=r(a,s)).return=e,e=a):(n(e,a),(a=Qc(s,e.mode,c)).return=e,e=a),i(e);if(ys(s))return C(e,a,s,c);if(W(s))return A(e,a,s,c);if(u&&xs(e,s),"undefined"===typeof s&&!l)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,K(e.type)||"Component"))}return n(e,a)}}var ws=vs(!0),ks=vs(!1),Is={},Ns=cr(Is),Ss=cr(Is),Es=cr(Is);function Rs(e){if(e===Is)throw Error(o(174));return e}function _s(e,t){switch(ur(Es,t),ur(Ss,e),ur(Ns,Is),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lr(Ns),ur(Ns,t)}function Fs(){lr(Ns),lr(Ss),lr(Es)}function Ds(e){Rs(Es.current);var t=Rs(Ns.current),n=pe(t,e.type);t!==n&&(ur(Ss,e),ur(Ns,n))}function Os(e){Ss.current===e&&(lr(Ns),lr(Ss))}var Ms=cr(0);function Ls(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zs=null,Ps=null,Vs=!1;function Bs(e,t){var n=Hc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ws(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Us(e){if(Vs){var t=Ps;if(t){var n=t;if(!Ws(e,t)){if(!(t=Ka(n.nextSibling))||!Ws(e,t))return e.flags=-1025&e.flags|2,Vs=!1,void(zs=e);Bs(zs,n)}zs=e,Ps=Ka(t.firstChild)}else e.flags=-1025&e.flags|2,Vs=!1,zs=e}}function Hs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zs=e}function js(e){if(e!==zs)return!1;if(!Vs)return Hs(e),Vs=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ua(t,e.memoizedProps))for(t=Ps;t;)Bs(e,t),t=Ka(t.nextSibling);if(Hs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ps=Ka(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ps=null}}else Ps=zs?Ka(e.stateNode.nextSibling):null;return!0}function qs(){Ps=zs=null,Vs=!1}var Ks=[];function Xs(){for(var e=0;e<Ks.length;e++)Ks[e]._workInProgressVersionPrimary=null;Ks.length=0}var Ys=y.ReactCurrentDispatcher,Qs=y.ReactCurrentBatchConfig,Js=0,Zs=null,$s=null,eo=null,to=!1,no=!1;function ao(){throw Error(o(321))}function ro(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!la(e[n],t[n]))return!1;return!0}function so(e,t,n,a,r,s){if(Js=s,Zs=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ys.current=null===e||null===e.memoizedState?_o:Fo,e=n(a,r),no){s=0;do{if(no=!1,!(25>s))throw Error(o(301));s+=1,eo=$s=null,t.updateQueue=null,Ys.current=Do,e=n(a,r)}while(no)}if(Ys.current=Ro,t=null!==$s&&null!==$s.next,Js=0,eo=$s=Zs=null,to=!1,t)throw Error(o(300));return e}function oo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===eo?Zs.memoizedState=eo=e:eo=eo.next=e,eo}function io(){if(null===$s){var e=Zs.alternate;e=null!==e?e.memoizedState:null}else e=$s.next;var t=null===eo?Zs.memoizedState:eo.next;if(null!==t)eo=t,$s=e;else{if(null===e)throw Error(o(310));e={memoizedState:($s=e).memoizedState,baseState:$s.baseState,baseQueue:$s.baseQueue,queue:$s.queue,next:null},null===eo?Zs.memoizedState=eo=e:eo=eo.next=e}return eo}function co(e,t){return"function"===typeof t?t(e):t}function lo(e){var t=io(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=$s,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){r=r.next,a=a.baseState;var c=i=s=null,l=r;do{var u=l.lane;if((Js&u)===u)null!==c&&(c=c.next={lane:0,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null}),a=l.eagerReducer===e?l.eagerState:e(a,l.action);else{var h={lane:u,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null};null===c?(i=c=h,s=a):c=c.next=h,Zs.lanes|=u,Bi|=u}l=l.next}while(null!==l&&l!==r);null===c?s=a:c.next=i,la(a,t.memoizedState)||(Mo=!0),t.memoizedState=a,t.baseState=s,t.baseQueue=c,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function uo(e){var t=io(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,s=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=e(s,i.action),i=i.next}while(i!==r);la(s,t.memoizedState)||(Mo=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,a]}function ho(e,t,n){var a=t._getVersion;a=a(t._source);var r=t._workInProgressVersionPrimary;if(null!==r?e=r===a:(e=e.mutableReadLanes,(e=(Js&e)===e)&&(t._workInProgressVersionPrimary=a,Ks.push(t))),e)return n(t._source);throw Ks.push(t),Error(o(350))}function po(e,t,n,a){var r=Fi;if(null===r)throw Error(o(349));var s=t._getVersion,i=s(t._source),c=Ys.current,l=c.useState((function(){return ho(r,t,n)})),u=l[1],h=l[0];l=eo;var d=e.memoizedState,p=d.refs,G=p.getSnapshot,C=d.source;d=d.subscribe;var A=Zs;return e.memoizedState={refs:p,source:t,subscribe:a},c.useEffect((function(){p.getSnapshot=n,p.setSnapshot=u;var e=s(t._source);if(!la(i,e)){e=n(t._source),la(h,e)||(u(e),e=pc(A),r.mutableReadLanes|=e&r.pendingLanes),e=r.mutableReadLanes,r.entangledLanes|=e;for(var a=r.entanglements,o=e;0<o;){var c=31-Ut(o),l=1<<c;a[c]|=e,o&=~l}}}),[n,t,a]),c.useEffect((function(){return a(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var a=pc(A);r.mutableReadLanes|=a&r.pendingLanes}catch(s){n((function(){throw s}))}}))}),[t,a]),la(G,n)&&la(C,t)&&la(d,a)||((e={pending:null,dispatch:null,lastRenderedReducer:co,lastRenderedState:h}).dispatch=u=Eo.bind(null,Zs,e),l.queue=e,l.baseQueue=null,h=ho(r,t,n),l.memoizedState=l.baseState=h),h}function Go(e,t,n){return po(io(),e,t,n)}function Co(e){var t=oo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:co,lastRenderedState:e}).dispatch=Eo.bind(null,Zs,e),[t.memoizedState,e]}function Ao(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=Zs.updateQueue)?(t={lastEffect:null},Zs.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function To(e){return e={current:e},oo().memoizedState=e}function fo(){return io().memoizedState}function mo(e,t,n,a){var r=oo();Zs.flags|=e,r.memoizedState=Ao(1|t,n,void 0,void 0===a?null:a)}function go(e,t,n,a){var r=io();a=void 0===a?null:a;var s=void 0;if(null!==$s){var o=$s.memoizedState;if(s=o.destroy,null!==a&&ro(a,o.deps))return void Ao(t,n,s,a)}Zs.flags|=e,r.memoizedState=Ao(1|t,n,s,a)}function yo(e,t){return mo(516,4,e,t)}function bo(e,t){return go(516,4,e,t)}function xo(e,t){return go(4,2,e,t)}function vo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,go(4,2,vo.bind(null,t,e),n)}function ko(){}function Io(e,t){var n=io();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ro(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function No(e,t){var n=io();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ro(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function So(e,t){var n=Ur();jr(98>n?98:n,(function(){e(!0)})),jr(97<n?97:n,(function(){var n=Qs.transition;Qs.transition=1;try{e(!1),t()}finally{Qs.transition=n}}))}function Eo(e,t,n){var a=dc(),r=pc(e),s={lane:r,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?s.next=s:(s.next=o.next,o.next=s),t.pending=s,o=e.alternate,e===Zs||null!==o&&o===Zs)no=to=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,c=o(i,n);if(s.eagerReducer=o,s.eagerState=c,la(c,i))return}catch(l){}Gc(e,r,a)}}var Ro={readContext:ss,useCallback:ao,useContext:ao,useEffect:ao,useImperativeHandle:ao,useLayoutEffect:ao,useMemo:ao,useReducer:ao,useRef:ao,useState:ao,useDebugValue:ao,useDeferredValue:ao,useTransition:ao,useMutableSource:ao,useOpaqueIdentifier:ao,unstable_isNewReconciler:!1},_o={readContext:ss,useCallback:function(e,t){return oo().memoizedState=[e,void 0===t?null:t],e},useContext:ss,useEffect:yo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,mo(4,2,vo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mo(4,2,e,t)},useMemo:function(e,t){var n=oo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=oo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e=(e=a.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Eo.bind(null,Zs,e),[a.memoizedState,e]},useRef:To,useState:Co,useDebugValue:ko,useDeferredValue:function(e){var t=Co(e),n=t[0],a=t[1];return yo((function(){var t=Qs.transition;Qs.transition=1;try{a(e)}finally{Qs.transition=t}}),[e]),n},useTransition:function(){var e=Co(!1),t=e[0];return To(e=So.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var a=oo();return a.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},po(a,e,t,n)},useOpaqueIdentifier:function(){if(Vs){var e=!1,t=function(e){return{$$typeof:O,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Ya++).toString(36))),Error(o(355))})),n=Co(t)[1];return 0===(2&Zs.mode)&&(Zs.flags|=516,Ao(5,(function(){n("r:"+(Ya++).toString(36))}),void 0,null)),t}return Co(t="r:"+(Ya++).toString(36)),t},unstable_isNewReconciler:!1},Fo={readContext:ss,useCallback:Io,useContext:ss,useEffect:bo,useImperativeHandle:wo,useLayoutEffect:xo,useMemo:No,useReducer:lo,useRef:fo,useState:function(){return lo(co)},useDebugValue:ko,useDeferredValue:function(e){var t=lo(co),n=t[0],a=t[1];return bo((function(){var t=Qs.transition;Qs.transition=1;try{a(e)}finally{Qs.transition=t}}),[e]),n},useTransition:function(){var e=lo(co)[0];return[fo().current,e]},useMutableSource:Go,useOpaqueIdentifier:function(){return lo(co)[0]},unstable_isNewReconciler:!1},Do={readContext:ss,useCallback:Io,useContext:ss,useEffect:bo,useImperativeHandle:wo,useLayoutEffect:xo,useMemo:No,useReducer:uo,useRef:fo,useState:function(){return uo(co)},useDebugValue:ko,useDeferredValue:function(e){var t=uo(co),n=t[0],a=t[1];return bo((function(){var t=Qs.transition;Qs.transition=1;try{a(e)}finally{Qs.transition=t}}),[e]),n},useTransition:function(){var e=uo(co)[0];return[fo().current,e]},useMutableSource:Go,useOpaqueIdentifier:function(){return uo(co)[0]},unstable_isNewReconciler:!1},Oo=y.ReactCurrentOwner,Mo=!1;function Lo(e,t,n,a){t.child=null===e?ks(t,null,n,a):ws(t,e.child,n,a)}function zo(e,t,n,a,r){n=n.render;var s=t.ref;return rs(t,r),a=so(e,t,n,a,s,r),null===e||Mo?(t.flags|=1,Lo(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~r,si(e,t,r))}function Po(e,t,n,a,r,s){if(null===e){var o=n.type;return"function"!==typeof o||jc(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Kc(n.type,null,a,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Vo(e,t,o,a,r,s))}return o=e.child,0===(r&s)&&(r=o.memoizedProps,(n=null!==(n=n.compare)?n:ha)(r,a)&&e.ref===t.ref)?si(e,t,s):(t.flags|=1,(e=qc(o,a)).ref=t.ref,e.return=t,t.child=e)}function Vo(e,t,n,a,r,s){if(null!==e&&ha(e.memoizedProps,a)&&e.ref===t.ref){if(Mo=!1,0===(s&r))return t.lanes=e.lanes,si(e,t,s);0!==(16384&e.flags)&&(Mo=!0)}return Uo(e,t,n,a,s)}function Bo(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode||"unstable-defer-without-hiding"===a.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},bc(t,n);else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bc(t,e),null;t.memoizedState={baseLanes:0},bc(t,null!==s?s.baseLanes:n)}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,bc(t,a);return Lo(e,t,r,n),t.child}function Wo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Uo(e,t,n,a,r){var s=Ar(n)?Gr:dr.current;return s=Cr(t,s),rs(t,r),n=so(e,t,n,a,s,r),null===e||Mo?(t.flags|=1,Lo(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~r,si(e,t,r))}function Ho(e,t,n,a,r){if(Ar(n)){var s=!0;gr(t)}else s=!1;if(rs(t,r),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),fs(t,n,a),gs(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=ss(l):l=Cr(t,l=Ar(n)?Gr:dr.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&ms(t,o,a,l),os=!1;var d=t.memoizedState;o.state=d,ds(t,a,o,r),c=t.memoizedState,i!==a||d!==c||pr.current||os?("function"===typeof u&&(Cs(t,n,u,a),c=t.memoizedState),(i=os||Ts(t,n,i,a,d,c,l))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4)):("function"===typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4),a=!1)}else{o=t.stateNode,cs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:Qr(t.type,i),o.props=l,h=t.pendingProps,d=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=ss(c):c=Cr(t,c=Ar(n)?Gr:dr.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==c)&&ms(t,o,a,c),os=!1,d=t.memoizedState,o.state=d,ds(t,a,o,r);var G=t.memoizedState;i!==h||d!==G||pr.current||os?("function"===typeof p&&(Cs(t,n,p,a),G=t.memoizedState),(l=os||Ts(t,n,l,a,d,G,c))?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,G,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,G,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=a,t.memoizedState=G),o.props=a,o.state=G,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),a=!1)}return jo(e,t,n,a,s,r)}function jo(e,t,n,a,r,s){Wo(e,t);var o=0!==(64&t.flags);if(!a&&!o)return r&&yr(t,n,!1),si(e,t,s);a=t.stateNode,Oo.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=ws(t,e.child,null,s),t.child=ws(t,null,i,s)):Lo(e,t,i,s),t.memoizedState=a.state,r&&yr(t,n,!0),t.child}function qo(e){var t=e.stateNode;t.pendingContext?fr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&fr(0,t.context,!1),_s(e,t.containerInfo)}var Ko,Xo,Yo,Qo,Jo={dehydrated:null,retryLane:0};function Zo(e,t,n){var a,r=t.pendingProps,s=Ms.current,o=!1;return(a=0!==(64&t.flags))||(a=(null===e||null!==e.memoizedState)&&0!==(2&s)),a?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===r.fallback||!0===r.unstable_avoidThisFallback||(s|=1),ur(Ms,1&s),null===e?(void 0!==r.fallback&&Us(t),e=r.children,s=r.fallback,o?(e=$o(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Jo,e):"number"===typeof r.unstable_expectedLoadTime?(e=$o(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Jo,t.lanes=33554432,e):((n=Yc({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(r=ti(e,t,r.children,r.fallback,n),o=t.child,s=e.child.memoizedState,o.memoizedState=null===s?{baseLanes:n}:{baseLanes:s.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=Jo,r):(n=ei(e,t,r.children,n),t.memoizedState=null,n))}function $o(e,t,n,a){var r=e.mode,s=e.child;return t={mode:"hidden",children:t},0===(2&r)&&null!==s?(s.childLanes=0,s.pendingProps=t):s=Yc(t,r,0,null),n=Xc(n,r,a,null),s.return=e,n.return=e,s.sibling=n,e.child=s,n}function ei(e,t,n,a){var r=e.child;return e=r.sibling,n=qc(r,{mode:"visible",children:n}),0===(2&t.mode)&&(n.lanes=a),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function ti(e,t,n,a,r){var s=t.mode,o=e.child;e=o.sibling;var i={mode:"hidden",children:n};return 0===(2&s)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=i,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=qc(o,i),null!==e?a=qc(e,a):(a=Xc(a,s,r,null)).flags|=2,a.return=t,n.return=t,n.sibling=a,t.child=n,a}function ni(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),as(e.return,t)}function ai(e,t,n,a,r,s){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r,lastEffect:s}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailMode=r,o.lastEffect=s)}function ri(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(Lo(e,t,a.children,n),0!==(2&(a=Ms.current)))a=1&a|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ni(e,n);else if(19===e.tag)ni(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(ur(Ms,a),0===(2&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===Ls(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),ai(t,!1,r,n,s,t.lastEffect);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===Ls(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}ai(t,!0,n,null,s,t.lastEffect);break;case"together":ai(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function si(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Bi|=t.lanes,0!==(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=qc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=qc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function oi(e,t){if(!Vs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function ii(e,t,n){var a=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return Ar(t.type)&&Tr(),null;case 3:return Fs(),lr(pr),lr(dr),Xs(),(a=t.stateNode).pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(js(t)?t.flags|=4:a.hydrate||(t.flags|=256)),Xo(t),null;case 5:Os(t);var s=Rs(Es.current);if(n=t.type,null!==e&&null!=t.stateNode)Yo(e,t,n,a,s),e.ref!==t.ref&&(t.flags|=128);else{if(!a){if(null===t.stateNode)throw Error(o(166));return null}if(e=Rs(Ns.current),js(t)){a=t.stateNode,n=t.type;var i=t.memoizedProps;switch(a[Ja]=t,a[Za]=i,n){case"dialog":Sa("cancel",a),Sa("close",a);break;case"iframe":case"object":case"embed":Sa("load",a);break;case"video":case"audio":for(e=0;e<wa.length;e++)Sa(wa[e],a);break;case"source":Sa("error",a);break;case"img":case"image":case"link":Sa("error",a),Sa("load",a);break;case"details":Sa("toggle",a);break;case"input":ee(a,i),Sa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!i.multiple},Sa("invalid",a);break;case"textarea":ce(a,i),Sa("invalid",a)}for(var l in xe(n,i),e=null,i)i.hasOwnProperty(l)&&(s=i[l],"children"===l?"string"===typeof s?a.textContent!==s&&(e=["children",s]):"number"===typeof s&&a.textContent!==""+s&&(e=["children",""+s]):c.hasOwnProperty(l)&&null!=s&&"onScroll"===l&&Sa("scroll",a));switch(n){case"input":Q(a),ae(a,i,!0);break;case"textarea":Q(a),ue(a);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(a.onclick=Pa)}a=e,t.updateQueue=a,null!==a&&(t.flags|=4)}else{switch(l=9===s.nodeType?s:s.ownerDocument,e===he.html&&(e=de(n)),e===he.html?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=l.createElement(n,{is:a.is}):(e=l.createElement(n),"select"===n&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,n),e[Ja]=t,e[Za]=a,Ko(e,t,!1,!1),t.stateNode=e,l=ve(n,a),n){case"dialog":Sa("cancel",e),Sa("close",e),s=a;break;case"iframe":case"object":case"embed":Sa("load",e),s=a;break;case"video":case"audio":for(s=0;s<wa.length;s++)Sa(wa[s],e);s=a;break;case"source":Sa("error",e),s=a;break;case"img":case"image":case"link":Sa("error",e),Sa("load",e),s=a;break;case"details":Sa("toggle",e),s=a;break;case"input":ee(e,a),s=$(e,a),Sa("invalid",e);break;case"option":s=se(e,a);break;case"select":e._wrapperState={wasMultiple:!!a.multiple},s=r({},a,{value:void 0}),Sa("invalid",e);break;case"textarea":ce(e,a),s=ie(e,a),Sa("invalid",e);break;default:s=a}xe(n,s);var u=s;for(i in u)if(u.hasOwnProperty(i)){var h=u[i];"style"===i?ye(e,h):"dangerouslySetInnerHTML"===i?null!=(h=h?h.__html:void 0)&&Ae(e,h):"children"===i?"string"===typeof h?("textarea"!==n||""!==h)&&Te(e,h):"number"===typeof h&&Te(e,""+h):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(c.hasOwnProperty(i)?null!=h&&"onScroll"===i&&Sa("scroll",e):null!=h&&g(e,i,h,l))}switch(n){case"input":Q(e),ae(e,a,!1);break;case"textarea":Q(e),ue(e);break;case"option":null!=a.value&&e.setAttribute("value",""+X(a.value));break;case"select":e.multiple=!!a.multiple,null!=(i=a.value)?oe(e,!!a.multiple,i,!1):null!=a.defaultValue&&oe(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=Pa)}Wa(n,a)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Qo(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(o(166));n=Rs(Es.current),Rs(Ns.current),js(t)?(a=t.stateNode,n=t.memoizedProps,a[Ja]=t,a.nodeValue!==n&&(t.flags|=4)):((a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[Ja]=t,t.stateNode=a)}return null;case 13:return lr(Ms),a=t.memoizedState,0!==(64&t.flags)?(t.lanes=n,t):(a=null!==a,n=!1,null===e?void 0!==t.memoizedProps.fallback&&js(t):n=null!==e.memoizedState,a&&!n&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Ms.current)?0===zi&&(zi=3):(0!==zi&&3!==zi||(zi=4),null===Fi||0===(134217727&Bi)&&0===(134217727&Wi)||fc(Fi,Oi))),(a||n)&&(t.flags|=4),null);case 4:return Fs(),Xo(t),null===e&&Ra(t.stateNode.containerInfo),null;case 10:return ns(t),null;case 19:if(lr(Ms),null===(a=t.memoizedState))return null;if(i=0!==(64&t.flags),null===(l=a.rendering))if(i)oi(a,!1);else{if(0!==zi||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(l=Ls(e))){for(t.flags|=64,oi(a,!1),null!==(i=l.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===a.lastEffect&&(t.firstEffect=null),t.lastEffect=a.lastEffect,a=n,n=t.child;null!==n;)e=a,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ur(Ms,1&Ms.current|2),t.child}e=e.sibling}null!==a.tail&&Wr()>qi&&(t.flags|=64,i=!0,oi(a,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Ls(l))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),oi(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!Vs)return null!==(t=t.lastEffect=a.lastEffect)&&(t.nextEffect=null),null}else 2*Wr()-a.renderingStartTime>qi&&1073741824!==n&&(t.flags|=64,i=!0,oi(a,!1),t.lanes=33554432);a.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=a.last)?n.sibling=l:t.child=l,a.last=l)}return null!==a.tail?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.lastEffect=t.lastEffect,a.renderingStartTime=Wr(),n.sibling=null,t=Ms.current,ur(Ms,i?1&t|2:1&t),n):null;case 23:case 24:return xc(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==a.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function ci(e){switch(e.tag){case 1:Ar(e.type)&&Tr();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Fs(),lr(pr),lr(dr),Xs(),0!==(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return Os(e),null;case 13:return lr(Ms),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lr(Ms),null;case 4:return Fs(),null;case 10:return ns(e),null;case 23:case 24:return xc(),null;default:return null}}function li(e,t){try{var n="",a=t;do{n+=q(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r}}function ui(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}Ko=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Xo=function(){},Yo=function(e,t,n,a){var s=e.memoizedProps;if(s!==a){e=t.stateNode,Rs(Ns.current);var o,i=null;switch(n){case"input":s=$(e,s),a=$(e,a),i=[];break;case"option":s=se(e,s),a=se(e,a),i=[];break;case"select":s=r({},s,{value:void 0}),a=r({},a,{value:void 0}),i=[];break;case"textarea":s=ie(e,s),a=ie(e,a),i=[];break;default:"function"!==typeof s.onClick&&"function"===typeof a.onClick&&(e.onclick=Pa)}for(h in xe(n,a),n=null,s)if(!a.hasOwnProperty(h)&&s.hasOwnProperty(h)&&null!=s[h])if("style"===h){var l=s[h];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(c.hasOwnProperty(h)?i||(i=[]):(i=i||[]).push(h,null));for(h in a){var u=a[h];if(l=null!=s?s[h]:void 0,a.hasOwnProperty(h)&&u!==l&&(null!=u||null!=l))if("style"===h)if(l){for(o in l)!l.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in u)u.hasOwnProperty(o)&&l[o]!==u[o]&&(n||(n={}),n[o]=u[o])}else n||(i||(i=[]),i.push(h,n)),n=u;else"dangerouslySetInnerHTML"===h?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(h,u)):"children"===h?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(h,""+u):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(c.hasOwnProperty(h)?(null!=u&&"onScroll"===h&&Sa("scroll",e),i||l===u||(i=[])):"object"===typeof u&&null!==u&&u.$$typeof===O?u.toString():(i=i||[]).push(h,u))}n&&(i=i||[]).push("style",n);var h=i;(t.updateQueue=h)&&(t.flags|=4)}},Qo=function(e,t,n,a){n!==a&&(t.flags|=4)};var hi="function"===typeof WeakMap?WeakMap:Map;function di(e,t,n){(n=ls(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Qi||(Qi=!0,Ji=a),ui(0,t)},n}function pi(e,t,n){(n=ls(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return ui(0,t),a(r)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){"function"!==typeof a&&(null===Zi?Zi=new Set([this]):Zi.add(this),ui(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var Gi="function"===typeof WeakSet?WeakSet:Set;function Ci(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){Vc(e,n)}else t.current=null}function Ai(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,a=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qr(t.type,n),a),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&qa(t.stateNode.containerInfo))}throw Error(o(163))}function Ti(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var a=e.create;e.destroy=a()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var r=e;a=r.next,0!==(4&(r=r.tag))&&0!==(1&r)&&(Lc(n,e),Mc(n,e)),e=a}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(a=n.elementType===n.type?t.memoizedProps:Qr(n.type,t.memoizedProps),e.componentDidUpdate(a,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ps(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}ps(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Wa(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&yt(n)))))}throw Error(o(163))}function fi(e,t){for(var n=e;;){if(5===n.tag){var a=n.stateNode;if(t)"function"===typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none";else{a=n.stateNode;var r=n.memoizedProps.style;r=void 0!==r&&null!==r&&r.hasOwnProperty("display")?r.display:null,a.style.display=ge("display",r)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function mi(e,t){if(xr&&"function"===typeof xr.onCommitFiberUnmount)try{xr.onCommitFiberUnmount(br,t)}catch(s){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var a=n,r=a.destroy;if(a=a.tag,void 0!==r)if(0!==(4&a))Lc(t,n);else{a=t;try{r()}catch(s){Vc(a,s)}}n=n.next}while(n!==e)}break;case 1:if(Ci(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(s){Vc(t,s)}break;case 5:Ci(t);break;case 4:wi(e,t)}}function gi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yi(e){return 5===e.tag||3===e.tag||4===e.tag}function bi(e){e:{for(var t=e.return;null!==t;){if(yi(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var a=!1;break;case 3:case 4:t=t.containerInfo,a=!0;break;default:throw Error(o(161))}16&n.flags&&(Te(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}a?xi(e,n,t):vi(e,n,t)}function xi(e,t,n){var a=e.tag,r=5===a||6===a;if(r)e=r?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Pa));else if(4!==a&&null!==(e=e.child))for(xi(e,t,n),e=e.sibling;null!==e;)xi(e,t,n),e=e.sibling}function vi(e,t,n){var a=e.tag,r=5===a||6===a;if(r)e=r?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(vi(e,t,n),e=e.sibling;null!==e;)vi(e,t,n),e=e.sibling}function wi(e,t){for(var n,a,r=t,s=!1;;){if(!s){s=r.return;e:for(;;){if(null===s)throw Error(o(160));switch(n=s.stateNode,s.tag){case 5:a=!1;break e;case 3:case 4:n=n.containerInfo,a=!0;break e}s=s.return}s=!0}if(5===r.tag||6===r.tag){e:for(var i=e,c=r,l=c;;)if(mi(i,l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===c)break e;for(;null===l.sibling;){if(null===l.return||l.return===c)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}a?(i=n,c=r.stateNode,8===i.nodeType?i.parentNode.removeChild(c):i.removeChild(c)):n.removeChild(r.stateNode)}else if(4===r.tag){if(null!==r.child){n=r.stateNode.containerInfo,a=!0,r.child.return=r,r=r.child;continue}}else if(mi(e,r),null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;4===(r=r.return).tag&&(s=!1)}r.sibling.return=r.return,r=r.sibling}}function ki(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var a=n=n.next;do{3===(3&a.tag)&&(e=a.destroy,a.destroy=void 0,void 0!==e&&e()),a=a.next}while(a!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){a=t.memoizedProps;var r=null!==e?e.memoizedProps:a;e=t.type;var s=t.updateQueue;if(t.updateQueue=null,null!==s){for(n[Za]=a,"input"===e&&"radio"===a.type&&null!=a.name&&te(n,a),ve(e,r),t=ve(e,a),r=0;r<s.length;r+=2){var i=s[r],c=s[r+1];"style"===i?ye(n,c):"dangerouslySetInnerHTML"===i?Ae(n,c):"children"===i?Te(n,c):g(n,i,c,t)}switch(e){case"input":ne(n,a);break;case"textarea":le(n,a);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!a.multiple,null!=(s=a.value)?oe(n,!!a.multiple,s,!1):e!==!!a.multiple&&(null!=a.defaultValue?oe(n,!!a.multiple,a.defaultValue,!0):oe(n,!!a.multiple,a.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,yt(n.containerInfo)));case 13:return null!==t.memoizedState&&(ji=Wr(),fi(t.child,!0)),void Ii(t);case 19:return void Ii(t);case 23:case 24:return void fi(t,null!==t.memoizedState)}throw Error(o(163))}function Ii(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Gi),t.forEach((function(t){var a=Wc.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function Ni(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Si=Math.ceil,Ei=y.ReactCurrentDispatcher,Ri=y.ReactCurrentOwner,_i=0,Fi=null,Di=null,Oi=0,Mi=0,Li=cr(0),zi=0,Pi=null,Vi=0,Bi=0,Wi=0,Ui=0,Hi=null,ji=0,qi=1/0;function Ki(){qi=Wr()+500}var Xi,Yi=null,Qi=!1,Ji=null,Zi=null,$i=!1,ec=null,tc=90,nc=[],ac=[],rc=null,sc=0,oc=null,ic=-1,cc=0,lc=0,uc=null,hc=!1;function dc(){return 0!==(48&_i)?Wr():-1!==ic?ic:ic=Wr()}function pc(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Ur()?1:2;if(0===cc&&(cc=Vi),0!==Yr.transition){0!==lc&&(lc=null!==Hi?Hi.pendingLanes:0),e=cc;var t=4186112&~lc;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Ur(),0!==(4&_i)&&98===e?e=Pt(12,cc):e=Pt(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),cc),e}function Gc(e,t,n){if(50<sc)throw sc=0,oc=null,Error(o(185));if(null===(e=Cc(e,t)))return null;Wt(e,t,n),e===Fi&&(Wi|=t,4===zi&&fc(e,Oi));var a=Ur();1===t?0!==(8&_i)&&0===(48&_i)?mc(e):(Ac(e,n),0===_i&&(Ki(),Kr())):(0===(4&_i)||98!==a&&99!==a||(null===rc?rc=new Set([e]):rc.add(e)),Ac(e,n)),Hi=e}function Cc(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function Ac(e,t){for(var n=e.callbackNode,a=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,i=e.pendingLanes;0<i;){var c=31-Ut(i),l=1<<c,u=s[c];if(-1===u){if(0===(l&a)||0!==(l&r)){u=t,Mt(l);var h=Ot;s[c]=10<=h?u+250:6<=h?u+5e3:-1}}else u<=t&&(e.expiredLanes|=l);i&=~l}if(a=Lt(e,e===Fi?Oi:0),t=Ot,0===a)null!==n&&(n!==Mr&&kr(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Mr&&kr(n)}15===t?(n=mc.bind(null,e),null===zr?(zr=[n],Pr=wr(Rr,Xr)):zr.push(n),n=Mr):14===t?n=qr(99,mc.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),n=qr(n,Tc.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function Tc(e){if(ic=-1,lc=cc=0,0!==(48&_i))throw Error(o(327));var t=e.callbackNode;if(Oc()&&e.callbackNode!==t)return null;var n=Lt(e,e===Fi?Oi:0);if(0===n)return null;var a=n,r=_i;_i|=16;var s=kc();for(Fi===e&&Oi===a||(Ki(),vc(e,a));;)try{Sc();break}catch(c){wc(e,c)}if(ts(),Ei.current=s,_i=r,null!==Di?a=0:(Fi=null,Oi=0,a=zi),0!==(Vi&Wi))vc(e,0);else if(0!==a){if(2===a&&(_i|=64,e.hydrate&&(e.hydrate=!1,qa(e.containerInfo)),0!==(n=zt(e))&&(a=Ic(e,n))),1===a)throw t=Pi,vc(e,0),fc(e,n),Ac(e,Wr()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,a){case 0:case 1:throw Error(o(345));case 2:case 5:_c(e);break;case 3:if(fc(e,n),(62914560&n)===n&&10<(a=ji+500-Wr())){if(0!==Lt(e,0))break;if(((r=e.suspendedLanes)&n)!==n){dc(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=Ha(_c.bind(null,e),a);break}_c(e);break;case 4:if(fc(e,n),(4186112&n)===n)break;for(a=e.eventTimes,r=-1;0<n;){var i=31-Ut(n);s=1<<i,(i=a[i])>r&&(r=i),n&=~s}if(n=r,10<(n=(120>(n=Wr()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Si(n/1960))-n)){e.timeoutHandle=Ha(_c.bind(null,e),n);break}_c(e);break;default:throw Error(o(329))}}return Ac(e,Wr()),e.callbackNode===t?Tc.bind(null,e):null}function fc(e,t){for(t&=~Ui,t&=~Wi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),a=1<<n;e[n]=-1,t&=~a}}function mc(e){if(0!==(48&_i))throw Error(o(327));if(Oc(),e===Fi&&0!==(e.expiredLanes&Oi)){var t=Oi,n=Ic(e,t);0!==(Vi&Wi)&&(n=Ic(e,t=Lt(e,t)))}else n=Ic(e,t=Lt(e,0));if(0!==e.tag&&2===n&&(_i|=64,e.hydrate&&(e.hydrate=!1,qa(e.containerInfo)),0!==(t=zt(e))&&(n=Ic(e,t))),1===n)throw n=Pi,vc(e,0),fc(e,t),Ac(e,Wr()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,_c(e),Ac(e,Wr()),null}function gc(e,t){var n=_i;_i|=1;try{return e(t)}finally{0===(_i=n)&&(Ki(),Kr())}}function yc(e,t){var n=_i;_i&=-2,_i|=8;try{return e(t)}finally{0===(_i=n)&&(Ki(),Kr())}}function bc(e,t){ur(Li,Mi),Mi|=t,Vi|=t}function xc(){Mi=Li.current,lr(Li)}function vc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ja(n)),null!==Di)for(n=Di.return;null!==n;){var a=n;switch(a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Tr();break;case 3:Fs(),lr(pr),lr(dr),Xs();break;case 5:Os(a);break;case 4:Fs();break;case 13:case 19:lr(Ms);break;case 10:ns(a);break;case 23:case 24:xc()}n=n.return}Fi=e,Di=qc(e.current,null),Oi=Mi=Vi=t,zi=0,Pi=null,Ui=Wi=Bi=0}function wc(e,t){for(;;){var n=Di;try{if(ts(),Ys.current=Ro,to){for(var a=Zs.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}to=!1}if(Js=0,eo=$s=Zs=null,no=!1,Ri.current=null,null===n||null===n.return){zi=1,Pi=t,Di=null;break}e:{var s=e,o=n.return,i=n,c=t;if(t=Oi,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==c&&"object"===typeof c&&"function"===typeof c.then){var l=c;if(0===(2&i.mode)){var u=i.alternate;u?(i.updateQueue=u.updateQueue,i.memoizedState=u.memoizedState,i.lanes=u.lanes):(i.updateQueue=null,i.memoizedState=null)}var h=0!==(1&Ms.current),d=o;do{var p;if(p=13===d.tag){var G=d.memoizedState;if(null!==G)p=null!==G.dehydrated;else{var C=d.memoizedProps;p=void 0!==C.fallback&&(!0!==C.unstable_avoidThisFallback||!h)}}if(p){var A=d.updateQueue;if(null===A){var T=new Set;T.add(l),d.updateQueue=T}else A.add(l);if(0===(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var f=ls(-1,1);f.tag=2,us(i,f)}i.lanes|=1;break e}c=void 0,i=t;var m=s.pingCache;if(null===m?(m=s.pingCache=new hi,c=new Set,m.set(l,c)):void 0===(c=m.get(l))&&(c=new Set,m.set(l,c)),!c.has(i)){c.add(i);var g=Bc.bind(null,s,l,i);l.then(g,g)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);c=Error((K(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==zi&&(zi=2),c=li(c,i),d=o;do{switch(d.tag){case 3:s=c,d.flags|=4096,t&=-t,d.lanes|=t,hs(d,di(0,s,t));break e;case 1:s=c;var y=d.type,b=d.stateNode;if(0===(64&d.flags)&&("function"===typeof y.getDerivedStateFromError||null!==b&&"function"===typeof b.componentDidCatch&&(null===Zi||!Zi.has(b)))){d.flags|=4096,t&=-t,d.lanes|=t,hs(d,pi(d,s,t));break e}}d=d.return}while(null!==d)}Rc(n)}catch(x){t=x,Di===n&&null!==n&&(Di=n=n.return);continue}break}}function kc(){var e=Ei.current;return Ei.current=Ro,null===e?Ro:e}function Ic(e,t){var n=_i;_i|=16;var a=kc();for(Fi===e&&Oi===t||vc(e,t);;)try{Nc();break}catch(r){wc(e,r)}if(ts(),_i=n,Ei.current=a,null!==Di)throw Error(o(261));return Fi=null,Oi=0,zi}function Nc(){for(;null!==Di;)Ec(Di)}function Sc(){for(;null!==Di&&!Ir();)Ec(Di)}function Ec(e){var t=Xi(e.alternate,e,Mi);e.memoizedProps=e.pendingProps,null===t?Rc(e):Di=t,Ri.current=null}function Rc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(n=ii(n,t,Mi)))return void(Di=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!==(1073741824&Mi)||0===(4&n.mode)){for(var a=0,r=n.child;null!==r;)a|=r.lanes|r.childLanes,r=r.sibling;n.childLanes=a}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ci(t)))return n.flags&=2047,void(Di=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Di=t);Di=t=e}while(null!==t);0===zi&&(zi=5)}function _c(e){var t=Ur();return jr(99,Fc.bind(null,e,t)),null}function Fc(e,t){do{Oc()}while(null!==ec);if(0!==(48&_i))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var a=n.lanes|n.childLanes,r=a,s=e.pendingLanes&~r;e.pendingLanes=r,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=r,e.mutableReadLanes&=r,e.entangledLanes&=r,r=e.entanglements;for(var i=e.eventTimes,c=e.expirationTimes;0<s;){var l=31-Ut(s),u=1<<l;r[l]=0,i[l]=-1,c[l]=-1,s&=~u}if(null!==rc&&0===(24&a)&&rc.has(e)&&rc.delete(e),e===Fi&&(Di=Fi=null,Oi=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){if(r=_i,_i|=32,Ri.current=null,Va=Xt,Aa(i=Ca())){if("selectionStart"in i)c={start:i.selectionStart,end:i.selectionEnd};else e:if(c=(c=i.ownerDocument)&&c.defaultView||window,(u=c.getSelection&&c.getSelection())&&0!==u.rangeCount){c=u.anchorNode,s=u.anchorOffset,l=u.focusNode,u=u.focusOffset;try{c.nodeType,l.nodeType}catch(k){c=null;break e}var h=0,d=-1,p=-1,G=0,C=0,A=i,T=null;t:for(;;){for(var f;A!==c||0!==s&&3!==A.nodeType||(d=h+s),A!==l||0!==u&&3!==A.nodeType||(p=h+u),3===A.nodeType&&(h+=A.nodeValue.length),null!==(f=A.firstChild);)T=A,A=f;for(;;){if(A===i)break t;if(T===c&&++G===s&&(d=h),T===l&&++C===u&&(p=h),null!==(f=A.nextSibling))break;T=(A=T).parentNode}A=f}c=-1===d||-1===p?null:{start:d,end:p}}else c=null;c=c||{start:0,end:0}}else c=null;Ba={focusedElem:i,selectionRange:c},Xt=!1,uc=null,hc=!1,Yi=a;do{try{Dc()}catch(k){if(null===Yi)throw Error(o(330));Vc(Yi,k),Yi=Yi.nextEffect}}while(null!==Yi);uc=null,Yi=a;do{try{for(i=e;null!==Yi;){var m=Yi.flags;if(16&m&&Te(Yi.stateNode,""),128&m){var g=Yi.alternate;if(null!==g){var y=g.ref;null!==y&&("function"===typeof y?y(null):y.current=null)}}switch(1038&m){case 2:bi(Yi),Yi.flags&=-3;break;case 6:bi(Yi),Yi.flags&=-3,ki(Yi.alternate,Yi);break;case 1024:Yi.flags&=-1025;break;case 1028:Yi.flags&=-1025,ki(Yi.alternate,Yi);break;case 4:ki(Yi.alternate,Yi);break;case 8:wi(i,c=Yi);var b=c.alternate;gi(c),null!==b&&gi(b)}Yi=Yi.nextEffect}}catch(k){if(null===Yi)throw Error(o(330));Vc(Yi,k),Yi=Yi.nextEffect}}while(null!==Yi);if(y=Ba,g=Ca(),m=y.focusedElem,i=y.selectionRange,g!==m&&m&&m.ownerDocument&&Ga(m.ownerDocument.documentElement,m)){null!==i&&Aa(m)&&(g=i.start,void 0===(y=i.end)&&(y=g),"selectionStart"in m?(m.selectionStart=g,m.selectionEnd=Math.min(y,m.value.length)):(y=(g=m.ownerDocument||document)&&g.defaultView||window).getSelection&&(y=y.getSelection(),c=m.textContent.length,b=Math.min(i.start,c),i=void 0===i.end?b:Math.min(i.end,c),!y.extend&&b>i&&(c=i,i=b,b=c),c=pa(m,b),s=pa(m,i),c&&s&&(1!==y.rangeCount||y.anchorNode!==c.node||y.anchorOffset!==c.offset||y.focusNode!==s.node||y.focusOffset!==s.offset)&&((g=g.createRange()).setStart(c.node,c.offset),y.removeAllRanges(),b>i?(y.addRange(g),y.extend(s.node,s.offset)):(g.setEnd(s.node,s.offset),y.addRange(g))))),g=[];for(y=m;y=y.parentNode;)1===y.nodeType&&g.push({element:y,left:y.scrollLeft,top:y.scrollTop});for("function"===typeof m.focus&&m.focus(),m=0;m<g.length;m++)(y=g[m]).element.scrollLeft=y.left,y.element.scrollTop=y.top}Xt=!!Va,Ba=Va=null,e.current=n,Yi=a;do{try{for(m=e;null!==Yi;){var x=Yi.flags;if(36&x&&Ti(m,Yi.alternate,Yi),128&x){g=void 0;var v=Yi.ref;if(null!==v){var w=Yi.stateNode;Yi.tag,g=w,"function"===typeof v?v(g):v.current=g}}Yi=Yi.nextEffect}}catch(k){if(null===Yi)throw Error(o(330));Vc(Yi,k),Yi=Yi.nextEffect}}while(null!==Yi);Yi=null,Lr(),_i=r}else e.current=n;if($i)$i=!1,ec=e,tc=t;else for(Yi=a;null!==Yi;)t=Yi.nextEffect,Yi.nextEffect=null,8&Yi.flags&&((x=Yi).sibling=null,x.stateNode=null),Yi=t;if(0===(a=e.pendingLanes)&&(Zi=null),1===a?e===oc?sc++:(sc=0,oc=e):sc=0,n=n.stateNode,xr&&"function"===typeof xr.onCommitFiberRoot)try{xr.onCommitFiberRoot(br,n,void 0,64===(64&n.current.flags))}catch(k){}if(Ac(e,Wr()),Qi)throw Qi=!1,e=Ji,Ji=null,e;return 0!==(8&_i)||Kr(),null}function Dc(){for(;null!==Yi;){var e=Yi.alternate;hc||null===uc||(0!==(8&Yi.flags)?$e(Yi,uc)&&(hc=!0):13===Yi.tag&&Ni(e,Yi)&&$e(Yi,uc)&&(hc=!0));var t=Yi.flags;0!==(256&t)&&Ai(e,Yi),0===(512&t)||$i||($i=!0,qr(97,(function(){return Oc(),null}))),Yi=Yi.nextEffect}}function Oc(){if(90!==tc){var e=97<tc?97:tc;return tc=90,jr(e,zc)}return!1}function Mc(e,t){nc.push(t,e),$i||($i=!0,qr(97,(function(){return Oc(),null})))}function Lc(e,t){ac.push(t,e),$i||($i=!0,qr(97,(function(){return Oc(),null})))}function zc(){if(null===ec)return!1;var e=ec;if(ec=null,0!==(48&_i))throw Error(o(331));var t=_i;_i|=32;var n=ac;ac=[];for(var a=0;a<n.length;a+=2){var r=n[a],s=n[a+1],i=r.destroy;if(r.destroy=void 0,"function"===typeof i)try{i()}catch(l){if(null===s)throw Error(o(330));Vc(s,l)}}for(n=nc,nc=[],a=0;a<n.length;a+=2){r=n[a],s=n[a+1];try{var c=r.create;r.destroy=c()}catch(l){if(null===s)throw Error(o(330));Vc(s,l)}}for(c=e.current.firstEffect;null!==c;)e=c.nextEffect,c.nextEffect=null,8&c.flags&&(c.sibling=null,c.stateNode=null),c=e;return _i=t,Kr(),!0}function Pc(e,t,n){us(e,t=di(0,t=li(n,t),1)),t=dc(),null!==(e=Cc(e,1))&&(Wt(e,1,t),Ac(e,t))}function Vc(e,t){if(3===e.tag)Pc(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Pc(n,e,t);break}if(1===n.tag){var a=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Zi||!Zi.has(a))){var r=pi(n,e=li(t,e),1);if(us(n,r),r=dc(),null!==(n=Cc(n,1)))Wt(n,1,r),Ac(n,r);else if("function"===typeof a.componentDidCatch&&(null===Zi||!Zi.has(a)))try{a.componentDidCatch(t,e)}catch(s){}break}}n=n.return}}function Bc(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=dc(),e.pingedLanes|=e.suspendedLanes&n,Fi===e&&(Oi&n)===n&&(4===zi||3===zi&&(62914560&Oi)===Oi&&500>Wr()-ji?vc(e,0):Ui|=n),Ac(e,t)}function Wc(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Ur()?1:2:(0===cc&&(cc=Vi),0===(t=Vt(62914560&~cc))&&(t=4194304))),n=dc(),null!==(e=Cc(e,t))&&(Wt(e,t,n),Ac(e,n))}function Uc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Hc(e,t,n,a){return new Uc(e,t,n,a)}function jc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function qc(e,t){var n=e.alternate;return null===n?((n=Hc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Kc(e,t,n,a,r,s){var i=2;if(a=e,"function"===typeof e)jc(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case v:return Xc(n.children,r,s,t);case M:i=8,r|=16;break;case w:i=8,r|=1;break;case k:return(e=Hc(12,n,t,8|r)).elementType=k,e.type=k,e.lanes=s,e;case E:return(e=Hc(13,n,t,r)).type=E,e.elementType=E,e.lanes=s,e;case R:return(e=Hc(19,n,t,r)).elementType=R,e.lanes=s,e;case L:return Yc(n,r,s,t);case z:return(e=Hc(24,n,t,r)).elementType=z,e.lanes=s,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case I:i=10;break e;case N:i=9;break e;case S:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e;case D:i=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Hc(i,n,t,r)).elementType=e,t.type=a,t.lanes=s,t}function Xc(e,t,n,a){return(e=Hc(7,e,a,t)).lanes=n,e}function Yc(e,t,n,a){return(e=Hc(23,e,a,t)).elementType=L,e.lanes=n,e}function Qc(e,t,n){return(e=Hc(6,e,null,t)).lanes=n,e}function Jc(e,t,n){return(t=Hc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zc(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function $c(e,t,n,a){var r=t.current,s=dc(),i=pc(r);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break t;case 1:if(Ar(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break t}}c=c.return}while(null!==c);throw Error(o(171))}if(1===n.tag){var l=n.type;if(Ar(l)){n=mr(n,l,c);break e}}n=c}else n=hr;return null===t.context?t.context=n:t.pendingContext=n,(t=ls(s,i)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),us(r,t),Gc(r,i,s),i}function el(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function tl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function nl(e,t){tl(e,t),(e=e.alternate)&&tl(e,t)}function al(e,t,n){var a=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Zc(e,t,null!=n&&!0===n.hydrate),t=Hc(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,is(t),e[$a]=n.current,Ra(8===e.nodeType?e.parentNode:e),a)for(e=0;e<a.length;e++){var r=(t=a[e])._getVersion;r=r(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,r]:n.mutableSourceEagerHydrationData.push(t,r)}this._internalRoot=n}function rl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function sl(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s._internalRoot;if("function"===typeof r){var i=r;r=function(){var e=el(o);i.call(e)}}$c(t,o,e,r)}else{if(s=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new al(e,0,t?{hydrate:!0}:void 0)}(n,a),o=s._internalRoot,"function"===typeof r){var c=r;r=function(){var e=el(o);c.call(e)}}yc((function(){$c(t,o,e,r)}))}return el(o)}function ol(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rl(t))throw Error(o(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Xi=function(e,t,n){var a=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||pr.current)Mo=!0;else{if(0===(n&a)){switch(Mo=!1,t.tag){case 3:qo(t),qs();break;case 5:Ds(t);break;case 1:Ar(t.type)&&gr(t);break;case 4:_s(t,t.stateNode.containerInfo);break;case 10:a=t.memoizedProps.value;var r=t.type._context;ur(Jr,r._currentValue),r._currentValue=a;break;case 13:if(null!==t.memoizedState)return 0!==(n&t.child.childLanes)?Zo(e,t,n):(ur(Ms,1&Ms.current),null!==(t=si(e,t,n))?t.sibling:null);ur(Ms,1&Ms.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(64&e.flags)){if(a)return ri(e,t,n);t.flags|=64}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),ur(Ms,Ms.current),a)break;return null;case 23:case 24:return t.lanes=0,Bo(e,t,n)}return si(e,t,n)}Mo=0!==(16384&e.flags)}else Mo=!1;switch(t.lanes=0,t.tag){case 2:if(a=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=Cr(t,dr.current),rs(t,n),r=so(null,t,a,e,r,n),t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ar(a)){var s=!0;gr(t)}else s=!1;t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,is(t);var i=a.getDerivedStateFromProps;"function"===typeof i&&Cs(t,a,i,e),r.updater=As,t.stateNode=r,r._reactInternals=t,gs(t,a,e,n),t=jo(null,t,a,!0,s,n)}else t.tag=0,Lo(null,t,r,n),t=t.child;return t;case 16:r=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=(s=r._init)(r._payload),t.type=r,s=t.tag=function(e){if("function"===typeof e)return jc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===S)return 11;if(e===_)return 14}return 2}(r),e=Qr(r,e),s){case 0:t=Uo(null,t,r,e,n);break e;case 1:t=Ho(null,t,r,e,n);break e;case 11:t=zo(null,t,r,e,n);break e;case 14:t=Po(null,t,r,Qr(r.type,e),a,n);break e}throw Error(o(306,r,""))}return t;case 0:return a=t.type,r=t.pendingProps,Uo(e,t,a,r=t.elementType===a?r:Qr(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ho(e,t,a,r=t.elementType===a?r:Qr(a,r),n);case 3:if(qo(t),a=t.updateQueue,null===e||null===a)throw Error(o(282));if(a=t.pendingProps,r=null!==(r=t.memoizedState)?r.element:null,cs(e,t),ds(t,a,null,n),(a=t.memoizedState.element)===r)qs(),t=si(e,t,n);else{if((s=(r=t.stateNode).hydrate)&&(Ps=Ka(t.stateNode.containerInfo.firstChild),zs=t,s=Vs=!0),s){if(null!=(e=r.mutableSourceEagerHydrationData))for(r=0;r<e.length;r+=2)(s=e[r])._workInProgressVersionPrimary=e[r+1],Ks.push(s);for(n=ks(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Lo(e,t,a,n),qs();t=t.child}return t;case 5:return Ds(t),null===e&&Us(t),a=t.type,r=t.pendingProps,s=null!==e?e.memoizedProps:null,i=r.children,Ua(a,r)?i=null:null!==s&&Ua(a,s)&&(t.flags|=16),Wo(e,t),Lo(e,t,i,n),t.child;case 6:return null===e&&Us(t),null;case 13:return Zo(e,t,n);case 4:return _s(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=ws(t,null,a,n):Lo(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,zo(e,t,a,r=t.elementType===a?r:Qr(a,r),n);case 7:return Lo(e,t,t.pendingProps,n),t.child;case 8:case 12:return Lo(e,t,t.pendingProps.children,n),t.child;case 10:e:{a=t.type._context,r=t.pendingProps,i=t.memoizedProps,s=r.value;var c=t.type._context;if(ur(Jr,c._currentValue),c._currentValue=s,null!==i)if(c=i.value,0===(s=la(c,s)?0:0|("function"===typeof a._calculateChangedBits?a._calculateChangedBits(c,s):1073741823))){if(i.children===r.children&&!pr.current){t=si(e,t,n);break e}}else for(null!==(c=t.child)&&(c.return=t);null!==c;){var l=c.dependencies;if(null!==l){i=c.child;for(var u=l.firstContext;null!==u;){if(u.context===a&&0!==(u.observedBits&s)){1===c.tag&&((u=ls(-1,n&-n)).tag=2,us(c,u)),c.lanes|=n,null!==(u=c.alternate)&&(u.lanes|=n),as(c.return,n),l.lanes|=n;break}u=u.next}}else i=10===c.tag&&c.type===t.type?null:c.child;if(null!==i)i.return=c;else for(i=c;null!==i;){if(i===t){i=null;break}if(null!==(c=i.sibling)){c.return=i.return,i=c;break}i=i.return}c=i}Lo(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=(s=t.pendingProps).children,rs(t,n),a=a(r=ss(r,s.unstable_observedBits)),t.flags|=1,Lo(e,t,a,n),t.child;case 14:return s=Qr(r=t.type,t.pendingProps),Po(e,t,r,s=Qr(r.type,s),a,n);case 15:return Vo(e,t,t.type,t.pendingProps,a,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:Qr(a,r),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,Ar(a)?(e=!0,gr(t)):e=!1,rs(t,n),fs(t,a,r),gs(t,a,r,n),jo(null,t,a,!0,e,n);case 19:return ri(e,t,n);case 23:case 24:return Bo(e,t,n)}throw Error(o(156,t.tag))},al.prototype.render=function(e){$c(e,this._internalRoot,null,null)},al.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;$c(null,e,null,(function(){t[$a]=null}))},et=function(e){13===e.tag&&(Gc(e,4,dc()),nl(e,4))},tt=function(e){13===e.tag&&(Gc(e,67108864,dc()),nl(e,67108864))},nt=function(e){if(13===e.tag){var t=dc(),n=pc(e);Gc(e,n,t),nl(e,n)}},at=function(e,t){return t()},ke=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=rr(a);if(!r)throw Error(o(90));J(a),ne(a,r)}}}break;case"textarea":le(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},_e=gc,Fe=function(e,t,n,a,r){var s=_i;_i|=4;try{return jr(98,e.bind(null,t,n,a,r))}finally{0===(_i=s)&&(Ki(),Kr())}},De=function(){0===(49&_i)&&(function(){if(null!==rc){var e=rc;rc=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,Ac(e,Wr())}))}Kr()}(),Oc())},Oe=function(e,t){var n=_i;_i|=2;try{return e(t)}finally{0===(_i=n)&&(Ki(),Kr())}};var il={Events:[nr,ar,rr,Ee,Re,Oc,{current:!1}]},cl={findFiberByHostInstance:tr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ll={bundleType:cl.bundleType,version:cl.version,rendererPackageName:cl.rendererPackageName,rendererConfig:cl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:cl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ul=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ul.isDisabled&&ul.supportsFiber)try{br=ul.inject(ll),xr=ul}catch(Ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=il,t.createPortal=ol,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=_i;if(0!==(48&n))return e(t);_i|=1;try{if(e)return jr(99,e.bind(null,t))}finally{_i=n,Kr()}},t.hydrate=function(e,t,n){if(!rl(t))throw Error(o(200));return sl(null,e,t,!0,n)},t.render=function(e,t,n){if(!rl(t))throw Error(o(200));return sl(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!rl(e))throw Error(o(40));return!!e._reactRootContainer&&(yc((function(){sl(null,null,e,!1,(function(){e._reactRootContainer=null,e[$a]=null}))})),!0)},t.unstable_batchedUpdates=gc,t.unstable_createPortal=function(e,t){return ol(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!rl(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return sl(e,t,n,!1,a)},t.version="17.0.2"},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";n(123);var a=n(43),r=60103;if(t.Fragment=60107,"function"===typeof Symbol&&Symbol.for){var s=Symbol.for;r=s("react.element"),t.Fragment=s("react.fragment")}var o=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)i.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:o.current}}t.jsx=l,t.jsxs=l},202:(e,t,n)=>{"use strict";var a=n(123),r=60103,s=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,i=60110,c=60112;t.Suspense=60113;var l=60115,u=60116;if("function"===typeof Symbol&&Symbol.for){var h=Symbol.for;r=h("react.element"),s=h("react.portal"),t.Fragment=h("react.fragment"),t.StrictMode=h("react.strict_mode"),t.Profiler=h("react.profiler"),o=h("react.provider"),i=h("react.context"),c=h("react.forward_ref"),t.Suspense=h("react.suspense"),l=h("react.memo"),u=h("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var G={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C={};function A(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||G}function T(){}function f(e,t,n){this.props=e,this.context=t,this.refs=C,this.updater=n||G}A.prototype.isReactComponent={},A.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},A.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},T.prototype=A.prototype;var m=f.prototype=new T;m.constructor=f,a(m,A.prototype),m.isPureReactComponent=!0;var g={current:null},y=Object.prototype.hasOwnProperty,b={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var a,s={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)y.call(t,a)&&!b.hasOwnProperty(a)&&(s[a]=t[a]);var c=arguments.length-2;if(1===c)s.children=n;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(a in c=e.defaultProps)void 0===s[a]&&(s[a]=c[a]);return{$$typeof:r,type:e,key:o,ref:i,props:s,_owner:g.current}}function v(e){return"object"===typeof e&&null!==e&&e.$$typeof===r}var w=/\/+/g;function k(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function I(e,t,n,a,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case r:case s:c=!0}}if(c)return o=o(c=e),e=""===a?"."+k(c,0):a,Array.isArray(o)?(n="",null!=e&&(n=e.replace(w,"$&/")+"/"),I(o,t,n,"",(function(e){return e}))):null!=o&&(v(o)&&(o=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(w,"$&/")+"/")+e)),t.push(o)),1;if(c=0,a=""===a?".":a+":",Array.isArray(e))for(var l=0;l<e.length;l++){var u=a+k(i=e[l],l);c+=I(i,t,n,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=I(i=i.value,t,n,u=a+k(i,l++),o);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return c}function N(e,t,n){if(null==e)return e;var a=[],r=0;return I(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function S(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var E={current:null};function R(){var e=E.current;if(null===e)throw Error(p(321));return e}var _={ReactCurrentDispatcher:E,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:g,IsSomeRendererActing:{current:!1},assign:a};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!v(e))throw Error(p(143));return e}},t.Component=A,t.PureComponent=f,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=_,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(p(267,e));var s=a({},e.props),o=e.key,i=e.ref,c=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,c=g.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)y.call(t,u)&&!b.hasOwnProperty(u)&&(s[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)s.children=n;else if(1<u){l=Array(u);for(var h=0;h<u;h++)l[h]=arguments[h+2];s.children=l}return{$$typeof:r,type:e.type,key:o,ref:i,props:s,_owner:c}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=v,t.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:S}},t.memo=function(e,t){return{$$typeof:l,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return R().useCallback(e,t)},t.useContext=function(e,t){return R().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return R().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return R().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return R().useLayoutEffect(e,t)},t.useMemo=function(e,t){return R().useMemo(e,t)},t.useReducer=function(e,t,n){return R().useReducer(e,t,n)},t.useRef=function(e){return R().useRef(e)},t.useState=function(e){return R().useState(e)},t.version="17.0.2"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";var n,a,r,s;if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var l=null,u=null,h=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(n){throw setTimeout(h,0),n}};n=function(e){null!==l?setTimeout(n,0,e):(l=e,setTimeout(h,0))},a=function(e,t){u=setTimeout(e,t)},r=function(){clearTimeout(u)},t.unstable_shouldYield=function(){return!1},s=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!==typeof console){var G=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof G&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var C=!1,A=null,T=-1,f=5,m=0;t.unstable_shouldYield=function(){return t.unstable_now()>=m},s=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):f=0<e?Math.floor(1e3/e):5};var g=new MessageChannel,y=g.port2;g.port1.onmessage=function(){if(null!==A){var e=t.unstable_now();m=e+f;try{A(!0,e)?y.postMessage(null):(C=!1,A=null)}catch(n){throw y.postMessage(null),n}}else C=!1},n=function(e){A=e,C||(C=!0,y.postMessage(null))},a=function(e,n){T=d((function(){e(t.unstable_now())}),n)},r=function(){p(T),T=-1}}function b(e,t){var n=e.length;e.push(t);e:for(;;){var a=n-1>>>1,r=e[a];if(!(void 0!==r&&0<w(r,t)))break e;e[a]=t,e[n]=r,n=a}}function x(e){return void 0===(e=e[0])?null:e}function v(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length;a<r;){var s=2*(a+1)-1,o=e[s],i=s+1,c=e[i];if(void 0!==o&&0>w(o,n))void 0!==c&&0>w(c,o)?(e[a]=c,e[i]=n,a=i):(e[a]=o,e[s]=n,a=s);else{if(!(void 0!==c&&0>w(c,n)))break e;e[a]=c,e[i]=n,a=i}}}return t}return null}function w(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var k=[],I=[],N=1,S=null,E=3,R=!1,_=!1,F=!1;function D(e){for(var t=x(I);null!==t;){if(null===t.callback)v(I);else{if(!(t.startTime<=e))break;v(I),t.sortIndex=t.expirationTime,b(k,t)}t=x(I)}}function O(e){if(F=!1,D(e),!_)if(null!==x(k))_=!0,n(M);else{var t=x(I);null!==t&&a(O,t.startTime-e)}}function M(e,n){_=!1,F&&(F=!1,r()),R=!0;var s=E;try{for(D(n),S=x(k);null!==S&&(!(S.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=S.callback;if("function"===typeof o){S.callback=null,E=S.priorityLevel;var i=o(S.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?S.callback=i:S===x(k)&&v(k),D(n)}else v(k);S=x(k)}if(null!==S)var c=!0;else{var l=x(I);null!==l&&a(O,l.startTime-n),c=!1}return c}finally{S=null,E=s,R=!1}}var L=s;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){_||R||(_=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return E},t.unstable_getFirstCallbackNode=function(){return x(k)},t.unstable_next=function(e){switch(E){case 1:case 2:case 3:var t=3;break;default:t=E}var n=E;E=t;try{return e()}finally{E=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=L,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=E;E=e;try{return t()}finally{E=n}},t.unstable_scheduleCallback=function(e,s,o){var i=t.unstable_now();switch("object"===typeof o&&null!==o?o="number"===typeof(o=o.delay)&&0<o?i+o:i:o=i,e){case 1:var c=-1;break;case 2:c=250;break;case 5:c=1073741823;break;case 4:c=1e4;break;default:c=5e3}return e={id:N++,callback:s,priorityLevel:e,startTime:o,expirationTime:c=o+c,sortIndex:-1},o>i?(e.sortIndex=o,b(I,e),null===x(k)&&e===x(I)&&(F?r():F=!0,a(O,o-i))):(e.sortIndex=c,b(k,e),_||R||(_=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=E;return function(){var n=E;E=t;try{return e.apply(this,arguments)}finally{E=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),c=n(262),l=n(430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},359:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=c-1;function p(e,t,n){var a=[],d=T(A((t=1==t?{entropy:!0}:t||{}).entropy?[e,f(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),f(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,f(s)]}}():e,3),a),p=new G(a),m=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return m.int32=function(){return 0|p.g(4)},m.quick=function(){return p.g(4)/4294967296},m.double=m,T(f(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&C(a,p),e.state=function(){return C(p,{})}),n?(o.random=e,t):e})(m,d,"global"in t?t.global:this==o,t.state)}function G(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=d&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=d&r+1],n=n*c+o[d&(o[r]=o[s=d&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function C(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function A(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(A(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function T(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return f(t)}function f(e){return String.fromCharCode.apply(0,e)}if(T(o.random(),s),e.exports){e.exports=p;try{i=n(996)}catch(m){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var s=Object.create(null);n.r(s);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>a[e]));return o.default=()=>a,n.d(s,o),s}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/AlignAIR_site/",(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>Fo,browserFiles:()=>Ic,browserHTTPRequest:()=>Mc,concatenateArrayBuffers:()=>Zo,copyModel:()=>Li,decodeWeights:()=>Uo,decodeWeightsStream:()=>Xo,encodeWeights:()=>Wo,fromMemory:()=>Vc,fromMemorySync:()=>Bc,getLoadHandlers:()=>li,getModelArtifactsForJSON:()=>ni,getModelArtifactsForJSONSync:()=>ti,getModelArtifactsInfoForJSON:()=>ai,getSaveHandlers:()=>ci,getWeightSpecs:()=>ri,http:()=>Oc,isHTTPScheme:()=>Fc,listModels:()=>Oi,loadWeights:()=>Ec,moveModel:()=>zi,registerLoadRouter:()=>ii,registerSaveRouter:()=>oi,removeModel:()=>Mi,weightsLoaderFactory:()=>Rc,withSaveHandler:()=>Wc,withSaveHandlerSync:()=>Uc});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Kc,computeFlatOffset:()=>ol,computeOutShape:()=>Yc,getNormalizedAxes:()=>$c,isSliceContinous:()=>sl,maskToAxes:()=>Xc,parseSliceParams:()=>il,sliceInfo:()=>cl,startForAxis:()=>al,startIndicesWithElidedDims:()=>el,stopForAxis:()=>rl,stopIndicesWithElidedDims:()=>tl,stridesForAxis:()=>nl,stridesWithElidedDims:()=>Qc});var a={};n.r(a),n.d(a,{conv2d:()=>yp,depthwiseConv2d:()=>vp,matMul:()=>wp});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>MC,computeOutShape:()=>OC,segOpComputeOptimalWindowSize:()=>DC});var s={};n.r(s),n.d(s,{ERF_A1:()=>ZG,ERF_A2:()=>$G,ERF_A3:()=>eC,ERF_A4:()=>tC,ERF_A5:()=>nC,ERF_P:()=>JG,PARALLELIZE_THRESHOLD:()=>VG,RowPartitionType:()=>OG,SELU_SCALE:()=>QG,SELU_SCALEALPHA:()=>YG,applyActivation:()=>mp,assertAndGetBroadcastShape:()=>Tc,assertAxesAreInnerMostDims:()=>Ou,assertParamsConsistent:()=>FG,assignToTypedArray:()=>cC,axesAreInnerMostDims:()=>Ru,calculateShapes:()=>Yd,checkEinsumDimSizes:()=>TC,checkPadOnDimRoundingMode:()=>Ml,combineLocations:()=>_u,combineRaggedTensorToTensorShapes:()=>MG,complexWithEvenIndex:()=>sC,complexWithOddIndex:()=>oC,computeConv2DInfo:()=>wl,computeConv3DInfo:()=>kl,computeDefaultPad:()=>Il,computeDilation2DInfo:()=>bl,computeOptimalWindowSize:()=>BG,computeOutAndReduceShapes:()=>Fu,computeOutShape:()=>DG,computePool2DInfo:()=>xl,computePool3DInfo:()=>vl,convertConv2DDataFormat:()=>Ol,decodeEinsumEquation:()=>CC,eitherStridesOrDilationsAreOne:()=>Fl,expandShapeToKeepDim:()=>Du,exponent:()=>uC,exponents:()=>lC,fromStringArrayToUint8:()=>zC,fromUint8ToStringArray:()=>LC,getAxesPermutation:()=>Mu,getBroadcastDims:()=>Cc,getComplexWithIndex:()=>iC,getEinsumComputePath:()=>fC,getEinsumPermutation:()=>AC,getFusedBiasGradient:()=>fp,getFusedDyActivation:()=>Tp,getImageCenter:()=>WG,getInnerMostAxes:()=>zu,getPermuted:()=>HG,getRaggedRank:()=>zG,getReductionAxes:()=>Ac,getReshaped:()=>UG,getReshapedPermuted:()=>jG,getRowPartitionTypesHelper:()=>LG,getSliceBeginCoords:()=>qG,getSliceSize:()=>KG,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>bC,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xC,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>vC,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>IC,getSparseReshapeInputOutputMismatchErrorMessage:()=>SC,getSparseReshapeInputOutputMultipleErrorMessage:()=>NC,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>wC,getSparseReshapeNegativeOutputDimErrorMessage:()=>kC,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>FC,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>EC,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>RC,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>_C,getUndoAxesPermutation:()=>Lu,isIdentityPermutation:()=>mC,log:()=>ns,mergeRealAndImagArrays:()=>aC,prepareAndValidate:()=>XG,prepareSplitSize:()=>yC,segment_util:()=>r,shouldFuse:()=>gp,slice_util:()=>t,splitRealAndImagArrays:()=>rC,stridesOrDilationsArePositive:()=>Dl,tupleValuesAreOne:()=>_l,upcastType:()=>ao,validateDefaultValueShape:()=>PG,validateInput:()=>Xd,validateUpdateShape:()=>Kd,warn:()=>ts});var o={};n.r(o),n.d(o,{json:()=>ix});var i={};n.r(i),n.d(i,{json:()=>cx});var c={};n.r(c),n.d(c,{json:()=>lx});var l={};n.r(l),n.d(l,{json:()=>ux});var u={};n.r(u),n.d(u,{json:()=>hx});var h={};n.r(h),n.d(h,{json:()=>dx});var d={};n.r(d),n.d(d,{json:()=>px});var p={};n.r(p),n.d(p,{json:()=>Gx});var G={};n.r(G),n.d(G,{json:()=>Cx});var C={};n.r(C),n.d(C,{json:()=>Ax});var A={};n.r(A),n.d(A,{json:()=>Tx});var T={};n.r(T),n.d(T,{json:()=>fx});var f={};n.r(f),n.d(f,{json:()=>mx});var m={};n.r(m),n.d(m,{json:()=>gx});var g={};n.r(g),n.d(g,{json:()=>yx});var y={};n.r(y),n.d(y,{json:()=>bx});var b={};n.r(b),n.d(b,{json:()=>xx});var x={};n.r(x),n.d(x,{json:()=>vx});var v={};n.r(v),n.d(v,{json:()=>wx});var w={};n.r(w),n.d(w,{OP_SCOPE_SUFFIX:()=>Io,abs:()=>Gc,acos:()=>ul,acosh:()=>hl,add:()=>Ki,addN:()=>dl,all:()=>pl,any:()=>Gl,argMax:()=>Cl,argMin:()=>Al,asin:()=>Tl,asinh:()=>fl,atan:()=>ml,atan2:()=>gl,atanh:()=>yl,avgPool:()=>zl,avgPool3d:()=>Pl,basicLSTMCell:()=>jl,batchNorm:()=>Kl,batchNorm2d:()=>Xl,batchNorm3d:()=>Yl,batchNorm4d:()=>Ql,batchToSpaceND:()=>ql,bincount:()=>Jl,bitwiseAnd:()=>Zl,booleanMaskAsync:()=>op,broadcastArgs:()=>$l,broadcastTo:()=>eu,buffer:()=>Ui,cast:()=>Hi,ceil:()=>tu,clipByValue:()=>nu,clone:()=>ji,complex:()=>So,concat:()=>Vl,concat1d:()=>au,concat2d:()=>ru,concat3d:()=>su,concat4d:()=>ou,conv1d:()=>cu,conv2d:()=>iu,conv2dTranspose:()=>uu,conv3d:()=>hu,conv3dTranspose:()=>pu,cos:()=>Gu,cosh:()=>Cu,cosineWindow:()=>Gp,cumprod:()=>Au,cumsum:()=>Tu,denseBincount:()=>fu,depthToSpace:()=>mu,depthwiseConv2d:()=>gu,diag:()=>yu,dilation2d:()=>bu,div:()=>Yi,divNoNan:()=>wu,dot:()=>ku,dropout:()=>dp,einsum:()=>Iu,elu:()=>Nu,enclosingPowerOfTwo:()=>pp,ensureShape:()=>Su,equal:()=>xu,erf:()=>Eu,euclideanNorm:()=>Hu,exp:()=>ju,expandDims:()=>qu,expm1:()=>Ku,eye:()=>Yu,fft:()=>Rd,fill:()=>lc,floor:()=>Qu,floorDiv:()=>Xi,fused:()=>a,gather:()=>Ju,gatherND:()=>hp,greater:()=>Zu,greaterEqual:()=>$u,ifft:()=>_d,imag:()=>eh,image:()=>wG,inTopKAsync:()=>Cp,irfft:()=>Fd,isFinite:()=>th,isInf:()=>nh,isNaN:()=>ah,leakyRelu:()=>rh,less:()=>sh,lessEqual:()=>oh,linalg:()=>kG,linspace:()=>ih,localResponseNormalization:()=>ch,log:()=>lh,log1p:()=>uh,logSigmoid:()=>ph,logSoftmax:()=>Gh,logSumExp:()=>Ch,logicalAnd:()=>Ah,logicalNot:()=>Th,logicalOr:()=>fh,logicalXor:()=>mh,losses:()=>IG,lowerBound:()=>bh,matMul:()=>Bl,max:()=>Pu,maxPool:()=>xh,maxPool3d:()=>vh,maxPoolWithArgmax:()=>wh,maximum:()=>fc,mean:()=>kh,meshgrid:()=>Sh,min:()=>Vu,minimum:()=>Eh,mirrorPad:()=>Rh,mod:()=>_h,moments:()=>Fh,movingAverage:()=>cp,mul:()=>Qi,multiRNNCell:()=>Dh,multinomial:()=>Oh,neg:()=>hh,norm:()=>Uu,notEqual:()=>Mh,oneHot:()=>Lh,ones:()=>Nh,onesLike:()=>zh,op:()=>No,outerProduct:()=>Ph,pad:()=>Vh,pad1d:()=>Bh,pad2d:()=>Wh,pad3d:()=>Uh,pad4d:()=>Hh,pool:()=>qh,pow:()=>hc,prelu:()=>Kh,print:()=>qi,prod:()=>Xh,raggedGather:()=>Yh,raggedRange:()=>Qh,raggedTensorToTensor:()=>Jh,rand:()=>Zh,randomGamma:()=>ad,randomNormal:()=>rd,randomStandardNormal:()=>sd,randomUniform:()=>od,randomUniformInt:()=>id,range:()=>cd,real:()=>ld,reciprocal:()=>ud,relu:()=>hd,relu6:()=>dd,reshape:()=>Ll,reverse:()=>pd,reverse1d:()=>Gd,reverse2d:()=>Cd,reverse3d:()=>Ad,reverse4d:()=>Td,rfft:()=>Od,round:()=>fd,rsqrt:()=>md,scalar:()=>tc,scatterND:()=>lp,searchSorted:()=>yh,selu:()=>gd,separableConv2d:()=>yd,setdiff1dAsync:()=>bd,sigmoid:()=>Wl,sign:()=>xd,signal:()=>vG,sin:()=>vd,sinh:()=>wd,slice:()=>Ul,slice1d:()=>kd,slice2d:()=>Id,slice3d:()=>Nd,slice4d:()=>Sd,softmax:()=>Ed,softplus:()=>dh,spaceToBatchND:()=>jh,sparse:()=>NG,sparseToDense:()=>up,spectral:()=>xG,split:()=>Dd,sqrt:()=>Ji,square:()=>Zi,squaredDifference:()=>Md,squeeze:()=>Ld,stack:()=>zd,step:()=>Pd,stridedSlice:()=>Vd,string:()=>SG,sub:()=>dc,sum:()=>Bu,tan:()=>Bd,tanh:()=>Hl,tensor:()=>Ro,tensor1d:()=>Wd,tensor2d:()=>Ud,tensor3d:()=>Hc,tensor4d:()=>Hd,tensor5d:()=>jd,tensor6d:()=>qd,tensorScatterUpdate:()=>Qd,tile:()=>Xu,topk:()=>Jd,transpose:()=>ip,truncatedNormal:()=>Zd,unique:()=>$d,unsortedSegmentSum:()=>ep,unstack:()=>tp,upperBound:()=>np,variable:()=>ap,where:()=>vu,whereAsync:()=>sp,zeros:()=>Ih,zerosLike:()=>$i});var k={};n.r(k),n.d(k,{addImpl:()=>kw,bincountImpl:()=>fk,bincountReduceImpl:()=>mk,bitwiseAndImpl:()=>yk,castImpl:()=>yw,ceilImpl:()=>wk,concatImpl:()=>Rk,equalImpl:()=>CI,expImpl:()=>kI,expm1Impl:()=>RI,floorImpl:()=>XI,gatherNdImpl:()=>nN,gatherV2Impl:()=>rN,greaterEqualImpl:()=>lN,greaterImpl:()=>oN,lessEqualImpl:()=>bN,lessImpl:()=>mN,linSpaceImpl:()=>wN,logImpl:()=>IN,maxImpl:()=>WN,maximumImpl:()=>jN,minimumImpl:()=>tS,multiplyImpl:()=>iI,negImpl:()=>hS,notEqualImpl:()=>mS,prodImpl:()=>_S,raggedGatherImpl:()=>LS,raggedRangeImpl:()=>VS,raggedTensorToTensorImpl:()=>qS,rangeImpl:()=>XS,rsqrtImpl:()=>oE,scatterImpl:()=>lE,sigmoidImpl:()=>dw,simpleAbsImpl:()=>Ow,sliceImpl:()=>Gk,sparseFillEmptyRowsImpl:()=>SE,sparseReshapeImpl:()=>RE,sparseSegmentReductionImpl:()=>FE,sqrtImpl:()=>zE,staticRegexReplaceImpl:()=>jE,stridedSliceImpl:()=>QE,stringNGramsImpl:()=>$E,stringSplitImpl:()=>nR,stringToHashBucketFastImpl:()=>rR,subImpl:()=>LI,tileImpl:()=>uR,topKImpl:()=>GR,transposeImpl:()=>Ww,uniqueImpl:()=>yR});var I,N=n(43),S=n.t(N,2),E=n(950),R=n.t(E,2);function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},_.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(I||(I={}));const F="popstate";function D(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function O(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function M(e,t){return{usr:e.state,key:e.key,idx:t}}function L(e,t,n,a){return void 0===n&&(n=null),_({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?P(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function z(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function P(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function V(e,t,n,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:s=!1}=a,o=r.history,i=I.Pop,c=null,l=u();function u(){return(o.state||{idx:null}).idx}function h(){i=I.Pop;let e=u(),t=null==e?null:e-l;l=e,c&&c({action:i,location:p.location,delta:t})}function d(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"===typeof e?e:z(e);return n=n.replace(/ $/,"%20"),D(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==l&&(l=0,o.replaceState(_({},o.state,{idx:l}),""));let p={get action(){return i},get location(){return e(r,o)},listen(e){if(c)throw new Error("A history only accepts one active listener");return r.addEventListener(F,h),c=e,()=>{r.removeEventListener(F,h),c=null}},createHref:e=>t(r,e),createURL:d,encodeLocation(e){let t=d(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){i=I.Push;let a=L(p.location,e,t);n&&n(a,e),l=u()+1;let h=M(a,l),d=p.createHref(a);try{o.pushState(h,"",d)}catch(G){if(G instanceof DOMException&&"DataCloneError"===G.name)throw G;r.location.assign(d)}s&&c&&c({action:i,location:p.location,delta:1})},replace:function(e,t){i=I.Replace;let a=L(p.location,e,t);n&&n(a,e),l=u();let r=M(a,l),h=p.createHref(a);o.replaceState(r,"",h),s&&c&&c({action:i,location:p.location,delta:0})},go:e=>o.go(e)};return p}var B;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(B||(B={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function W(e,t,n){void 0===n&&(n="/");let a=ne(("string"===typeof t?P(t):t).pathname||"/",n);if(null==a)return null;let r=U(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(r);let s=null;for(let o=0;null==s&&o<r.length;++o){let e=te(a);s=$(r[o],e)}return s}function U(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");let r=(e,r,s)=>{let o={relativePath:void 0===s?e.path||"":s,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};o.relativePath.startsWith("/")&&(D(o.relativePath.startsWith(a),'Absolute route path "'+o.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(a.length));let i=ie([a,o.relativePath]),c=n.concat(o);e.children&&e.children.length>0&&(D(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),U(e.children,t,c,i)),(null!=e.path||e.index)&&t.push({path:i,score:Z(i,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let a of H(e.path))r(e,t,a);else r(e,t)})),t}function H(e){let t=e.split("/");if(0===t.length)return[];let[n,...a]=t,r=n.endsWith("?"),s=n.replace(/\?$/,"");if(0===a.length)return r?[s,""]:[s];let o=H(a.join("/")),i=[];return i.push(...o.map((e=>""===e?s:[s,e].join("/")))),r&&i.push(...o),i.map((t=>e.startsWith("/")&&""===t?"/":t))}const j=/^:[\w-]+$/,q=3,K=2,X=1,Y=10,Q=-2,J=e=>"*"===e;function Z(e,t){let n=e.split("/"),a=n.length;return n.some(J)&&(a+=Q),t&&(a+=K),n.filter((e=>!J(e))).reduce(((e,t)=>e+(j.test(t)?q:""===t?X:Y)),a)}function $(e,t){let{routesMeta:n}=e,a={},r="/",s=[];for(let o=0;o<n.length;++o){let e=n[o],i=o===n.length-1,c="/"===r?t:t.slice(r.length)||"/",l=ee({path:e.relativePath,caseSensitive:e.caseSensitive,end:i},c);if(!l)return null;Object.assign(a,l.params);let u=e.route;s.push({params:a,pathname:ie([r,l.pathname]),pathnameBase:ce(ie([r,l.pathnameBase])),route:u}),"/"!==l.pathnameBase&&(r=ie([r,l.pathnameBase]))}return s}function ee(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);O("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(a.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(a.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let s=new RegExp(r,t?void 0:"i");return[s,a]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let s=r[0],o=s.replace(/(.)\/+$/,"$1"),i=r.slice(1);return{params:a.reduce(((e,t,n)=>{let{paramName:a,isOptional:r}=t;if("*"===a){let e=i[n]||"";o=s.slice(0,s.length-e.length).replace(/(.)\/+$/,"$1")}const c=i[n];return e[a]=r&&!c?void 0:(c||"").replace(/%2F/g,"/"),e}),{}),pathname:s,pathnameBase:o,pattern:e}}function te(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return O(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function ne(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function ae(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function re(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function se(e,t){let n=re(e);return t?n.map(((t,n)=>n===e.length-1?t.pathname:t.pathnameBase)):n.map((e=>e.pathnameBase))}function oe(e,t,n,a){let r;void 0===a&&(a=!1),"string"===typeof e?r=P(e):(r=_({},e),D(!r.pathname||!r.pathname.includes("?"),ae("?","pathname","search",r)),D(!r.pathname||!r.pathname.includes("#"),ae("#","pathname","hash",r)),D(!r.search||!r.search.includes("#"),ae("#","search","hash",r)));let s,o=""===e||""===r.pathname,i=o?"/":r.pathname;if(null==i)s=n;else{let e=t.length-1;if(!a&&i.startsWith("..")){let t=i.split("/");for(;".."===t[0];)t.shift(),e-=1;r.pathname=t.join("/")}s=e>=0?t[e]:"/"}let c=function(e,t){void 0===t&&(t="/");let{pathname:n,search:a="",hash:r=""}="string"===typeof e?P(e):e,s=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:s,search:le(a),hash:ue(r)}}(r,s),l=i&&"/"!==i&&i.endsWith("/"),u=(o||"."===i)&&n.endsWith("/");return c.pathname.endsWith("/")||!l&&!u||(c.pathname+="/"),c}const ie=e=>e.join("/").replace(/\/\/+/g,"/"),ce=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),le=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",ue=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function he(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const de=["post","put","patch","delete"],pe=(new Set(de),["get",...de]);new Set(pe),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function Ge(){return Ge=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Ge.apply(this,arguments)}const Ce=N.createContext(null);const Ae=N.createContext(null);const Te=N.createContext(null);const fe=N.createContext(null);const me=N.createContext({outlet:null,matches:[],isDataRoute:!1});const ge=N.createContext(null);function ye(){return null!=N.useContext(fe)}function be(){return ye()||D(!1),N.useContext(fe).location}function xe(e){N.useContext(Te).static||N.useLayoutEffect(e)}function ve(){let{isDataRoute:e}=N.useContext(me);return e?function(){let{router:e}=Fe(Re.UseNavigateStable),t=Oe(_e.UseNavigateStable),n=N.useRef(!1);return xe((()=>{n.current=!0})),N.useCallback((function(a,r){void 0===r&&(r={}),n.current&&("number"===typeof a?e.navigate(a):e.navigate(a,Ge({fromRouteId:t},r)))}),[e,t])}():function(){ye()||D(!1);let e=N.useContext(Ce),{basename:t,future:n,navigator:a}=N.useContext(Te),{matches:r}=N.useContext(me),{pathname:s}=be(),o=JSON.stringify(se(r,n.v7_relativeSplatPath)),i=N.useRef(!1);xe((()=>{i.current=!0}));let c=N.useCallback((function(n,r){if(void 0===r&&(r={}),!i.current)return;if("number"===typeof n)return void a.go(n);let c=oe(n,JSON.parse(o),s,"path"===r.relative);null==e&&"/"!==t&&(c.pathname="/"===c.pathname?t:ie([t,c.pathname])),(r.replace?a.replace:a.push)(c,r.state,r)}),[t,a,o,s,e]);return c}()}function we(e,t,n,a){ye()||D(!1);let{navigator:r}=N.useContext(Te),{matches:s}=N.useContext(me),o=s[s.length-1],i=o?o.params:{},c=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let l,u=be();if(t){var h;let e="string"===typeof t?P(t):t;"/"===c||(null==(h=e.pathname)?void 0:h.startsWith(c))||D(!1),l=e}else l=u;let d=l.pathname||"/",p=d;if("/"!==c){let e=c.replace(/^\//,"").split("/");p="/"+d.replace(/^\//,"").split("/").slice(e.length).join("/")}let G=W(e,{pathname:p});let C=Ee(G&&G.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:ie([c,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:ie([c,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),s,n,a);return t&&C?N.createElement(fe.Provider,{value:{location:Ge({pathname:"/",search:"",hash:"",state:null,key:"default"},l),navigationType:I.Pop}},C):C}function ke(){let e=function(){var e;let t=N.useContext(ge),n=De(_e.UseRouteError),a=Oe(_e.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[a]}(),t=he(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a};return N.createElement(N.Fragment,null,N.createElement("h2",null,"Unexpected Application Error!"),N.createElement("h3",{style:{fontStyle:"italic"}},t),n?N.createElement("pre",{style:r},n):null,null)}const Ie=N.createElement(ke,null);class Ne extends N.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?N.createElement(me.Provider,{value:this.props.routeContext},N.createElement(ge.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Se(e){let{routeContext:t,match:n,children:a}=e,r=N.useContext(Ce);return r&&r.static&&r.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=n.route.id),N.createElement(me.Provider,{value:t},a)}function Ee(e,t,n,a){var r;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===a&&(a=null),null==e){var s;if(null==(s=n)||!s.errors)return null;e=n.matches}let o=e,i=null==(r=n)?void 0:r.errors;if(null!=i){let e=o.findIndex((e=>e.route.id&&void 0!==(null==i?void 0:i[e.route.id])));e>=0||D(!1),o=o.slice(0,Math.min(o.length,e+1))}let c=!1,l=-1;if(n&&a&&a.v7_partialHydration)for(let u=0;u<o.length;u++){let e=o[u];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(l=u),e.route.id){let{loaderData:t,errors:a}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!a||void 0===a[e.route.id]);if(e.route.lazy||r){c=!0,o=l>=0?o.slice(0,l+1):[o[0]];break}}}return o.reduceRight(((e,a,r)=>{let s,u=!1,h=null,d=null;var p;n&&(s=i&&a.route.id?i[a.route.id]:void 0,h=a.route.errorElement||Ie,c&&(l<0&&0===r?(p="route-fallback",!1||Me[p]||(Me[p]=!0),u=!0,d=null):l===r&&(u=!0,d=a.route.hydrateFallbackElement||null)));let G=t.concat(o.slice(0,r+1)),C=()=>{let t;return t=s?h:u?d:a.route.Component?N.createElement(a.route.Component,null):a.route.element?a.route.element:e,N.createElement(Se,{match:a,routeContext:{outlet:e,matches:G,isDataRoute:null!=n},children:t})};return n&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?N.createElement(Ne,{location:n.location,revalidation:n.revalidation,component:h,error:s,children:C(),routeContext:{outlet:null,matches:G,isDataRoute:!0}}):C()}),null)}var Re=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(Re||{}),_e=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(_e||{});function Fe(e){let t=N.useContext(Ce);return t||D(!1),t}function De(e){let t=N.useContext(Ae);return t||D(!1),t}function Oe(e){let t=function(e){let t=N.useContext(me);return t||D(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||D(!1),n.route.id}const Me={};S.startTransition;function Le(e){let{to:t,replace:n,state:a,relative:r}=e;ye()||D(!1);let{future:s,static:o}=N.useContext(Te),{matches:i}=N.useContext(me),{pathname:c}=be(),l=ve(),u=oe(t,se(i,s.v7_relativeSplatPath),c,"path"===r),h=JSON.stringify(u);return N.useEffect((()=>l(JSON.parse(h),{replace:n,state:a,relative:r})),[l,h,r,n,a]),null}function ze(e){D(!1)}function Pe(e){let{basename:t="/",children:n=null,location:a,navigationType:r=I.Pop,navigator:s,static:o=!1,future:i}=e;ye()&&D(!1);let c=t.replace(/^\/*/,"/"),l=N.useMemo((()=>({basename:c,navigator:s,static:o,future:Ge({v7_relativeSplatPath:!1},i)})),[c,i,s,o]);"string"===typeof a&&(a=P(a));let{pathname:u="/",search:h="",hash:d="",state:p=null,key:G="default"}=a,C=N.useMemo((()=>{let e=ne(u,c);return null==e?null:{location:{pathname:e,search:h,hash:d,state:p,key:G},navigationType:r}}),[c,u,h,d,p,G,r]);return null==C?null:N.createElement(Te.Provider,{value:l},N.createElement(fe.Provider,{children:n,value:C}))}function Ve(e){let{children:t,location:n}=e;return we(Be(t),n)}new Promise((()=>{}));N.Component;function Be(e,t){void 0===t&&(t=[]);let n=[];return N.Children.forEach(e,((e,a)=>{if(!N.isValidElement(e))return;let r=[...t,a];if(e.type===N.Fragment)return void n.push.apply(n,Be(e.props.children,r));e.type!==ze&&D(!1),e.props.index&&e.props.children&&D(!1);let s={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(s.children=Be(e.props.children,r)),n.push(s)})),n}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);try{window.__reactRouterVersion="6"}catch(OB){}new Map;const We=S.startTransition;R.flushSync,S.useId;function Ue(e){let{basename:t,children:n,future:a,window:r}=e,s=N.useRef();var o;null==s.current&&(s.current=(void 0===(o={window:r,v5Compat:!0})&&(o={}),V((function(e,t){let{pathname:n="/",search:a="",hash:r=""}=P(e.location.hash.substr(1));return n.startsWith("/")||n.startsWith(".")||(n="/"+n),L("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){let n=e.document.querySelector("base"),a="";if(n&&n.getAttribute("href")){let t=e.location.href,n=t.indexOf("#");a=-1===n?t:t.slice(0,n)}return a+"#"+("string"===typeof t?t:z(t))}),(function(e,t){O("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")}),o)));let i=s.current,[c,l]=N.useState({action:i.action,location:i.location}),{v7_startTransition:u}=a||{},h=N.useCallback((e=>{u&&We?We((()=>l(e))):l(e)}),[l,u]);return N.useLayoutEffect((()=>i.listen(h)),[i,h]),N.createElement(Pe,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:i,future:a})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var He,je;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(He||(He={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(je||(je={}));var qe=n(579);const Ke=()=>(0,qe.jsxs)("header",{children:[(0,qe.jsx)("div",{className:"logo",children:"AlignAIR"}),(0,qe.jsxs)("nav",{children:[(0,qe.jsx)("a",{href:"/",children:"Home"}),(0,qe.jsx)("a",{href:"/alignair",children:"AlignAIR tool"}),(0,qe.jsx)("a",{href:"#",children:"Help"}),(0,qe.jsx)("a",{href:"#",children:"About"})]})]});function Xe(){return(0,qe.jsx)(qe.Fragment,{children:(0,qe.jsxs)("footer",{style:{position:"fixed",left:0,bottom:0,width:"100%",backgroundColor:"#f0f0f0",display:"flex",justifyContent:"space-between",alignItems:"center",padding:"20px",zIndex:1e3},children:[(0,qe.jsx)("div",{className:"footer-logo",children:"AlignAIR"}),(0,qe.jsx)("a",{href:"https://github.com",className:"github-logo",children:(0,qe.jsx)("i",{className:"fab fa-github",style:{fontSize:"24px",color:"#828282"}})})]})})}const Ye={Image:n.p+"static/media/landing_page.bfe08072ac25a59f64f4.jpg"};function Qe(){return(0,qe.jsxs)("div",{children:[(0,qe.jsx)(Ke,{}),(0,qe.jsxs)("div",{className:"content-home",children:[(0,qe.jsx)("h1",{style:{fontSize:"64px",fontFamily:"Inter, sans-serif"},children:"AlignAIR"}),(0,qe.jsx)("p",{style:{fontSize:"24px",fontFamily:"Inter, sans-serif",color:"#828282"},children:"Improving immunoglobulin sequence alignment."}),(0,qe.jsx)("a",{href:"/alignair",className:"start-button",style:{fontSize:"20px",padding:"15px 30px"},children:"Start"}),(0,qe.jsx)("img",{src:Ye.Image,width:"800",height:"600"})]}),(0,qe.jsxs)("footer",{children:[(0,qe.jsx)("div",{className:"footer-logo",children:"AlignAIR"}),(0,qe.jsx)("a",{href:"https://github.com",className:"github-logo",children:(0,qe.jsx)("i",{className:"fab fa-github",style:{fontSize:"24px",color:"#828282"}})})]})]})}class Je{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ze{refCount(e){return $e("refCount")}incRef(e){return $e("incRef")}timerAvailable(){return!0}time(e){return $e("time")}read(e){return $e("read")}readSync(e){return $e("readSync")}readToGPU(e,t){return $e("readToGPU")}numDataIds(){return $e("numDataIds")}disposeData(e,t){return $e("disposeData")}write(e,t,n){return $e("write")}move(e,t,n,a,r){return $e("move")}createTensorFromGPUData(e,t,n){return $e("createTensorFromGPUData")}memory(){return $e("memory")}floatPrecision(){return $e("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return $e("dispose")}}function $e(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function et(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,at(e,t,n)}function tt(e,t,n){return Math.max(e,Math.min(t,n))}function nt(e){return e%2===0?e:e+1}function at(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function rt(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function st(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";rt(ct(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function ot(e){rt(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function it(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ct(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function lt(e){return e%1===0}function ut(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ht(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function dt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function pt(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function Gt(e,t){const n=t.length;return rt((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),rt(e.every((e=>lt(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function Ct(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:Gt(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function At(e,t){return Tt(e,t)}function Tt(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function ft(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function mt(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function gt(e){return"string"===typeof e||e instanceof String}function yt(e){return"number"===typeof e}function bt(e){return Array.isArray(e)?bt(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":yt(e)?"float32":gt(e)?"string":"boolean"===typeof e?"bool":"float32"}function xt(e){return!!(e&&e.constructor&&e.call&&e.apply)}function vt(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function wt(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function kt(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=kt(e+t*i,o,n,a)}return r}function It(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return kt(0,e,t,n)}function Nt(e,t){const n=St(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function St(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function Et(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return It(e,new Float32Array(n));if("int32"===t)return It(e,new Int32Array(n));if("bool"===t)return It(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function Rt(e){e.forEach((t=>{rt(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function _t(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Ft(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Dt(e){return e&&e.then&&"function"===typeof e.then}const Ot="tfjsflags";class Mt{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Lt,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(zt().getBool("IS_TEST")||zt().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];zt().getBool("IS_TEST")||zt().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Dt(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Ot in e){e[Ot].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function Lt(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function zt(){return Vt}let Pt,Vt=null;function Bt(){if(null==Pt){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Pt=e}return Pt}function Wt(e,t){const n=function(){const e=Bt();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Ut="Abs",Ht="Acos",jt="Acosh",qt="Add",Kt="AddN",Xt="All",Yt="Any",Qt="ArgMax",Jt="ArgMin",Zt="Asin",$t="Asinh",en="Atan",tn="Atanh",nn="Atan2",an="AvgPool",rn="AvgPoolGrad",sn="AvgPool3D",on="AvgPool3DGrad",cn="BatchMatMul",ln="BatchToSpaceND",un="Bincount",hn="BitwiseAnd",dn="BroadcastArgs",pn="Cast",Gn="Ceil",Cn="ClipByValue",An="Complex",Tn="ComplexAbs",fn="Concat",mn="Conv2D",gn="Conv2DBackpropFilter",yn="Conv2DBackpropInput",bn="Conv3D",xn="Conv3DBackpropFilterV2",vn="Conv3DBackpropInputV2",wn="Cos",kn="Cosh",In="Cumprod",Nn="Cumsum",Sn="CropAndResize",En="DenseBincount",Rn="DepthToSpace",_n="DepthwiseConv2dNative",Fn="DepthwiseConv2dNativeBackpropFilter",Dn="DepthwiseConv2dNativeBackpropInput",On="Diag",Mn="Dilation2D",Ln="Dilation2DBackpropInput",zn="Dilation2DBackpropFilter",Pn="Draw",Vn="RealDiv",Bn="Einsum",Wn="Elu",Un="EluGrad",Hn="Erf",jn="Equal",qn="Exp",Kn="ExpandDims",Xn="Expm1",Yn="FFT",Qn="Fill",Jn="FlipLeftRight",Zn="Floor",$n="FloorDiv",ea="FusedBatchNorm",ta="GatherV2",na="GatherNd",aa="Greater",ra="GreaterEqual",sa="Identity",oa="IFFT",ia="Imag",ca="IsFinite",la="IsInf",ua="IsNan",ha="LeakyRelu",da="Less",pa="LessEqual",Ga="LinSpace",Ca="Log",Aa="Log1p",Ta="LogicalAnd",fa="LogicalNot",ma="LogicalOr",ga="LRN",ya="LRNGrad",ba="Max",xa="Maximum",va="MaxPool",wa="MaxPoolGrad",ka="MaxPool3D",Ia="MaxPool3DGrad",Na="MaxPoolWithArgmax",Sa="Mean",Ea="Min",Ra="Minimum",_a="MirrorPad",Fa="Mod",Da="Multinomial",Oa="Multiply",Ma="Neg",La="NotEqual",za="NonMaxSuppressionV3",Pa="NonMaxSuppressionV4",Va="NonMaxSuppressionV5",Ba="OnesLike",Wa="OneHot",Ua="Pack",Ha="PadV2",ja="Pow",qa="Prelu",Ka="Prod",Xa="RaggedGather",Ya="RaggedRange",Qa="RaggedTensorToTensor",Ja="Range",Za="Real",$a="Reciprocal",er="Relu",tr="Reshape",nr="ResizeNearestNeighbor",ar="ResizeNearestNeighborGrad",rr="ResizeBilinear",sr="ResizeBilinearGrad",or="Relu6",ir="Reverse",cr="Round",lr="Rsqrt",ur="ScatterNd",hr="TensorScatterUpdate",dr="SearchSorted",pr="Select",Gr="Selu",Cr="Slice",Ar="Sin",Tr="Sinh",fr="Sign",mr="Sigmoid",gr="Softplus",yr="Sqrt",br="Sum",xr="SpaceToBatchND",vr="SplitV",wr="Softmax",kr="SparseFillEmptyRows",Ir="SparseReshape",Nr="SparseSegmentMean",Sr="SparseSegmentSum",Er="SparseToDense",Rr="SquaredDifference",_r="Square",Fr="StaticRegexReplace",Dr="StridedSlice",Or="StringNGrams",Mr="StringSplit",Lr="StringToHashBucketFast",zr="Sub",Pr="Tan",Vr="Tanh",Br="Tile",Wr="TopK",Ur="Transform",Hr="Transpose",jr="Unique",qr="Unpack",Kr="UnsortedSegmentSum",Xr="ZerosLike",Yr="Step",Qr="FromPixels",Jr="RotateWithOffset",Zr="_FusedMatMul",$r="FusedConv2D",es="FusedDepthwiseConv2D";function ts(){zt().getBool("IS_TEST")||zt().getBool("PROD")||console.warn(...arguments)}function ns(){zt().getBool("IS_TEST")||zt().getBool("PROD")||console.log(...arguments)}const as=Wt("kernelRegistry",(()=>new Map)),rs=Wt("gradRegistry",(()=>new Map));function ss(e,t){const n=us(e,t);return as.get(n)}function os(e){return rs.get(e)}function is(e){const t=as.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function cs(e){const{kernelName:t,backendName:n}=e,a=us(t,n);as.has(a)&&ts("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),as.set(a,e)}function ls(e){const{kernelName:t}=e;rs.has(t)&&zt().getBool("DEBUG")&&ts("Overriding the gradient for '".concat(t,"'")),rs.set(t,e)}function us(e,t){return"".concat(t,"_").concat(e)}function hs(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ds=n(353);const ps=n.n(ds)()||ds;function Gs(e){return ps.fromString(e,!0,16)}const Cs=Gs("c3a5c85c97cb3127"),As=Gs("b492b66fbe98f273"),Ts=Gs("9ae16a3b2f90404f");function fs(e){return e.xor(e.shru(47))}function ms(e,t,n){const a=e.slice(t,t+n);return ps.fromBytes(Array.from(a),!0,!0)}function gs(e,t){return ms(e,t,8)}function ys(e,t){return ms(e,t,4)}function bs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function xs(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Gs("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function vs(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=bs(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(bs(r,44)),[r.add(a),s.add(o)]}(gs(e,t),gs(e,t+8),gs(e,t+16),gs(e,t+24),n,a)}function ws(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ps.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Ts.add(2*t),a=gs(e,0).add(Ts),r=gs(e,t-8);return xs(bs(r,37).mul(n).add(a),bs(a,25).add(r).mul(n),n)}if(t>=4){const n=Ts.add(2*t);return xs(ys(e,0).shl(3).add(t),ys(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return fs(Ts.mul(n).xor(Cs.mul(a))).mul(Ts)}return Ts}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ts.add(2*t),a=gs(e,0).mul(As),r=gs(e,8),s=gs(e,t-8).mul(n),o=gs(e,t-16).mul(Ts);return xs(bs(a.add(r),43).add(bs(s,30)).add(o),a.add(bs(r.add(Ts),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ts.add(2*t),a=gs(e,0).mul(Ts),r=gs(e,8),s=gs(e,t-8).mul(n),o=gs(e,t-16).mul(Ts),i=bs(a.add(r),43).add(bs(s,30)).add(o),c=xs(i,a.add(bs(r.add(Ts),18)).add(s),n),l=gs(e,16).mul(n),u=gs(e,24),h=i.add(gs(e,t-32)).mul(n),d=c.add(gs(e,t-24)).mul(n);return xs(bs(l.add(u),43).add(bs(h,30)).add(d),l.add(bs(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(As).add(113),s=fs(r.mul(Ts).add(113)).mul(Ts),o=[ps.UZERO,ps.UZERO],i=[ps.UZERO,ps.UZERO];a=a.mul(Ts).add(gs(e,0));let c=0;const l=64*(t-1>>6),u=l+(t-1&63)-63;do{a=bs(a.add(r).add(o[0]).add(gs(e,c+8)),37).mul(As),r=bs(r.add(o[1]).add(gs(e,c+48)),42).mul(As),a=a.xor(i[1]),r=r.add(o[0]).add(gs(e,c+40)),s=bs(s.add(i[0]),33).mul(As),o=vs(e,c,o[1].mul(As),a.add(i[0])),i=vs(e,c+32,s.add(i[1]),r.add(gs(e,c+16))),[s,a]=[a,s],c+=64}while(c!==l);const h=As.add(s.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=bs(a.add(r).add(o[0]).add(gs(e,c+8)),37).mul(h),r=bs(r.add(o[1]).add(gs(e,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(gs(e,c+40))),s=bs(s.add(i[0]),33).mul(h),o=vs(e,c,o[1].mul(h),a.add(i[0])),i=vs(e,c+32,s.add(i[1]),r.add(gs(e,c+16))),[s,a]=[a,s],xs(xs(o[0],i[0],h).add(fs(r).mul(Cs)).add(s),xs(o[1],i[1],h).add(a),h)}function ks(e,t){return"string"===t?Ss(e):Is([e],t)}function Is(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=_s(e)),zt().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function Ns(){return zt().platform.now()}function Ss(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",zt().platform.encode(e,t)}function Es(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",zt().platform.decode(e,t)}function Rs(e){return null!=zt().platform.isTypedArray?zt().platform.isTypedArray(e):hs(e)}function _s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Dt(e)||null==e||Rs(e)&&n)t.push(e);else if(Array.isArray(e)||Rs(e))for(let a=0;a<e.length;++a)_s(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)_s(e[r],t,n)}return t}class Fs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Os)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=Ns();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:Ns()-o})}if(zt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{Ds(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Ds(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class Os{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?ht("".concat(a,"ms"),9):a.error,i=ht(e,25),c=t.rank,l=t.size,u=ht(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Ms=20,Ls=3,zs=7;function Ps(e,t,n,a){const r=wt(t),s=function(e,t,n,a){const r=it(t),s=a[a.length-1],o=new Array(s).fill(0),i=t.length,c="complex64"===n?Us(e):e;if(i>1)for(let l=0;l<r/s;l++){const e=l*s;for(let t=0;t<s;t++)o[t]=Math.max(o[t],Vs(c[e+t],0,n).length)}return o}(e,t,n,r),o=t.length,i=Ws(e,t,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function Vs(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(zs))," + ")+"".concat(parseFloat(e[1].toFixed(zs)),"j"):gt(e)?"'".concat(e,"'"):"bool"===n?Bs(e):parseFloat(e.toFixed(zs)).toString(),ht(a,t)}function Bs(e){return 0===e?"false":"true"}function Ws(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[Vs(Us(e)[0],0,n)]}return"bool"===n?[Bs(e[0])]:[e[0].toString()]}if(1===c){if(i>Ms){const t=Ls*o;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-Ls)*o,i*o));return"complex64"===n&&(a=Us(a),s=Us(s)),["["+a.map(((e,t)=>Vs(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Vs(e,r[i-Ls+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Us(e):Array.from(e)).map(((e,t)=>Vs(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>Ms){for(let t=0;t<Ls;t++){const a=t*h,s=a+h;d.push(...Ws(e.slice(a,s),l,n,u,r,!1))}d.push("...");for(let t=i-Ls;t<i;t++){const a=t*h,s=a+h;d.push(...Ws(e.slice(a,s),l,n,u,r,t===i-1))}}else for(let C=0;C<i;C++){const t=C*h,a=t+h;d.push(...Ws(e.slice(t,a),l,n,u,r,C===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let C=1;C<d.length-1;C++)d[C]=" "+d[C]+p;let G=",\n";for(let C=2;C<c;C++)G+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":G),d}function Us(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Hs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=it(e),null!=n){const e=n.length;rt(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Tt(t,this.size),this.strides=wt(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),rt(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return js().makeTensor(this.values,this.shape,this.dtype)}}let js=null,qs=null,Ks=null;class Xs{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=it(e),this.strides=wt(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return qs.buffer(this.shape,this.dtype,e)}bufferSync(){return qs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return It(this.shape,e,"complex64"===this.dtype)}arraySync(){return It(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=js().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>Es(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),js().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=js().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Es(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await js().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),js().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return qs.print(this,e)}clone(){return this.throwIfDisposed(),qs.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ps(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),qs.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),js().makeVariable(this,e,t,n)}}function Ys(){return Wt("Tensor",(()=>Xs))}Object.defineProperty(Xs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ys();class Qs extends Xs{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!ct(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));js().disposeTensor(this),this.dataId=e.dataId,js().incRef(this,null)}dispose(){js().disposeVariable(this),this.isDisposedInternal=!0}}var Js,Zs,$s,eo,to;Object.defineProperty(Qs,Symbol.hasInstance,{value:e=>e instanceof Xs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Js||(Js={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Zs||(Zs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}($s||($s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(eo||(eo={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(to||(to={}));const no={float32:eo,int32:Zs,bool:$s,complex64:to};function ao(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return no[e][t]}function ro(e){return ao(e,"int32")}function so(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function oo(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function io(e,t){if(e.dtype===t.dtype)return[e,t];const n=ao(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function co(e,t){return t.some((t=>t.id===e.id))}function lo(e){const t=[];return uo(e,t,new Set),t}function uo(e,t,n){if(null==e)return;if(e instanceof Xs)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),uo(e,t,n))}}function ho(e){return null!=e.kernelName}class po{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Go{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new po}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(ts("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Fs(this.backendInstance),!0}setupRegisteredKernels(){is(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){is(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof Ze||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ts("Initialization of backend ".concat(e," failed")),ts(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return ts("Initialization of backend ".concat(e," failed")),ts(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Go.nextTensorId++}nextVariableId(){return Go.nextVariableId++}clone(e){const t=Ao.runKernel(sa,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Ao.runKernel(pn,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=ss(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=ho(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ho(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const c=ss(t,this.backendName);rt(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:u}=e,h=ho(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),a&&this.addTapeNode(c,l,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=os(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(rt(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&gt(e[0])&&(r=e.map((e=>Ss(e))));const s=a.write(r,t,n),o=new Xs(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new Xs(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Qs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*mt(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*mt(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=os(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=St(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=lo(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(rt(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));rt(r instanceof Xs,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Nt(it(e),"float32");return Ao.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!ct(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),To);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return rt(xt(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;rt(a.every((e=>e instanceof Xs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),rt(s.value instanceof Xs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),rt(xt(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];rt(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),rt(r.every((e=>e instanceof Xs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ns(),n=await this.backend.time(e);return n.wallMs=Ns()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new po;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Co(){const e=Bt();if(null==e._tfengine){const t=new Mt(e);e._tfengine=new Go(t)}var t;return t=e._tfengine.ENV,Vt=t,js=()=>e._tfengine,e._tfengine}Go.nextTensorId=0,Go.nextVariableId=0;const Ao=Co();function To(e,t){const n={a:e,b:t};return Ao.runKernel(qt,n)}let fo;function mo(e){if(void 0!==fo)return fo;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function go(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const yo=zt();function bo(e,t){let n=e;if(Rs(e))return"string"===t?[]:[e.length];if(so(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(oo(e))return[e.buffer.size/(null==t?4:mt(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||Rs(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&zt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xo(e,a,[]),a}function xo(e,t,n){if(n=n||[],!Array.isArray(e)&&!Rs(e))return void rt(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));rt(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),rt(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)xo(e[r],a,n.concat(r))}function vo(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function wo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Ys())return vo(a,e.dtype,t,n),e;let r=bt(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),vo(a,r,t,n),null==e||!Rs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=bo(e,r);Rs(e)||Array.isArray(e)||(e=[e]);const o="string"!==r?Is(e,r):_s(e,[],!0);return Ao.makeTensor(o,s,r)}function ko(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>wo(e,"".concat(t,"[").concat(r,"]"),n,a)))}yo.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),yo.registerFlag("IS_BROWSER",(()=>go())),yo.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),yo.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),yo.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),yo.registerFlag("PROD",(()=>!1)),yo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>yo.getBool("DEBUG"))),yo.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),yo.registerFlag("IS_TEST",(()=>!1)),yo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>yo.getBool("DEBUG"))),yo.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),yo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),yo.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Io="__op";function No(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Io;const r=function(){Ao.startScope(n);try{const e=a(...arguments);return Dt(e)&&console.error("Cannot return a Promise inside of tidy."),Ao.endScope(e),e}catch(e){throw Ao.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const So=No({complex_:function(e,t){const n=wo(e,"real","complex"),a=wo(t,"imag","complex");st(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Ao.runKernel(An,r)}});function Eo(e,t,n,a){if(null==a)a=bt(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(oo(e)||so(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Ao.backend.createTensorFromGPUData(e,t||n,a)}if(!Rs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Rt(t);const e=it(t),a=it(n);rt(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==it(t.slice(r));rt(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return Rs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Is(e,a):_s(e,[],!0),Ao.makeTensor(e,t,a)}function Ro(e,t,n){return Eo(e,t,bo(e,n),n)}const _o={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Fo{static join(e){return new Fo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Rs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Do(){return Ao}function Oo(){return Ao.memory()}function Mo(e,t){return Ao.tidy(e,t)}function Lo(e){lo(e).forEach((e=>e.dispose()))}function zo(e){return Ao.keep(e)}function Po(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Ao.registerBackend(e,t,n)}function Vo(){return Ao.backend}Ks=function(e){zt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Bo=4;async function Wo(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Bo*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=Bo,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:Yo(await Promise.all(a)),specs:n}}function Uo(e,t){const n=new Fo(e),a={};let r=0;for(const s of t){const e=Ho(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=qo(s,n.slice(r,r+e)),r+=e}return a}function Ho(e,t){const n=it(e.shape);let a;if("quantization"in e){const t=e.quantization;a=_o[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Bo+new Uint32Array(t(e,e+Bo))[0];return e}a=_o[e.dtype]}return n*a}async function jo(e,t){const n=it(e.shape);let a;if("quantization"in e){const t=e.quantization;a=_o[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Bo+new Uint32Array(await t(e,e+Bo))[0];return e}a=_o[e.dtype]}return n*a}function qo(e,t){const n=e.name,a=e.dtype,r=e.shape,s=it(r);let o,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const c=_o[r.dtype],l="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){o=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();o=e(l)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");o=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=Math.round(t*r.scale+r.min)}}i+=s*c}else if("string"===a){const n=it(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+Bo))[0];i+=Bo;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=_o[a];if("float32"===a)o=new Float32Array(t);else if("int32"===a)o=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const a=Ro(e,r,"float32"),s=Ro(n,r,"float32"),i=So(a,s);return a.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}o=new Uint8Array(t)}i+=s*e}return Ro(o,r,a)}async function Ko(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Xo(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await jo(s,(async(e,t)=>(r=await Ko(a,r,t),r.slice(e,t))));r=await Ko(a,r,e);const t=r.slice(0,e);r=r.slice(e);const o=qo(s,t);if(n[s.name]=o,"webgpu"===Ao.backendName){const e=Vo();"uploadToGPU"in e&&it(o.shape)>=zt().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function Yo(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Qo="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Jo(e){return Qo?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Zo(e){return Fo.join(e)}function $o(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function ei(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ti(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function ni(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),ti(e,n,a)}function ai(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Jo(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Jo(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Fo(e.weightData).byteLength}}function ri(e){const t=[];for(const n of e)t.push(...n.weights);return t}class si{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==si.instance&&(si.instance=new si),si.instance}static registerSaveRouter(e){si.getInstance().saveRouters.push(e)}static registerLoadRouter(e){si.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return si.getHandlers(e,"save")}static getLoadHandlers(e,t){return si.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?si.getInstance().loadRouters:si.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const oi=e=>si.registerSaveRouter(e),ii=e=>si.registerLoadRouter(e),ci=e=>si.getSaveHandlers(e),li=(e,t)=>si.getLoadHandlers(e,t),ui="tensorflowjs",hi="models_store",di="model_info_store";function pi(){if(!zt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Gi(e){const t=e.result;t.createObjectStore(hi,{keyPath:"modelPath"}),t.createObjectStore(di,{keyPath:"modelPath"})}class Ci{constructor(e){if(this.indexedDB=pi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(ui,1);a.onupgradeneeded=()=>Gi(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(hi,"readonly"),a=t.objectStore(hi).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=Fo.join(t.weightData);const a=ai(t),o=r.transaction(di,"readwrite");let i,c,l=o.objectStore(di);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(hi,"readwrite");const i=c.objectStore(hi);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(di);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Ci.URL_SCHEME="indexeddb://";const Ai=e=>{return zt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ci.URL_SCHEME)?(t=e.slice(Ci.URL_SCHEME.length),new Ci(t)):null;var t};si.registerSaveRouter(Ai),si.registerLoadRouter(Ai);class Ti{constructor(){this.indexedDB=pi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ui,1);n.onupgradeneeded=()=>Gi(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(di,"readonly"),s=r.objectStore(di).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ci.URL_SCHEME)?t.slice(Ci.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(ui,1);a.onupgradeneeded=()=>Gi(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(di,"readwrite"),o=s.objectStore(di),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(hi,"readwrite");const a=c.objectStore(hi).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const fi="/",mi="tensorflowjs_models",gi="info",yi="model_topology",bi="weight_specs",xi="weight_data",vi="model_metadata";function wi(e){return{info:[mi,e,gi].join(fi),topology:[mi,e,yi].join(fi),weightSpecs:[mi,e,bi].join(fi),weightData:[mi,e,xi].join(fi),modelMetadata:[mi,e,vi].join(fi)}}function ki(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Ii(e){const t=e.split(fi);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(fi)}class Ni{constructor(e){if(!zt().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=wi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=ai(e),s=Fo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Qo)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw ki(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(Qo){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}Ni.URL_SCHEME="localstorage://";const Si=e=>{return zt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ni.URL_SCHEME)?(t=e.slice(Ni.URL_SCHEME.length),new Ni(t)):null;var t};si.registerSaveRouter(Si),si.registerLoadRouter(Si);class Ei{constructor(){rt(zt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),rt("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=mi+fi,n=fi+gi;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[Ii(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=wi(e=(t=e).startsWith(Ni.URL_SCHEME)?t.slice(Ni.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return ki(n),a}}const Ri="://";class _i{constructor(){this.managers={}}static getInstance(){return null==_i.instance&&(_i.instance=new _i),_i.instance}static registerManager(e,t){rt(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ri)&&(e=e.slice(0,e.indexOf(Ri))),rt(e.length>0,(()=>"scheme must not be an empty string."));const n=_i.getInstance();rt(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=_i.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(_i.getInstance().managers)}}function Fi(e){if(-1===e.indexOf(Ri))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(_i.getSchemes().join(",")));return{scheme:e.split(Ri)[0],path:e.split(Ri)[1]}}async function Di(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];rt(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=si.getLoadHandlers(e);rt(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),rt(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=si.getSaveHandlers(t);rt(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),rt(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=Fi(e).scheme,c=Fi(e).path,l=i===Fi(e).scheme,u=await r.load();n&&l&&await _i.getManager(i).removeModel(c);const h=await o.save(u);return n&&!l&&await _i.getManager(i).removeModel(c),h.modelArtifactsInfo}async function Oi(){const e=_i.getSchemes(),t={};for(const n of e){const e=await _i.getManager(n).listModels();for(const a in e){t[n+Ri+a]=e[a]}}return t}async function Mi(e){const t=Fi(e);return _i.getManager(t.scheme).removeModel(t.path)}async function Li(e,t){return Di(e,t,!1)}async function zi(e,t){return Di(e,t,!0)}class Pi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&zt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return hs(e)}}if(zt().get("IS_BROWSER")){zt().setPlatform("browser",new Pi);try{_i.registerManager(Ni.URL_SCHEME,new Ei)}catch(MB){}try{_i.registerManager(Ci.URL_SCHEME,new Ti)}catch(MB){}}const Vi=()=>n(817);let Bi;class Wi{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=zt().global.fetch?zt().global.fetch(e,t):(null==Bi&&(Bi=Vi()),Bi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Ui(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Rt(e),new Hs(e,t,n)}zt().get("IS_NODE")&&!zt().get("IS_BROWSER")&&zt().setPlatform("node",new Wi);const Hi=No({cast_:function(e,t){const n=wo(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Ao.runKernel(pn,a,r)}});const ji=No({clone_:function(e){const t={x:wo(e,"x","clone","string_or_numeric")};return Ao.runKernel(sa,t)}});function qi(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Co();qs={buffer:Ui,cast:Hi,clone:ji,print:qi};const Ki=No({add_:function(e,t){let n=wo(e,"a","add"),a=wo(t,"b","add");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(qt,r)}});const Xi=No({floorDiv_:function(e,t){let n=wo(e,"a","floorDiv"),a=wo(t,"b","floorDiv");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel($n,r)}});const Yi=No({div_:function(e,t){let n=wo(e,"a","div"),a=wo(t,"b","div");if([n,a]=io(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Xi(n,a);const r={a:n,b:a};return Ao.runKernel(Vn,r,{})}});const Qi=No({mul_:function(e,t){let n=wo(e,"a","mul"),a=wo(t,"b","mul");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(Oa,r)}});const Ji=No({sqrt_:function(e){const t={x:wo(e,"x","sqrt","float32")};return Ao.runKernel(yr,t)}});const Zi=No({square_:function(e){const t=wo(e,"x","square");return Ao.runKernel("Square",{x:t},{})}});const $i=No({zerosLike_:function(e){const t={x:wo(e,"x","zerosLike")};return Ao.runKernel(Xr,t)}});function ec(e){return Ao.customGrad(e)}function tc(e,t){if((Rs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Rs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Eo(e,[],[],t)}const nc=new Map,ac=new Map;class rc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class sc{constructor(){this.classNameMap={}}static getMap(){return null==sc.instance&&(sc.instance=new sc),sc.instance}static register(e){sc.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function oc(e,t,n){rt(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),rt("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),rt(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return sc.register(e),nc.set(a,e),ac.set(e,a),e}class ic extends rc{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Lo(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){rt(xt(e),(()=>"The f passed in variableGrads(f) must be a function")),rt(null==t||Array.isArray(t)&&t.every((e=>e instanceof Qs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Ao.registeredVariables)t.push(Ao.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),rt(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=Ao.gradients(e,t,null,!0);rt(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),rt(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Lo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:tc(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ic,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class cc extends ic{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ao.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Ao.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:Mo((()=>$i(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:Mo((()=>$i(a).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Mo((()=>{const e=Ki(Qi(s,this.rho),Qi(Zi(r),1-this.rho)),t=Qi(Yi(Ji(Ki(o,this.epsilon)),Ji(Ki(s,this.epsilon))),r),n=Ki(Qi(o,this.rho),Qi(Zi(t),1-this.rho));s.assign(e),o.assign(n);const i=Ki(Qi(t,-this.learningRate),a);a.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Lo(this.accumulatedGrads.map((e=>e.variable))),Lo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function lc(e,t,n){Rt(e);const a={shape:e,value:t,dtype:n=n||bt(t)};return Ao.runKernel(Qn,{},a)}class uc extends ic{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Ao.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:Mo((()=>lc(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;Mo((()=>{const e=Ki(s,Zi(r));s.assign(e);const t=Ki(Qi(Yi(r,Ji(Ki(e,Ao.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Lo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const hc=No({pow_:function(e,t){let n=wo(e,"base","pow"),a=wo(t,"exp","pow");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(ja,r)}});const dc=No({sub_:function(e,t){let n=wo(e,"a","sub"),a=wo(t,"b","sub");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(zr,r)}});class pc extends ic{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Mo((()=>{this.accBeta1=tc(t).variable(),this.accBeta2=tc(n).variable()})),null==a&&(this.epsilon=Ao.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Mo((()=>{const n=dc(1,this.accBeta1),a=dc(1,this.accBeta2);t.forEach(((t,r)=>{const s=Ao.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:Mo((()=>$i(s).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:Mo((()=>$i(s).variable(false)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=Ki(Qi(i,this.beta1),Qi(o,1-this.beta1)),u=Ki(Qi(c,this.beta2),Qi(Zi(o),1-this.beta2)),h=Yi(l,n),d=Yi(u,a);i.assign(l),c.assign(u);const p=Ki(Qi(Yi(h,Ki(Ji(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(Qi(this.accBeta1,this.beta1)),this.accBeta2.assign(Qi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Lo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Lo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Mo((()=>{this.accBeta1.assign(hc(this.beta1,this.iterations_+1)),this.accBeta2.assign(hc(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Gc=No({abs_:function(e){const t=wo(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ao.runKernel(Tn,e)}{const e={x:t};return Ao.runKernel(Ut,e)}}});function Cc(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function Ac(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function Tc(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}const fc=No({maximum_:function(e,t){let n=wo(e,"a","maximum"),a=wo(t,"b","maximum");[n,a]=io(n,a),"bool"===n.dtype&&(n=Hi(n,"int32"),a=Hi(a,"int32")),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(xa,r)}});class mc extends ic{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Mo((()=>{this.iteration=tc(0).variable(),this.accBeta1=tc(t).variable()})),null==a&&(this.epsilon=Ao.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Mo((()=>{const n=dc(1,this.accBeta1),a=Yi(-this.learningRate,Ki(Qi(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=Ao.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:$i(s).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:$i(s).variable(false)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=Ki(Qi(i,this.beta1),Qi(o,1-this.beta1)),u=Qi(c,this.beta2),h=Gc(o),d=fc(u,h);i.assign(l),c.assign(d);const p=Ki(Qi(Yi(a,n),Yi(l,Ki(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(Ki(this.iteration,1)),this.accBeta1.assign(Qi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Lo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Lo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class gc extends ic{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Ao.registeredVariables[t];Mo((()=>{const e=Ki(Qi(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=zo(tc(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class yc extends gc{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=tc(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Ao.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:Mo((()=>$i(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Mo((()=>{let e;const t=Ki(Qi(this.m,r),s);e=this.useNesterov?Ki(Qi(this.c,Ki(s,Qi(t,this.m))),a):Ki(Qi(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Lo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class bc extends ic{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Ao.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Ao.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:Mo((()=>$i(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:Mo((()=>$i(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:Mo((()=>$i(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Mo((()=>{const e=Ki(Qi(o,this.decay),Qi(Zi(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ki(Qi(t,this.decay),Qi(s,1-this.decay)),c=Yi(Qi(s,this.learningRate),Ji(dc(e,Ki(Zi(r),this.epsilon)))),l=Ki(Qi(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=dc(a,l);a.assign(u)}else{const e=Ki(Qi(o,this.decay),Qi(Zi(s),1-this.decay)),t=Ki(Qi(i,this.momentum),Yi(Qi(s,this.learningRate),Ji(Ki(e,this.epsilon))));o.assign(e),i.assign(t);const n=dc(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Lo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Lo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Lo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const xc=[cc,uc,pc,mc,yc,bc,gc];function vc(e){return new Promise((e=>setTimeout(e))).then(e)}class wc{constructor(e){if(!zt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wc.URL_SCHEME)&&(e=e.slice(wc.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Fo.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=ei(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await vc((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await vc((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ai(e)}}}}wc.URL_SCHEME="downloads://";class kc{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=ni(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>$o(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=$o(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Ic(e){return new kc(e)}function Nc(e,t,n,a){!function(e){rt(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){rt(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),rt(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),rt(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}async function Sc(e,t){null==t&&(t={});const n=null==t.fetchFunc?zt().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Nc(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Nc(r,t.onProgress,.5,1)}async function Ec(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Rc((e=>Sc(e,{requestInit:a})))(e,t,n)}function Rc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=_o[c]*it(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),h={};let d=0;return c.forEach((e=>{const n=t[e].paths.length,a=new Fo(u.slice(d,d+n));s[e].forEach((e=>{const t=Uo(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}si.registerSaveRouter((e=>zt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wc.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new wc(e)}(e.slice(wc.URL_SCHEME.length)):null));class _c{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(rt("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=zt().platform.fetch,rt(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&rt(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=ei(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Fo.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:ai(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(OB){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return ni(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=ri(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?zt().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[ri(e),await Sc(t,this.loadOptions)]}}function Fc(e){return null!=e.match(_c.URL_SCHEME_REGEX)}_c.URL_SCHEME_REGEX=/^https?:\/\//;const Dc=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fc(e))):Fc(e),n)return Oc(e,t)}return null};function Oc(e,t){return new _c(e,t)}function Mc(e,t){return Oc(e,t)}si.registerSaveRouter(Dc),si.registerLoadRouter(Dc);class Lc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class zc{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Pc{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Vc(e,t,n,a){return new Pc(Bc(...arguments))}function Bc(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Lc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lc({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Lc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Wc(e){return new zc(e)}function Uc(e){return new zc(e)}function Hc(e,t,n){if(ot(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=bo(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Eo(e,t,a,n)}const jc=-2,qc=-1;function Kc(e,t,n){const a=e.shape.length;rt(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),rt(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)rt(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function Xc(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Yc(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Qc(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Jc(e,t,n){return n<=e?n:n-(t-1)}function Zc(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function $c(e,t,n,a,r,s,o,i,c){const l=e.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=el(o,c,l,a,e),h=tl(i,c,l,r,e),d=Qc(s,c,l,e)}else for(let p=0;p<l;p++)u[p]=al(o,a,s,e,p,c),h[p]=rl(i,r,s,e,p,c),d[p]=nl(s,p,c);return{begin:u,end:h,strides:d}}function el(e,t,n,a,r){const s=[...r],o=Zc(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Jc(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function tl(e,t,n,a,r){const s=[...r],o=Zc(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Jc(t,n,i);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=r[i];s[i]<0&&(s[i]+=e),s[i]=tt(0,s[i],r[i])}return s}function nl(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function al(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=tt(0,o,c-1),o}function rl(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?tt(0,o,c):tt(-1,o,c-1),o}function sl(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function ol(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function il(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{rt(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(rt(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,s]}function cl(e,t,n,a,r,s,o,i,c){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let f=0;f<h.dims;f++)u&&0!==(1<<f&i)&&h.numAddAxisAfterEllipsis++,1<<f&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(jc),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(qc),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,G=!0,C=!0;const A=[],T=[];for(let f=0;f<e.length;++f){if(0===d.strides[f])throw Error("strides[".concat(f,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<f),n=e[f];if(-1===n){A.push(t?1:-1);continue}const a=[d.beginMask&1<<f,d.endMask&1<<f],r=[d.strides[f]>0?0:-1,d.strides[f]>0?n:n-1];if(t&&d.strides[f]<=0)throw Error("only stride 1 allowed on non-range indexing.");C=C&&1===d.strides[f];const s=!!(d.beginMask&1<<f&&d.endMask&1<<f);if(d.beginValid&&d.endValid){if(t){const e=d.begin[f]<0?n+d.begin[f]:d.begin[f];if(d.begin[f]=e,d.end[f]=d.begin[f]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[f]," of dimension ").concat(f," out of bounds."))}else d.begin[f]=ll(d.begin[f],0,d.strides[f],n,a,r),d.end[f]=ll(d.end[f],1,d.strides[f],n,a,r);const e=1===d.strides[f]&&0===d.begin[f]&&d.end[f]===n;p=p&&e,G=G&&(0===f&&1===d.strides[f]||e)}else p=p&&1===d.strides[f]&&s,G=G&&(0===f&&1===d.strides[f]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[f]-d.begin[f],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=d.strides[f]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==d.strides[f]<0?0:Math.trunc(o/d.strides[f])+(o%d.strides[f]!==0?1:0),A.push(e)}else A.push(-1)}for(let f=0;f<d.finalShapeGatherIndices.length;++f){const e=d.finalShapeGatherIndices[f];e>=0?T.push(A[e]):e===jc&&T.push(1)}return{finalShapeSparse:T.filter(((e,t)=>d.finalShapeGatherIndices[t]!==jc)),finalShape:T,isIdentity:p,sliceDim0:G,isSimpleSlice:C,begin:d.begin,end:d.end,strides:d.strides}}function ll(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const ul=No({acos_:function(e){const t={x:wo(e,"x","acos")};return Ao.runKernel(Ht,t)}});const hl=No({acosh_:function(e){const t={x:wo(e,"x","acosh")};return Ao.runKernel(jt,t)}});const dl=No({addN_:function(e){rt(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),rt(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>wo(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ct(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Ao.runKernel(Kt,a)}});const pl=No({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:wo(e,"x","all","bool")},r={axis:t,keepDims:n};return Ao.runKernel(Xt,a,r)}});const Gl=No({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:wo(e,"x","any","bool")},r={axis:t,keepDims:n};return Ao.runKernel(Yt,a,r)}});const Cl=No({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:wo(e,"x","argMax")},a={axis:t};return Ao.runKernel(Qt,n,a)}});const Al=No({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:wo(e,"x","argMin")},a={axis:t};return Ao.runKernel(Jt,n,a)}});const Tl=No({asin_:function(e){const t={x:wo(e,"x","asin")};return Ao.runKernel(Zt,t)}});const fl=No({asinh_:function(e){const t={x:wo(e,"x","asinh")};return Ao.runKernel($t,t)}});const ml=No({atan_:function(e){const t={x:wo(e,"x","atan")};return Ao.runKernel(en,t)}});const gl=No({atan2_:function(e,t){let n=wo(e,"a","atan2"),a=wo(t,"b","atan2");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(nn,r)}});const yl=No({atanh_:function(e){const t={x:wo(e,"x","atanh")};return Ao.runKernel(tn,t)}});function bl(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return wl(e,[...t,e[3]],n,s,a,null,null,Ol(r))}function xl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=Nl(t);let l;if("channelsLast"===o)l=[i,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,e[1],e[1]]}return wl(e,l,n,a,r,s,!1,o)}function vl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=Sl(t);let u,h;if("NDHWC"===o)h="channelsLast",u=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",u=[i,c,l,e[1],e[1]]}return kl(e,u,n,a,r,!1,h,s)}function wl(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=e}const[d,p,,G]=t,[C,A]=Nl(n),[T,f]=Nl(a),m=El(d,T),g=El(p,f),{padInfo:y,outHeight:b,outWidth:x}=function(e,t,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=Il(e,t,n));const s=e[0],o=e[1],i=Rl((s-t+2*a)/n+1,r),c=Rl((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);u=r[0],h=r[1]}else if("same"===e){u=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(u-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),d=e-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],G="channelsLast"===c?e[2][0]:e[3][0],C="channelsLast"===c?e[2][1]:e[3][1];l={top:d,bottom:p,left:G,right:C,type:0===d&&0===p&&0===G&&0===C?"VALID":"EXPLICIT"},u=Rl((t-s+d+p)/a+1,i),h=Rl((n-o+G+C)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,C,A,m,g,s,i),v=o?G*h:G;let w;return"channelsFirst"===i?w=[c,v,b,x]:"channelsLast"===i&&(w=[c,b,x,v]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:b,outWidth:x,outChannels:v,padInfo:y,strideHeight:C,strideWidth:A,filterHeight:d,filterWidth:p,effectiveFilterHeight:m,effectiveFilterWidth:g,dilationHeight:T,dilationWidth:f,inShape:e,outShape:w,filterShape:t}}function kl(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,d,l,u,h]=e}const[p,G,C,,A]=t,[T,f,m]=Sl(n),[g,y,b]=Sl(a),x=El(p,g),v=El(G,y),w=El(C,b),{padInfo:k,outDepth:I,outHeight:N,outWidth:S}=function(e,t,n,a,r,s,o,i,c,l,u){let h,d,p,G;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const C=function(e,t,n,a,r,s){null==r&&(r=Il(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=Rl((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,l],1,[r,s,o],e,u);d=C[0],p=C[1],G=C[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/s),G=Math.ceil(a/o);const e=(d-1)*r+i-t,u=(p-1)*s+c-n,C=(G-1)*o+l-a,A=Math.floor(e/2),T=e-A,f=Math.floor(u/2),m=u-f,g=Math.floor(C/2);h={top:f,bottom:m,left:g,right:C-g,front:A,back:T,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:G}}(r,l,u,h,T,f,m,x,v,w,i),E=s?A*d:A;let R;return"channelsFirst"===o?R=[c,E,I,N,S]:"channelsLast"===o&&(R=[c,I,N,S,E]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:I,outHeight:N,outWidth:S,outChannels:E,padInfo:k,strideDepth:T,strideHeight:f,strideWidth:m,filterDepth:p,filterHeight:G,filterWidth:C,effectiveFilterDepth:x,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationDepth:g,dilationHeight:y,dilationWidth:b,inShape:e,outShape:R,filterShape:t}}function Il(e,t,n){const a=El(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function Nl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Sl(e){return"number"===typeof e?[e,e,e]:e}function El(e,t){return t<=1?e:e+(e-1)*(t-1)}function Rl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function _l(e){const[t,n,a]=Nl(e);return 1===t&&1===n&&1===a}function Fl(e,t){return _l(e)||_l(t)}function Dl(e){return Nl(e).every((e=>e>0))}function Ol(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function Ml(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)rt(lt(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{rt(lt(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const Ll=No({reshape_:function(e,t){const n={x:wo(e,"x","reshape","string_or_numeric")},a={shape:t};return Ao.runKernel(tr,n,a)}});const zl=No({avgPool_:function(e,t,n,a,r){const s=wo(e,"x","avgPool","float32");rt(Fl(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=Ll(s,[1,s.shape[0],s.shape[1],s.shape[2]])),rt(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),Ml("avgPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let u=Ao.runKernel(an,c,l);return u=Hi(u,s.dtype),i?Ll(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Pl=No({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=wo(e,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),rt(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),rt("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),rt("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),Ml("avgPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=Ao.runKernel(sn,l,u);return h=Hi(h,i.dtype),c?Ll(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Vl=No({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;rt(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ko(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return ji(n[0]);const a=n,r={axis:t};return Ao.runKernel(fn,a,r)}});const Bl=No({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=wo(e,"a","matMul"),s=wo(t,"b","matMul");[r,s]=io(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return Ao.runKernel(cn,o,i)}});const Wl=No({sigmoid_:function(e){const t={x:wo(e,"x","sigmoid","float32")};return Ao.runKernel(mr,t)}});const Ul=No({slice_:function(e,t,n){const a=wo(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return Ao.runKernel(Cr,r,s)}});const Hl=No({tanh_:function(e){const t={x:wo(e,"x","tanh","float32")};return Ao.runKernel(Vr,t)}});const jl=No({basicLSTMCell_:function(e,t,n,a,r,s){const o=wo(e,"forgetBias","basicLSTMCell"),i=wo(t,"lstmKernel","basicLSTMCell"),c=wo(n,"lstmBias","basicLSTMCell"),l=wo(a,"data","basicLSTMCell"),u=wo(r,"c","basicLSTMCell"),h=wo(s,"h","basicLSTMCell"),d=Vl([l,h],1),p=Bl(d,i),G=Ki(p,c),C=G.shape[0],A=G.shape[1]/4,T=[C,A],f=Ul(G,[0,0],T),m=Ul(G,[0,A],T),g=Ul(G,[0,2*A],T),y=Ul(G,[0,3*A],T),b=Ki(Qi(Wl(f),Hl(m)),Qi(u,Wl(Ki(o,g))));return[b,Qi(Hl(b),Wl(y))]}});const ql=No({batchToSpaceND_:function(e,t,n){const a=wo(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));rt(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),rt(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),rt(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:t,crops:n};return Ao.runKernel(ln,s,o)}});const Kl=No({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const o=wo(e,"x","batchNorm"),i=wo(t,"mean","batchNorm"),c=wo(n,"variance","batchNorm");let l,u;null!=r&&(l=wo(r,"scale","batchNorm")),null!=a&&(u=wo(a,"offset","batchNorm")),rt(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rt(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rt(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Ll(e,[1,1,1,e.size]):2===e.rank?Ll(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:u,mean:i,variance:c},d={varianceEpsilon:s},p=Ao.runKernel(ea,h,d);return Ll(p,o.shape)}});const Xl=No({batchNorm2d_:function(e,t,n,a,r,s){const o=wo(e,"x","batchNorm"),i=wo(t,"mean","batchNorm"),c=wo(n,"variance","batchNorm");let l,u;return null!=r&&(l=wo(r,"scale","batchNorm")),null!=a&&(u=wo(a,"offset","batchNorm")),rt(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),rt(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),rt(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&rt(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&rt(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),Kl(o,i,c,u,l,s)}});const Yl=No({batchNorm3d_:function(e,t,n,a,r,s){const o=wo(e,"x","batchNorm"),i=wo(t,"mean","batchNorm"),c=wo(n,"variance","batchNorm");let l,u;return null!=r&&(l=wo(r,"scale","batchNorm")),null!=a&&(u=wo(a,"offset","batchNorm")),rt(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),rt(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),rt(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&rt(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&rt(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),Kl(o,i,c,u,l,s)}});const Ql=No({batchNorm4d_:function(e,t,n,a,r,s){const o=wo(e,"x","batchNorm"),i=wo(t,"mean","batchNorm"),c=wo(n,"variance","batchNorm");let l,u;return null!=r&&(l=wo(r,"scale","batchNorm")),null!=a&&(u=wo(a,"offset","batchNorm")),rt(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),rt(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),rt(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&rt(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&rt(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),Kl(o,i,c,u,l,s)}});const Jl=No({bincount_:function(e,t,n){const a=wo(e,"x","bincount"),r=wo(t,"weights","bincount");rt("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),rt(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),rt(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return Ao.runKernel(un,s,o)}});const Zl=No({bitwiseAnd_:function(e,t){const n=wo(e,"x","bitwiseAnd"),a=wo(t,"y","bitwiseAnd");if(!ct(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Ao.runKernel(hn,r)}});const $l=No({broadcastArgs_:function(e,t){const n=wo(e,"s0","broadcastArgs","int32"),a=wo(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Ao.runKernel(dn,r)}});const eu=No({broadcastTo_:function(e,t){let n=wo(e,"broadcastTo","x");const a=n.shape;if(Rt(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ll(n,e)}const r=n.shape,s=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ji(n);const o={x:n},i={reps:s};return Ao.runKernel(Br,o,i)}});const tu=No({ceil_:function(e){const t={x:wo(e,"x","ceil","float32")};return Ao.runKernel(Gn,t)}});const nu=No({clipByValue_:function(e,t,n){const a=wo(e,"x","clipByValue");if(rt(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return lc(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return Ao.runKernel(Cn,r,s)}});const au=No({concat1d_:function(e){return Vl(e,0)}});const ru=No({concat2d_:function(e,t){return Vl(e,t)}});const su=No({concat3d_:function(e,t){return Vl(e,t)}});const ou=No({concat4d_:function(e,t){return Vl(e,t)}});const iu=No({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=wo(e,"x","conv2d","float32"),c=wo(t,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rt(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),rt(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),Ml("conv2d",a,o);const h="NHWC"===r?l.shape[3]:l.shape[1];rt(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),rt(Fl(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),rt(Dl(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),rt(Dl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},G=Ao.runKernel(mn,d,p);return u?Ll(G,[G.shape[1],G.shape[2],G.shape[3]]):G}});const cu=No({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=wo(e,"x","conv1d"),c=wo(t,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=Ll(i,[1,i.shape[0],i.shape[1]])),rt(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),rt(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),Ml("conv1d",a,o),rt(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),rt(Fl(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),rt(Dl(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),rt(Dl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),rt("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=Ll(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=Ll(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=iu(d,h,[1,n],a,"NHWC",[1,s],o);return Ll(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const lu=No({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;rt(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,l=!1;3===t.rank&&(l=!0,c=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),rt(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),rt(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),rt(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];rt(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),rt(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),Ml("conv2dDerInput",r,o);const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},G=Ao.runKernel(yn,d,p);return l?Ll(G,[G.shape[1],G.shape[2],G.shape[3]]):G}});const uu=No({conv2dTranspose_:function(e,t,n,a,r,s){const o=wo(e,"x","conv2dTranspose"),i=wo(t,"filter","conv2dTranspose");return lu(n,o,i,a,r,"NHWC",s)}});const hu=No({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=wo(e,"x","conv3d"),i=wo(t,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),rt(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),rt(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),rt(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),rt(Fl(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),rt("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),rt(Dl(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),rt(Dl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=Ao.runKernel(bn,u,h);return l?Ll(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const du=No({conv3DBackpropInput_:function(e,t,n,a,r){rt(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const c=s[4],l=o.shape[4];rt(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),rt(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),rt(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),rt(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),rt(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=Ao.runKernel(vn,u,h);return i?Ll(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const pu=No({conv3dTranspose_:function(e,t,n,a,r){const s=wo(e,"x","conv3dTranspose"),o=wo(t,"filter","conv3dTranspose");return du(n,s,o,a,r)}});const Gu=No({cos_:function(e){const t={x:wo(e,"x","cos","float32")};return Ao.runKernel(wn,t)}});const Cu=No({cosh_:function(e){const t={x:wo(e,"x","cosh","float32")};return Ao.runKernel(kn,t)}});const Au=No({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:wo(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return Ao.runKernel(In,r,s)}});const Tu=No({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:wo(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Ao.runKernel(Nn,r,s)}});const fu=No({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=wo(e,"x","denseBincount"),s=wo(t,"weights","denseBincount");rt("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),rt(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),rt(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),rt(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return Ao.runKernel(En,o,i)}});const mu=No({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=wo(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];rt(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),rt(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),rt(s*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),rt(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:t,dataFormat:n};return Ao.runKernel(Rn,i,c)}});const gu=No({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=wo(e,"x","depthwiseConv2d","float32"),c=wo(t,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rt(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),rt(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];rt(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),Ml("depthwiseConv2d",a,o);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},G=Ao.runKernel(_n,d,p);return u?Ll(G,[G.shape[1],G.shape[2],G.shape[3]]):G}});const yu=No({diag_:function(e){const t={x:wo(e,"x","diag")};return Ao.runKernel(On,t)}});const bu=No({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=wo(e,"x","dilation2d"),i=wo(t,"filter","dilation2d");rt(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),rt(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),rt("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),rt(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=Ao.runKernel(Mn,u,h);return l?Ll(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const xu=No({equal_:function(e,t){let n=wo(e,"a","equal","string_or_numeric"),a=wo(t,"b","equal","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(jn,r)}});const vu=No({where_:function(e,t,n){const a=wo(t,"a","where"),r=wo(n,"b","where"),s=wo(e,"condition","where","bool"),o=Tc(Tc(s.shape,a.shape),r.shape),i={condition:eu(s,o),t:eu(a,o),e:eu(r,o)};return Ao.runKernel(pr,i)}});const wu=No({divNoNan_:function(e,t){let n=wo(e,"a","div"),a=wo(t,"b","div");[n,a]=io(n,a);const r=Yi(n,a),s=$i(r),o=xu(a,s);return vu(o,s,r)}});const ku=No({dot_:function(e,t){const n=wo(e,"t1","dot"),a=wo(t,"t2","dot");rt((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(rt(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const e=Ll(n,[1,-1]),t=Ll(a,[-1,1]),r=Bl(e,t);return Ll(r,[])}if(1===n.rank&&2===a.rank){const e=Ll(n,[1,-1]),t=Ll(a,[a.shape[0],a.shape[1]]),r=Bl(e,t);return Ll(r,[r.size])}if(2===n.rank&&1===a.rank){const e=Ll(a,[-1,1]),t=Bl(n,e);return Ll(t,[t.size])}{const e=Ll(a,[a.shape[0],a.shape[1]]);return Bl(n,e)}}});const Iu=No({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>wo(e,"tensors".concat(t),"einsum"))),s={equation:e};return Ao.runKernel(Bn,r,s)}});const Nu=No({elu_:function(e){const t={x:wo(e,"x","elu","float32")};return Ao.runKernel(Wn,t)}});const Su=No({ensureShape_:function(e,t){const n=wo(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const Eu=No({erf_:function(e){let t=wo(e,"x","erf");rt("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Hi(t,"float32"));const n={x:t};return Ao.runKernel(Hn,n)}});function Ru(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _u(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function Fu(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Du(e,t){return _u(e,t.map((e=>1)),t)}function Ou(e,t,n){rt(Ru(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function Mu(e,t){if(Ru(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Lu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function zu(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Pu=No({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:wo(e,"x","max")},r={reductionIndices:t,keepDims:n};return Ao.runKernel(ba,a,r)}});const Vu=No({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:wo(e,"x","min")},r={axis:t,keepDims:n};return Ao.runKernel(Ea,a,r)}});const Bu=No({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=wo(e,"x","sum");"bool"===a.dtype&&(a=Hi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Ao.runKernel(br,r,s)}});function Wu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Gc(e);if(1!==e.rank&&null===n)return Wu(Ll(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Bu(Gc(e),n);if(t===1/0)return Pu(Gc(e),n);if(t===-1/0)return Vu(Gc(e),n);if("euclidean"===t||2===t)return Ji(Bu(hc(Gc(e),tc(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return Pu(Bu(Gc(e),n[0]),n[1]-1);if(t===1/0)return Pu(Bu(Gc(e),n[1]),n[0]);if(t===-1/0)return Vu(Bu(Gc(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ji(Bu(Zi(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Uu=No({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Wu(e=wo(e,"x","norm"),t,n);let s=r.shape;if(a){const t=Gt(n,e.shape);s=Du(r.shape,t)}return Ll(r,s)}});const Hu=No({euclideanNorm_:function(e){return Uu(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const ju=No({exp_:function(e){const t={x:wo(e,"x","exp")};return Ao.runKernel(qn,t)}});const qu=No({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=wo(e,"x","expandDims","string_or_numeric");rt(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Ao.runKernel(Kn,a,r)}});const Ku=No({expm1_:function(e){const t={x:wo(e,"x","expm1")};return Ao.runKernel(Xn,t)}});const Xu=No({tile_:function(e,t){const n=wo(e,"x","tile","string_or_numeric");rt(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Ao.runKernel(Br,a,r)}});const Yu=No({eye_:function(e,t,n){null==t&&(t=e);const a=Ui([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const s=Ll(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Xu(qu(s,0),[n[0],1,1]);if(2===n.length)return Xu(qu(qu(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Xu(qu(qu(qu(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Qu=No({floor_:function(e){const t={x:wo(e,"x","floor","float32")};return Ao.runKernel(Zn,t)}});const Ju=No({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:wo(e,"x","gather"),indices:wo(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Ao.runKernel(ta,r,s)}});const Zu=No({greater_:function(e,t){let n=wo(e,"a","greater","string_or_numeric"),a=wo(t,"b","greater","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(aa,r)}});const $u=No({greaterEqual_:function(e,t){let n=wo(e,"a","greaterEqual","string_or_numeric"),a=wo(t,"b","greaterEqual","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(ra,r)}});const eh=No({imag_:function(e){const t={input:wo(e,"input","imag")};return Ao.runKernel(ia,t)}});const th=No({isFinite_:function(e){const t={x:wo(e,"x","isFinite")};return Ao.runKernel(ca,t)}});const nh=No({isInf_:function(e){const t={x:wo(e,"x","isInf")};return Ao.runKernel(la,t)}});const ah=No({isNaN_:function(e){const t={x:wo(e,"x","isNaN")};return Ao.runKernel(ua,t)}});const rh=No({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:wo(e,"x","leakyRelu")},a={alpha:t};return Ao.runKernel(ha,n,a)}});const sh=No({less_:function(e,t){let n=wo(e,"a","less","string_or_numeric"),a=wo(t,"b","less","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(da,r)}});const oh=No({lessEqual_:function(e,t){let n=wo(e,"a","lessEqual","string_or_numeric"),a=wo(t,"b","lessEqual","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(pa,r)}});function ih(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Ao.runKernel(Ga,{},a)}const ch=No({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=wo(e,"x","localResponseNormalization");rt(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),rt(lt(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=Ll(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:t,bias:n,alpha:a,beta:r},u=Ao.runKernel(ga,c,l);return i?Ll(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const lh=No({log_:function(e){const t={x:wo(e,"x","log","float32")};return Ao.runKernel(Ca,t)}});const uh=No({log1p_:function(e){const t={x:wo(e,"x","log1p")};return Ao.runKernel(Aa,t)}});const hh=No({neg_:function(e){const t={x:wo(e,"x","neg")};return Ao.runKernel(Ma,t)}});const dh=No({softplus_:function(e){const t={x:wo(e,"x","softplus")};return Ao.runKernel(gr,t)}});const ph=No({logSigmoid_:function(e){const t=wo(e,"x","logSigmoid");return ec((e=>({value:hh(dh(hh(e))),gradFunc:t=>Qi(t,Wl(hh(e)))})))(t)}});const Gh=No({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=wo(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=ec(((e,n)=>{const a=Pu(e,t,!0),r=dc(e,a),s=dc(Hi(r,"float32"),lh(Bu(ju(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=ju(a);return dc(e,Qi(Bu(e,t,!0),r))}}}));return a(n)}});const Ch=No({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=wo(e,"x","logSumExp"),r=Gt(t,a.shape),s=Pu(a,r,!0),o=dc(a,s),i=ju(o),c=Bu(i,r),l=lh(c),u=Ki(Ll(s,l.shape),l);if(n){const e=Du(u.shape,r);return Ll(u,e)}return u}});const Ah=No({logicalAnd_:function(e,t){const n=wo(e,"a","logicalAnd","bool"),a=wo(t,"b","logicalAnd","bool");Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(Ta,r)}});const Th=No({logicalNot_:function(e){const t={x:wo(e,"x","logicalNot","bool")};return Ao.runKernel(fa,t)}});const fh=No({logicalOr_:function(e,t){const n=wo(e,"a","logicalOr","bool"),a=wo(t,"b","logicalOr","bool");Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(ma,r)}});const mh=No({logicalXor_:function(e,t){const n=wo(e,"a","logicalXor","bool"),a=wo(t,"b","logicalXor","bool");return Tc(n.shape,a.shape),Ah(fh(e,t),Th(Ah(e,t)))}}),gh=2147483648;const yh=No({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=wo(e,"sortedSequence","searchSorted"),r=wo(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=Ll(a,[-1,s]),c=Ll(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(it(c.shape)>=gh)throw new Error("values tensor size must less than ".concat(gh));if(i.shape[1]>=gh)throw new Error("trailing dim_size must less than ".concat(gh," for int32 output type, was ").concat(i.shape[1]));const l={sortedSequence:i,values:c},u={side:n};return Ao.runKernel(dr,l,u)}});function bh(e,t){return yh(e,t,"left")}const xh=No({maxPool_:function(e,t,n,a,r){const s=wo(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=Ll(s,[1,s.shape[0],s.shape[1],s.shape[2]])),rt(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),rt(Fl(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),Ml("maxPool",a,r);const c={x:o},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},u=Ao.runKernel(va,c,l);return i?Ll(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const vh=No({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=wo(e,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),rt(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),rt("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),Ml("maxPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=Ao.runKernel(ka,l,u);return c?Ll(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const wh=No({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:wo(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Ao.runKernel(Na,s,o);return{result:i[0],indexes:i[1]}}});const kh=No({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:wo(e,"x","mean")},r={axis:t,keepDims:n};return Ao.runKernel(Sa,a,r)}});function Ih(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Rt(e),"complex64"===t){const t=Ih(e,"float32"),n=Ih(e,"float32");return So(t,n)}const n=St(it(e),t);return Ao.makeTensor(n,e,t)}function Nh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Rt(e),"complex64"===t){const t=Nh(e,"float32"),n=Ih(e,"float32");return So(t,n)}const n=Nt(it(e),t);return Ao.makeTensor(n,e,t)}function Sh(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=wo(e,"x","meshgrid",e instanceof Xs?e.dtype:"float32");if(void 0===t)return[a];let r=wo(t,"y","meshgrid",t instanceof Xs?t.dtype:"float32");const s=it(a.shape),o=it(r.shape);return"xy"===n?(a=Ll(a,[1,-1]),r=Ll(r,[-1,1]),[Bl(Nh([o,1],a.dtype),a),Bl(r,Nh([1,s],r.dtype))]):(a=Ll(a,[-1,1]),r=Ll(r,[1,-1]),[Bl(a,Nh([1,o],a.dtype)),Bl(Nh([s,1],r.dtype),r)])}const Eh=No({minimum_:function(e,t){let n=wo(e,"a","minimum"),a=wo(t,"b","minimum");[n,a]=io(n,a),"bool"===n.dtype&&(n=Hi(n,"int32"),a=Hi(a,"int32")),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(Ra,r)}});const Rh=No({mirrorPad_:function(e,t,n){rt("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=wo(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");rt(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)rt(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rt(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:t,mode:n},o={x:a};return Ao.runKernel(_a,o,s)}});const _h=No({mod_:function(e,t){let n=wo(e,"a","mod"),a=wo(t,"b","mod");[n,a]=io(n,a);const r={a:n,b:a};return Ao.runKernel(Fa,r)}});const Fh=No({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Gt(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=wo(e,"x","moments")).shape),a=kh(e,n,t);let r=a.shape;t||(r=Du(a.shape,n));const s=Zi(dc(Hi(e,"float32"),Ll(a,r)));return{mean:a,variance:kh(s,n,t)}}});const Dh=No({multiRNNCell_:function(e,t,n,a){const r=wo(t,"data","multiRNNCell"),s=ko(n,"c","multiRNNCell"),o=ko(a,"h","multiRNNCell");let i=r;const c=[];for(let h=0;h<e.length;h++){const t=e[h](i,s[h],o[h]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],u=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),u.push(c[h+1]);return[l,u]}});const Oh=No({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=wo(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?Ll(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:a},l=Ao.runKernel(Da,i,c);return 1===o?Ll(l,[l.size]):l}});const Mh=No({notEqual_:function(e,t){let n=wo(e,"a","notEqual","string_or_numeric"),a=wo(t,"b","notEqual","string_or_numeric");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(La,r)}});const Lh=No({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const s={indices:wo(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:a};return Ao.runKernel(Wa,s,o)}});const zh=No({onesLike_:function(e){const t={x:wo(e,"x","onesLike")};return Ao.runKernel(Ba,t)}});const Ph=No({outerProduct_:function(e,t){const n=wo(e,"v1","outerProduct"),a=wo(t,"v2","outerProduct");rt(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=Ll(n,[-1,1]),s=Ll(a,[1,-1]);return Bl(r,s)}});const Vh=No({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=wo(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return Ao.runKernel(Ha,s,r)}});const Bh=No({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return rt(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Vh(e,[t],n)}});const Wh=No({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return rt(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Vh(e,t,n)}});const Uh=No({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return rt(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Vh(e,t,n)}});const Hh=No({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return rt(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Vh(e,t,n)}});const jh=No({spaceToBatchND_:function(e,t,n){const a=wo(e,"x","spaceToBatchND");rt(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),rt(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),rt(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},s={blockShape:t,paddings:n};return Ao.runKernel(xr,r,s)}});const qh=No({pool_:function(e,t,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=wo(e,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rt(Fl(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const u=xl(c.shape,t,s,r,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[G,C]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([u.inHeight,u.inWidth],h,d),A=p?a:"valid",T=p?c:jh(c,h,G),f=("avg"===n?()=>zl(T,t,s,A,o):()=>xh(T,t,s,A,o))(),m=p?f:ql(f,h,C);return l?Ll(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Kh=No({prelu_:function(e,t){const n={x:wo(e,"x","prelu"),alpha:wo(t,"alpha","prelu")};return Ao.runKernel(qa,n)}});const Xh=No({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=wo(e,"x","prod");"bool"===a.dtype&&(a=Hi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Ao.runKernel(Ka,r,s)}});const Yh=No({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>wo(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:wo(t,"paramsDenseValues","raggedGather"),indices:wo(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=Ao.runKernel(Xa,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Qh=No({raggedRange_:function(e,t,n){const a=wo(e,"starts","raggedRange"),r={starts:a,limits:wo(t,"limits","raggedRange",a.dtype),deltas:wo(n,"deltas","raggedRange",a.dtype)},s=Ao.runKernel(Ya,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Jh=No({raggedTensorToTensor_:function(e,t,n,a,r){const s=wo(e,"shape","raggedTensorToTensor","int32"),o=wo(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:wo(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>wo(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:r};return Ao.runKernel(Qa,i,c)}});const Zh=No({rand_:function(e,t,n){Rt(e);const a=it(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return Ao.makeTensor(r,e,n)}});var $h=n(334);class ed{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=$h.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class td{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=$h.alea(r.toString()),this.randn=new ed(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class nd{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=$h.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ad=No({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(Rt(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new td(t,n,a,r),o=Ui(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const rd=No({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Rt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new ed(t,n,a,!1,r),o=Ui(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const sd=No({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return rd(e,0,1,t,n)}});const od=No({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;Rt(e);const s=Ui(e,a),o=new nd(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const id=No({randomUniformInt_:function(e,t,n,a){return od(e,t,n,"int32",a)}});function cd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Ao.runKernel(Ja,{},r)}const ld=No({real_:function(e){const t={input:wo(e,"input","real")};return Ao.runKernel(Za,t)}});const ud=No({reciprocal_:function(e){const t={x:wo(e,"x","reciprocal")};return Ao.runKernel($a,t)}});const hd=No({relu_:function(e){const t={x:wo(e,"x","relu")};return Ao.runKernel(er,t)}});const dd=No({relu6_:function(e){const t={x:wo(e,"x","relu6")};return Ao.runKernel(or,t)}});const pd=No({reverse_:function(e,t){const n={x:wo(e,"x","reverse")},a={dims:t};return Ao.runKernel(ir,n,a)}});const Gd=No({reverse1d_:function(e){const t=wo(e,"x","reverse");return rt(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),pd(t,0)}});const Cd=No({reverse2d_:function(e,t){const n=wo(e,"x","reverse");return rt(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),pd(n,t)}});const Ad=No({reverse3d_:function(e,t){const n=wo(e,"x","reverse");return rt(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),pd(n,t)}});const Td=No({reverse4d_:function(e,t){const n=wo(e,"x","reverse");return rt(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),pd(n,t)}});const fd=No({round_:function(e){const t={x:wo(e,"x","round")};return Ao.runKernel(cr,t)}});const md=No({rsqrt_:function(e){const t={x:wo(e,"x","rsqrt","float32")};return Ao.runKernel(lr,t)}});const gd=No({selu_:function(e){const t={x:wo(e,"x","selu")};return Ao.runKernel(Gr,t)}});const yd=No({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=wo(e,"x","separableConv2d"),c=wo(t,"depthwiseFilter","separableConv2d"),l=wo(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");rt(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),rt(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),rt(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),rt(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),rt(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];rt(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const G=gu(u,c,a,r,o,s),C=iu(G,l,1,"valid",o);return h?Ll(C,[C.shape[1],C.shape[2],C.shape[3]]):C}});const bd=async function(e,t){const n=wo(e,"x","setdiff1d"),a=wo(t,"y","setdiff1d");rt(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),rt(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),rt(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new Hs([i],n.dtype),l=new Hs([i],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};const xd=No({sign_:function(e){const t={x:wo(e,"x","sign")};return Ao.runKernel(fr,t)}});const vd=No({sin_:function(e){const t={x:wo(e,"x","sin","float32")};return Ao.runKernel(Ar,t)}});const wd=No({sinh_:function(e){const t={x:wo(e,"x","sinh")};return Ao.runKernel(Tr,t)}});const kd=No({slice1d_:function(e,t,n){const a=wo(e,"x","slice1d");return rt(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),Ul(a,[t],[n])}});const Id=No({slice2d_:function(e,t,n){const a=wo(e,"x","slice2d");return rt(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),Ul(a,t,n)}});const Nd=No({slice3d_:function(e,t,n){const a=wo(e,"x","slice3d");return rt(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),Ul(a,t,n)}});const Sd=No({slice4d_:function(e,t,n){const a=wo(e,"x","slice4d");return rt(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),Ul(a,t,n)}});const Ed=No({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=wo(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Ao.runKernel(wr,a,r)}});const Rd=No({fft_:function(e){rt("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Ao.runKernel(Yn,t)}});const _d=No({ifft_:function(e){rt("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Ao.runKernel(oa,t)}});const Fd=No({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=Ll(e,[n,t]);a=_d(r)}else{const r=[n,2*(t-1)],s=Ll(ld(e),[n,t]),o=Ll(eh(e),[n,t]),i=pd(Ul(s,[0,1],[n,t-2]),1),c=Qi(pd(Ul(o,[0,1],[n,t-2]),1),tc(-1)),l=Vl([s,i],1),u=Vl([o,c],1),h=Ll(So(l,u),[r[0],r[1]]);a=_d(h)}if(a=ld(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=Ll(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const Dd=No({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:wo(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Ao.runKernel(vr,a,r)}});const Od=No({rfft_:function(e,t){rt("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=Ul(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=Vl([e,Ih(a)],e.shape.length-1),n=t}else r=e;const s=$i(r),o=Ll(So(r,s),[a,n]),i=Rd(o),c=Math.floor(n/2)+1,l=ld(i),u=eh(i),h=Dd(l,[c,n-c],l.shape.length-1),d=Dd(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,Ll(So(h[0],d[0]),p)}});const Md=No({squaredDifference_:function(e,t){let n=wo(e,"a","squaredDifference"),a=wo(t,"b","squaredDifference");[n,a]=io(n,a),Tc(n.shape,a.shape);const r={a:n,b:a};return Ao.runKernel(Rr,r,{})}});const Ld=No({squeeze_:function(e,t){const n=wo(e,"x","squeeze","string_or_numeric");return Ll(n,Ct(n.shape,t).newShape)}});const zd=No({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ko(e,"tensors","stack","string_or_numeric");rt(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&rt(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Ao.runKernel(Ua,a,r)}});const Pd=No({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:wo(e,"x","step")},a={alpha:t};return Ao.runKernel(Yr,n,a)}});const Vd=No({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:wo(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return Ao.runKernel(Dr,l,u)}});const Bd=No({tan_:function(e){const t={x:wo(e,"x","tan","float32")};return Ao.runKernel(Pr,t)}});function Wd(e,t){ot(e);const n=bo(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Eo(e,null,n,t)}function Ud(e,t,n){if(ot(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=bo(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Eo(e,t,a,n)}function Hd(e,t,n){if(ot(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=bo(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Eo(e,t,a,n)}function jd(e,t,n){if(ot(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=bo(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Eo(e,t,a,n)}function qd(e,t,n){if(ot(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=bo(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Eo(e,t=t||a,a,n)}function Kd(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function Xd(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}Kd(n,t,e)}function Yd(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let c=r;c<s;++c)o*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:it(t.shape)/i,sliceSize:o,strides:[...wt(n.slice(0,r)),1],outputSize:it(n)}}const Qd=No({tensorScatterUpdate_:function(e,t,n){const a=wo(e,"tensor","tensorScatterupdate"),r=wo(t,"indices","tensorScatterupdate","int32"),s=wo(n,"updates","tensorScatterupdate");if(Xd(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return Ao.runKernel(hr,o,{})}});const Jd=No({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=wo(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const s={x:a},o={k:t,sorted:n},[i,c]=Ao.runKernel(Wr,s,o);return{values:i,indices:c}}});const Zd=No({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Rt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new ed(t,n,a,!0,r),o=Ui(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const $d=No({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=wo(e,"x","unique","string_or_numeric");rt(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,o]=Ao.runKernel(jr,a,r);return{values:s,indices:o}}});const ep=No({unsortedSegmentSum_:function(e,t,n){const a=wo(e,"x","unsortedSegmentSum"),r=wo(t,"segmentIds","unsortedSegmentSum","int32");rt(lt(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return Ao.runKernel(Kr,s,o)}});const tp=No({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=wo(e,"x","unstack","string_or_numeric");rt(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Ao.runKernel(qr,a,r)}});function np(e,t){return yh(e,t,"right")}function ap(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Ao.makeVariable(e,t,n,a)}function rp(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=Ui(e,"int32"),r=Ui([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),o=s*e.length;r.values.set(t,o)}return r.toTensor()}const sp=async function(e){const t=wo(e,"condition","whereAsync","bool"),n=await t.data(),a=rp(t.shape,n);return e!==t&&t.dispose(),a};const op=async function(e,t,n){const a=wo(e,"tensor","boolMask"),r=wo(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;rt(o>0,(()=>"mask cannot be scalar")),st(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let C=s;C<s+o;C++)c*=i[C];const l=i.slice(0,s).concat([c],i.slice(s+o)),u=Ll(a,l),h=Ll(r,[-1]),d=await sp(h),p=Ld(d,[1]),G=Ju(u,p,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),G};const ip=No({transpose_:function(e,t,n){const a=wo(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),rt(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{rt(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?Mo((()=>{let e=ld(a),t=eh(a);return e=Ao.runKernel(Hr,{x:e},s),t=Ao.runKernel(Hr,{x:t},s),n&&(t=hh(t)),So(e,t)})):Ao.runKernel(Hr,r,s)}});const cp=No({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=wo(e,"v","movingAverage"),o=wo(t,"x","movingAverage"),i=wo(n,"decay","movingAverage");var c,l;l=o,rt((c=s).dtype===l.dtype,(()=>"The dtypes of the first(".concat(c.dtype,") and")+" second(".concat(l.dtype,") input must match"))),rt(ct(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=tc(1),h=dc(u,i);let d=Qi(dc(o,s),h);if(r){rt(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=wo(a,"step","movingAverage");d=Yi(d,dc(u,hc(i,e)))}return Ki(s,d)}});const lp=No({scatterND_:function(e,t,n){Rt(n);const a=wo(e,"indices","scatterND","int32"),r=wo(t,"updates","scatterND");Xd(r,a,n);const s={indices:a,updates:r},o={shape:n};return Ao.runKernel(ur,s,o)}});const up=No({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;Rt(n);const r=wo(e,"sparseIndices","sparseToDense","int32"),s=wo(t,"sparseValues","sparseToDense","string_or_numeric"),o=wo(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},c={outputShape:n};return Ao.runKernel(Er,i,c)}});const hp=No({gatherND_:function(e,t){const n=wo(t,"indices","gatherND","int32"),a={params:wo(e,"x","gatherND","string_or_numeric"),indices:n};return Ao.runKernel(na,a)}});const dp=No({dropout_:function(e,t,n,a){const r=wo(e,"x","dropout");if(rt("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),rt(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof Xs?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(ct(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,i=Yi(Qu(Ki(od(s,0,1,"float32",a),o)),o);return Qi(r,i)}});function pp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gp(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Wd(r,"float32")}const Cp=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=wo(e,"predictions","inTopK"),r=wo(t,"targets","inTopK");rt(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),rt(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),st(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];rt(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],u=At("bool",c);for(let h=0;h<c;h++){const e=h*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),u[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){u[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Ro(u,r.shape,"bool")};const Ap=No({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=Ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2]])),rt(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),rt(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),rt(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];rt(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),rt(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),Ml("conv2dDerFilter",r,o);const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return Ao.runKernel(gn,h,d)}});function Tp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Qi(e,Pd(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function fp(e,t){let n=t;const a=Ac(e.shape,t.shape);return a.length>0&&(n=Bu(n,a)),Ll(n,e.shape)}function mp(e,t,n,a){if("linear"===t)return e;if("relu"===t)return hd(e);if("elu"===t)return Nu(e);if("relu6"===t)return dd(e);if("prelu"===t)return Kh(e,n);if("leakyrelu"===t)return rh(e,a);if("sigmoid"===t)return Wl(e);throw new Error("Unknown fused activation ".concat(t,"."))}const gp=(e,t)=>!(e>0)||"linear"===t;const yp=No({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(l=l||"linear",!1===gp(Ao.state.gradientDepth,l)){rt("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=iu(t,n,a,r,s,o,i);return null!=c&&(e=Ki(e,c)),mp(e,l,u,h)}const d=wo(t,"x","conv2d","float32"),p=wo(n,"filter","conv2d","float32");let G=d,C=!1;3===d.rank&&(C=!0,G=Ll(d,[1,d.shape[0],d.shape[1],d.shape[2]])),rt(4===G.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(G.rank,"."))),rt(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),Ml("fused conv2d",r,i);const A="NHWC"===s?G.shape[3]:G.shape[1];rt(p.shape[2]===A,(()=>"Error in conv2d: depth of input (".concat(A,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),rt(Fl(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const T=wl(G.shape,p.shape,a,o,r,i);let f,m;if(null!=c&&(f=wo(c,"bias","fused conv2d"),[f]=io(f,d),"NHWC"===s?Tc(T.outShape,f.shape):(rt(f.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(f.shape.length,"."))),rt(0===f.shape.length||f.shape[0]===T.outChannels||1===f.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(f.shape,") is not ")+"compatible with the number of output channels "+"(".concat(T.outChannels,")"))))),null!=u){const e=u.shape;if(rt(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)rt(1===e[0]||e[0]===T.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(T.outChannels,").")));else if(3===e.length)try{Tc(e,T.outShape)}catch(OB){const n="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(T.outShape,").");throw Error(n)}m=wo(u,"prelu weights","fused conv2d")}const g=(e,t)=>{rt("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,u]=t,h=Tp(e,c,l);rt(_l(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[lu(i.shape,h,n,a,r),Ap(i,h,n.shape,a,r)];if(null!=u){const e=fp(u,h);d.push(e)}return d},y={x:G,filter:p,bias:f,preluActivationWeights:m},b={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=ec(((e,t,n)=>{let a=Ao.runKernel($r,y,b);return n([t,e,a]),C&&(a=Ll(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:g}}));return e(G,p)}{const e=ec(((e,t,n,a)=>{let r=Ao.runKernel($r,y,b);return a([t,e,r,n]),C&&(r=Ll(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}}));return e(G,p,f)}}});const bp=No({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=Ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return Ao.runKernel(Fn,l,u)}});const xp=No({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:e},h=Ao.runKernel(Dn,l,u);return c?Ll(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const vp=No({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(!1===gp(Ao.state.gradientDepth,l)){let e=gu(t,n,a,r,s,o,i);return null!=c&&(e=Ki(e,c)),mp(e,l,u,h)}const d=wo(t,"x","depthwiseConv2d","float32"),p=wo(n,"filter","depthwiseConv2d","float32");let G=d,C=!1;3===d.rank&&(C=!0,G=Ll(d,[1,d.shape[0],d.shape[1],d.shape[2]])),rt(4===G.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(G.rank,"."))),rt(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),rt(G.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(G.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),rt(Fl(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),Ml("fused depthwiseConv2d",r,i);const A=wl(G.shape,p.shape,a,o,r,i,!0);let T,f;null!=c&&(T=wo(c,"bias","fused conv2d"),[T]=io(T,d),Tc(A.outShape,T.shape)),null!=u&&(f=wo(u,"prelu weights","fused depthwiseConv2d"));const m=(e,t)=>{rt(_l(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,c,u]=t,h=Tp(e,c,l),d=xp(s.shape,h,n,a,r,o,i),p=bp(s,h,n.shape,a,r,o,i);if(null!=u){return[d,p,fp(T,h)]}return[d,p]},g={x:G,filter:p,bias:T,preluActivationWeights:f},y={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=ec(((e,t,n)=>{let a=Ao.runKernel(es,g,y);return n([t,e,a]),C&&(a=Ll(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:m}}));return e(G,p)}{const e=ec(((e,t,n,a)=>{let r=Ao.runKernel(es,g,y);return a([t,e,r,n]),C&&(r=Ll(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:m}}));return e(G,p,T)}}});const wp=No({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===gp(Ao.state.gradientDepth,o)){let e=Bl(t,n,a,r);return null!=s&&(e=Ki(e,s)),mp(e,o,i,c)}let l=wo(t,"a","fused matMul"),u=wo(n,"b","fused matMul");[l,u]=io(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],G=r?u.shape[u.rank-2]:u.shape[u.rank-1],C=l.shape.slice(0,-2),A=u.shape.slice(0,-2),T=it(C),f=it(A);rt(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const m=Tc(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,G]),g=Ll(l,a?[T,h,p]:[T,p,h]),y=Ll(u,r?[f,G,d]:[f,d,G]);let b,x;null!=s&&(b=wo(s,"bias","fused matMul"),[b]=io(b,l),Tc(m,b.shape)),null!=i&&(x=wo(i,"prelu weights","fused matMul"));const v=(e,t)=>{const[n,i,c,l]=t,u=Tp(Ll(e,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=Bl(u,i,!1,!1),d=Bl(u,n,!0,!1)):a&&!r?(h=Bl(i,u,!1,!0),d=Bl(n,u,!1,!1)):(h=Bl(i,u,!0,!0),d=Bl(u,n,!0,!0)):(h=Bl(u,i,!1,!0),d=Bl(n,u,!0,!1)),null!=s){return[h,d,fp(l,u)]}return[h,d]},w={a:g,b:y,bias:b,preluActivationWeights:x},k={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const e=ec(((e,t,n)=>{const a=Ao.runKernel(Zr,w,k);return n([e,t,a]),{value:Ll(a,m),gradFunc:v}}));return e(g,y)}{const e=ec(((e,t,n,a)=>{const r=Ao.runKernel(Zr,w,k);return a([e,t,r,n]),{value:Ll(r,m),gradFunc:v}}));return e(g,y,b)}}});const kp=No({hammingWindow_:function(e){return Gp(e,.54,.46)}});const Ip=No({hannWindow_:function(e){return Gp(e,.5,.5)}});const Np=No({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(Ul(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=Vl([Ul(e,s,t-a),lc([a],r)]);o.push(i),s+=n}return 0===o.length?Ud([],[0,t]):Ll(Vl(o),[o.length,t])}});const Sp=No({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ip;null==a&&(a=pp(t));const s=Np(e,t,n),o=Qi(s,r(t));return Od(o,a)}});const Ep=No({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=wo(e,"image","cropAndResize"),i=wo(t,"boxes","cropAndResize","float32"),c=wo(n,"boxInd","cropAndResize","int32"),l=i.shape[0];rt(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),rt(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),rt(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),rt(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),rt(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),rt("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return Ao.runKernel(Sn,u,h)}});const Rp=No({flipLeftRight_:function(e){const t=wo(e,"image","flipLeftRight","float32");rt(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Ao.runKernel(Jn,n,{})}});const _p=No({grayscaleToRGB_:function(e){const t=wo(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];rt(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),rt(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Xu(t,r)}});const Fp=No({rgbToGrayscale_:function(e){const t=wo(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];rt(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),rt(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=Hi(t,"float32"),o=Wd([.2989,.587,.114]);let i;switch(t.rank){case 2:i=Iu("ij,j->i",s,o);break;case 3:i=Iu("ijk,k->ij",s,o);break;case 4:i=Iu("ijkl,l->ijk",s,o);break;case 5:i=Iu("ijklm,m->ijkl",s,o);break;case 6:i=Iu("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=qu(i,-1),Hi(i,r)}});const Dp=No({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=wo(e,"image","rotateWithOffset","float32");rt(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return Ao.runKernel(Jr,s,o)}});function Op(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),rt(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),rt(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),rt(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),rt(1===t.rank,(()=>"scores must be a 1D tensor")),rt(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),rt(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Mp=No({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=wo(e,"boxes","nonMaxSuppression","float32"),o=wo(t,"scores","nonMaxSuppression","float32"),i=Op(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Ao.runKernel(za,{boxes:s,scores:o},c)}});function Lp(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||zp)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function zp(e,t){return e>t?1:e<t?-1:0}function Pp(e,t,n,a,r){return Wp(e,t,n,a,r,0)}function Vp(e,t,n,a,r,s){return Wp(e,t,n,a,r,0,!1,s,!0)}function Bp(e,t,n,a,r,s){return Wp(e,t,n,a,r,s,!0)}function Wp(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let A=0;A<t.length;A++)t[A]>r&&l.push({score:t[A],boxIndex:A,suppressBeginIndex:0});l.sort(jp);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Up(e,s,h[c]);if(n>=a){i=!0;break}if(t.score=t.score*Hp(a,u,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&Lp(l,t,jp))}const p=h.length,G=n-p;i&&G>0&&(h.push(...new Array(G).fill(0)),d.push(...new Array(G).fill(0)));const C={selectedIndices:h};return o&&(C.selectedScores=d),c&&(C.validOutputs=p),C}function Up(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),G=(h-l)*(d-u);if(p<=0||G<=0)return 0;const C=Math.max(s,l),A=Math.max(o,u),T=Math.min(i,h),f=Math.min(c,d),m=Math.max(T-C,0)*Math.max(f-A,0);return m/(p+G-m)}function Hp(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function jp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const qp=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=wo(e,"boxes","nonMaxSuppressionAsync"),o=wo(t,"scores","nonMaxSuppressionAsync"),i=Op(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Pp(l,u,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Wd(h,"int32")};const Kp=No({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=wo(e,"boxes","nonMaxSuppression"),i=wo(t,"scores","nonMaxSuppression"),c=Op(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=Ao.runKernel(Va,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const Xp=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=wo(e,"boxes","nonMaxSuppressionAsync"),i=wo(t,"scores","nonMaxSuppressionAsync"),c=Op(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Bp(u,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Wd(d,"int32"),selectedScores:Wd(p)}};const Yp=No({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=wo(e,"boxes","nonMaxSuppression"),i=wo(t,"scores","nonMaxSuppression"),c=Op(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=Ao.runKernel(Pa,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const Qp=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=wo(e,"boxes","nonMaxSuppressionAsync"),i=wo(t,"scores","nonMaxSuppressionAsync"),c=Op(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:G,validOutputs:C}=Vp(d,p,l,u,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Wd(G,"int32"),validOutputs:tc(C,"int32")}};const Jp=No({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=wo(e,"images","resizeBilinear");rt(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),rt(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),rt(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=Ll(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=Ao.runKernel(rr,i,c);return o?Ll(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Zp=No({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=wo(e,"images","resizeNearestNeighbor");rt(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),rt(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),rt("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),rt(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=Ll(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:t},l=Ao.runKernel(nr,i,c);return o?Ll(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const $p=No({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=wo(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,c,l,u=Qi(Wd([a]),255);if(rt(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),rt(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),rt("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),rt("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,i,c]=Dd(r,[1,1,1],-1);const e=Qi(o,.2989),t=Qi(i,.587),n=Qi(c,.114);l=Ki(Ki(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,a,r,s,o,i,c=Wd([-1]),l=Wd([0]),u=Wd([0]);for(let h=0;h<e.size-1;h++){n=Ul(e,0,h+1),a=Ul(e,h+1),o=Yi(Bu(n),t),i=Yi(Bu(a),t);const d=Bu(Qi(n,cd(0,n.size)));r=Yi(d,Bu(n));const p=lc(a.shape,n.size),G=Ki(cd(0,a.size),p),C=Qi(a,G);s=Yi(Bu(C),Bu(a));const A=dc(r,s),T=dc(r,s),f=Qi(o,i);u=Qi(Qi(f,A),T);const m=Zu(u,l);l=vu(m,u,l),c=vu(m,Wd([h]),c)}return c}(Jl(Hi(fd(l),"int32"),Ro([]),256),s)}const h=n?oh(l,u):Zu(l,u);return Hi(Qi(h,255),"int32")}});const eG=No({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=wo(e,"image","transform","float32"),i=wo(t,"transforms","transform","float32");rt(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),rt(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),rt(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Ao.runKernel(Ur,c,l)}});const tG=No({bandPart_:function(e,t,n){const a=wo(e,"a","bandPart");rt(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?(rt(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),rt(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=wo(t<0?s:t,"numLower","bandPart")):(rt("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=vu(sh(t,0),s,Eh(t,s))),"number"===typeof n?(rt(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),rt(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=wo(n<0?o:n,"numUpper","bandPart")):(rt("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=vu(sh(n,0),o,Eh(n,o)));const l=Ll(cd(0,s,1,"int32"),[-1,1]),u=cd(0,o,1,"int32"),h=dc(l,u),d=Ah(oh(h,i),$u(h,hh(c))),p=Ih([s,o],a.dtype);return Ll(zd(tp(Ll(a,[-1,s,o])).map((e=>vu(d,e,p)))),r)}});const nG=No({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,rt(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)rt(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=Dd(e,e.shape[0],0).map((e=>Ld(e,[0])));rt(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Ao.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=Qi(Bu(Qi(n[t],e)),n[t]);e=dc(e,a)}return Yi(e,Uu(e,"euclidean"))})));return t?zd(n,0):n}});function aG(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Ao.tidy((()=>{rt(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Yu(n),s=ji(e);const o=Ud([[1]],[1,1]);let i=ji(o);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=s,c=i,l=r;[i,s,r]=Ao.tidy((()=>{const t=Ul(s,[e,e],[n-e,1]),c=Uu(t),l=Ul(s,[e,e],[1,1]),u=vu(Zu(l,0),Ud([[-1]]),Ud([[1]])),h=dc(l,Qi(u,c)),d=Yi(t,h);i=1===d.shape[0]?ji(o):Vl([o,Ul(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=hh(Yi(Bl(u,h),c)),G=Ul(s,[e,0],[n-e,a]),C=Qi(p,i),A=ip(i);if(0===e)s=dc(G,Bl(C,Bl(A,G)));else{const t=dc(G,Bl(C,Bl(A,G)));s=Vl([Ul(s,[0,0],[e,a]),t],0)}const T=ip(C),f=Ul(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=dc(f,Bl(Bl(f,i),T));else{const t=dc(f,Bl(Bl(f,i),T));r=Vl([Ul(r,[0,0],[n,e]),t],1)}return[i,s,r]})),Lo([t,c,l])}return!t&&n>a&&(r=Ul(r,[0,0],[n,a]),s=Ul(s,[0,0],[a,a])),[r,s]}))}const rG=No({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(rt(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return aG(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=tp(Ll(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=aG(e,t);r.push(n),s.push(a)}));return[Ll(zd(r,0),e.shape),Ll(zd(s,0),e.shape)]}}});var sG;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(sG||(sG={}));const oG=No({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:sG.SUM_BY_NONZERO_WEIGHTS;const a=wo(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=wo(t,"weights","computeWeightedLoss"));const s=null==r?a:Qi(a,r);if(n===sG.NONE)return s;if(n===sG.SUM)return Bu(s);if(n===sG.MEAN){if(null==r)return kh(s);{const e=a.size/r.size,t=Yi(Bu(s),Bu(r));return e>1?Yi(t,tc(e)):t}}if(n===sG.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Yi(Bu(s),tc(a.size));{const e=Qi(r,Nh(a.shape)),t=Hi(Bu(Mh(e,tc(0))),"float32");return Yi(Bu(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const iG=No({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:sG.SUM_BY_NONZERO_WEIGHTS;const r=wo(e,"labels","absoluteDifference"),s=wo(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=wo(n,"weights","absoluteDifference")),st(r.shape,s.shape,"Error in absoluteDifference: ");const i=Gc(dc(r,s));return oG(i,o,a)}});const cG=No({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:sG.SUM_BY_NONZERO_WEIGHTS;const s=wo(e,"labels","cosineDistance"),o=wo(t,"predictions","cosineDistance");let i=null;null!=a&&(i=wo(a,"weights","cosineDistance")),st(s.shape,o.shape,"Error in cosineDistance: ");const c=tc(1),l=dc(c,Bu(Qi(s,o),n,!0));return oG(l,i,r)}});const lG=No({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:sG.SUM_BY_NONZERO_WEIGHTS,r=wo(e,"labels","hingeLoss");const s=wo(t,"predictions","hingeLoss");let o=null;null!=n&&(o=wo(n,"weights","hingeLoss")),st(r.shape,s.shape,"Error in hingeLoss: ");const i=tc(1);r=dc(Qi(tc(2),r),i);const c=hd(dc(i,Qi(r,s)));return oG(c,o,a)}});const uG=No({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:sG.SUM_BY_NONZERO_WEIGHTS;const s=wo(e,"labels","huberLoss"),o=wo(t,"predictions","huberLoss");let i=null;null!=n&&(i=wo(n,"weights","huberLoss")),st(s.shape,o.shape,"Error in huberLoss: ");const c=tc(a),l=Gc(dc(o,s)),u=Eh(l,c),h=dc(l,u),d=Ki(Qi(tc(.5),Zi(u)),Qi(c,h));return oG(d,i,r)}});const hG=No({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:sG.SUM_BY_NONZERO_WEIGHTS;const s=wo(e,"labels","logLoss"),o=wo(t,"predictions","logLoss");let i=null;null!=n&&(i=wo(n,"weights","logLoss")),st(s.shape,o.shape,"Error in logLoss: ");const c=tc(1),l=tc(a),u=hh(Qi(s,lh(Ki(o,l)))),h=Qi(dc(c,s),lh(Ki(dc(c,o),l))),d=dc(u,h);return oG(d,i,r)}});const dG=No({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:sG.SUM_BY_NONZERO_WEIGHTS;const r=wo(e,"labels","meanSquaredError"),s=wo(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=wo(n,"weights","meanSquaredError")),st(r.shape,s.shape,"Error in meanSquaredError: ");const i=Md(r,s);return oG(i,o,a)}});const pG=No({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:sG.SUM_BY_NONZERO_WEIGHTS,s=wo(e,"multiClassLabels","sigmoidCrossEntropy");const o=wo(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=wo(n,"weights","sigmoidCrossEntropy")),st(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=tc(a),t=tc(1),n=tc(.5);s=Ki(Qi(s,dc(t,e)),Qi(n,e))}const c=function(e,t){const n=wo(e,"labels","sigmoidCrossEntropyWithLogits"),a=wo(t,"logits","sigmoidCrossEntropyWithLogits");st(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=hd(a),s=Qi(a,n),o=uh(ju(hh(Gc(a))));return Ki(dc(r,s),o)}(s,o);return oG(c,i,r)}});const GG=No({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:sG.SUM_BY_NONZERO_WEIGHTS,s=wo(e,"onehotLabels","softmaxCrossEntropy");const o=wo(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=wo(n,"weights","softmaxCrossEntropy")),st(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=tc(a),t=tc(1),n=tc(s.shape[1]);s=Ki(Qi(s,dc(t,e)),Yi(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=ec(((e,t,a)=>{const r=Ch(t,[n],!0),s=dc(Hi(t,"float32"),r);a([e,s]);const o=hh(Qi(s,e));return{value:Bu(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=Du(e.shape,[n]);return[Qi(Ll(e,s),dc(Hi(a,"float32"),ju(r))),Qi(Ll(e,s),dc(ju(r),Hi(a,"float32")))]}}}));return a(e,t)}(s,o);return oG(c,i,r)}});const CG=No({sparseFillEmptyRows_:function(e,t,n,a){const r=wo(e,"indices","sparseFillEmptyRows","int32"),s=wo(t,"values","sparseFillEmptyRows"),o=wo(n,"denseShape","sparseFillEmptyRows","int32"),i=wo(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:r,values:s,denseShape:o,defaultValue:i},l=Ao.runKernel(kr,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const AG=No({sparseReshape_:function(e,t,n){const a=wo(e,"inputIndices","sparseReshape","int32"),r=wo(t,"inputShape","sparseReshape","int32"),s=wo(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=Ao.runKernel(Ir,o);return{outputIndices:i[0],outputShape:i[1]}}});const TG=No({sparseSegmentMean_:function(e,t,n){const a=wo(e,"data","sparseSegmentMean"),r=wo(t,"indices","sparseSegmentMean","int32"),s=wo(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Ao.runKernel(Nr,o)}});const fG=No({sparseSegmentSum_:function(e,t,n){const a=wo(e,"data","sparseSegmentSum"),r=wo(t,"indices","sparseSegmentSum","int32"),s=wo(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Ao.runKernel(Sr,o)}});const mG=No({stringNGrams_:function(e,t,n,a,r,s,o,i){const c=wo(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const l=wo(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},h={data:c,dataSplits:l},d=Ao.runKernel(Or,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}});const gG=No({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=wo(e,"input","stringSplit","string"),r=wo(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=Ao.runKernel(Mr,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const yG=No({stringToHashBucketFast_:function(e,t){const n=wo(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Ao.runKernel(Lr,r,a)}});const bG=No({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=wo(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return Ao.runKernel(Fr,{x:r},s)}}),xG={fft:Rd,ifft:_d,rfft:Od,irfft:Fd},vG={hammingWindow:kp,hannWindow:Ip,frame:Np,stft:Sp},wG={flipLeftRight:Rp,grayscaleToRGB:_p,resizeNearestNeighbor:Zp,resizeBilinear:Jp,rgbToGrayscale:Fp,rotateWithOffset:Dp,cropAndResize:Ep,nonMaxSuppression:Mp,nonMaxSuppressionAsync:qp,nonMaxSuppressionWithScore:Kp,nonMaxSuppressionWithScoreAsync:Xp,nonMaxSuppressionPadded:Yp,nonMaxSuppressionPaddedAsync:Qp,threshold:$p,transform:eG},kG={bandPart:tG,gramSchmidt:nG,qr:rG},IG={absoluteDifference:iG,computeWeightedLoss:oG,cosineDistance:cG,hingeLoss:lG,huberLoss:uG,logLoss:hG,meanSquaredError:dG,sigmoidCrossEntropy:pG,softmaxCrossEntropy:GG},NG={sparseFillEmptyRows:CG,sparseReshape:AG,sparseSegmentMean:TG,sparseSegmentSum:fG},SG={stringNGrams:mG,stringSplit:gG,stringToHashBucketFast:yG,staticRegexReplace:bG};const EG=class{static sgd(e){return new gc(e)}static momentum(e,t){return new yc(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new bc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new pc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new cc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new mc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new uc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},RG="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function _G(){return new Promise((e=>RG((()=>e()))))}function FG(e,t){const n=e[0].length;e.forEach(((e,t)=>{rt(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),rt(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)rt(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function DG(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var OG;function MG(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function LG(e){const t={FIRST_DIM_SIZE:OG.FIRST_DIM_SIZE,VALUE_ROWIDS:OG.VALUE_ROWIDS,ROW_LENGTHS:OG.ROW_LENGTHS,ROW_SPLITS:OG.ROW_SPLITS,ROW_LIMITS:OG.ROW_LIMITS,ROW_STARTS:OG.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function zG(e){return 0===e.length?0:e[0]===OG.FIRST_DIM_SIZE?e.length-1:e.length}function PG(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(OG||(OG={}));const VG=30;function BG(e){return e<=VG?e:vt(e,Math.floor(Math.sqrt(e)))}function WG(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function UG(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function HG(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function jG(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function qG(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function KG(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function XG(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===it(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=e.shape,c=r.slice();c.pop();let l=1;for(let h=s;h<n;++h)l*=i[h],c.push(i[h]);const u=[...wt(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}const YG=1.7580993408473768,QG=1.0507009873554805,JG=.3275911,ZG=.254829592,$G=-.284496736,eC=1.421413741,tC=-1.453152027,nC=1.061405429;function aC(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function rC(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function sC(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function oC(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function iC(e,t){return{real:e[2*t],imag:e[2*t+1]}}function cC(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function lC(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function uC(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const hC="->",dC=/->/g,pC=",",GC="...";function CC(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(dC,"").length)/hC.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(hC,'").'));const[a,r]=e.split(hC);rt(-1===a.indexOf(GC),(()=>'The ellipsis notation ("'.concat(GC,'") is not supported yet.')));const s=a.split(pC),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==pC&&i.push(e)}const c=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let e=0;e<s[h].length;++e)c[h].push(i.indexOf(s[h][e]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function AC(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function TC(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:rt(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function fC(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=gC(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function mC(e){return e.every(((e,t)=>e===t))}function gC(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function yC(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)rt(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);rt(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}rt(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function bC(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function xC(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function vC(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function wC(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function kC(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function IC(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function NC(e,t){const n=it(e),a=it(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function SC(e,t){const n=it(e),a=it(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function EC(){return"segment ids must be >= 0"}function RC(){return"segment ids are not increasing"}function _C(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function FC(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function DC(e,t){let n,a=!1;for(e<=VG?(n=e,a=!0):n=vt(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=vt(e,n+1);return n}function OC(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function MC(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),l*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<s;h++)i.push(e.shape[h]),u*=e.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function LC(e){try{return e.map((e=>Es(e)))}catch(MB){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(MB))}}function zC(e){return e.map((e=>Ss(e)))}!function(){for(const e of xc)oc(e)}();const PC={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,Pd(Hi(n,"float32"),-1))}}},VC={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Zi(Hi(n,"float32")),a=Ji(dc(tc(1),t));return hh(Yi(e,a))}}}},BC={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ji(dc(Zi(Hi(n,"float32")),1));return Yi(e,t)}}}},WC={kernelName:qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{let t=e;const a=Ac(n.shape,r);return a.length>0&&(t=Bu(t,a)),Ll(t,n.shape)},b:()=>{let t=e;const n=Ac(a.shape,r);return n.length>0&&(t=Bu(t,n)),Ll(t,a.shape)}}}},UC={kernelName:Kt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},HC={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(n)}}},jC={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(n)}}},qC={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Ji(dc(tc(1),Zi(Hi(n,"float32")))))}}},KC={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ji(Ki(tc(1),Zi(Hi(n,"float32"))));return Yi(e,t)}}}},XC={kernelName:nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{const t=Ki(Zi(n),Zi(a));let s=Qi(e,Yi(a,t));const o=Ac(n.shape,r);return o.length>0&&(s=Bu(s,o)),Ll(s,n.shape)},b:()=>{const t=Ki(Zi(n),Zi(a));let s=hh(Qi(e,Yi(n,t)));const o=Ac(a.shape,r);return o.length>0&&(s=Bu(s,o)),Ll(s,a.shape)}}}},YC={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Ki(Zi(Hi(n,"float32")),1))}}},QC={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,dc(tc(1),Zi(Hi(n,"float32"))))}}};const JC=No({avgPool3dGrad_:function(e,t,n,a,r,s){const o=wo(e,"dy","avgPool3dGrad"),i=wo(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),rt(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),rt(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),Ml("avgPool3dGrad",r,s);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Ao.runKernel(on,h,d);return u?Ll(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ZC={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>JC(e,a,r,s,o,i)}}};const $C=No({avgPoolGrad_:function(e,t,n,a,r){const s=wo(e,"dy","avgPoolGrad"),o=wo(t,"input","avgPoolGrad");rt(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=Ll(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=Ll(s,[1,s.shape[0],s.shape[1],s.shape[2]])),rt(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),rt(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=Ao.runKernel(rn,u,h);return l?Ll(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),eA={kernelName:an,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>$C(e,a,r,s,o)}}},tA={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Bl(e,r,!1,!1),b:()=>Bl(e,a,!0,!1)}:s&&!o?{a:()=>Bl(r,e,!1,!0),b:()=>Bl(a,e,!1,!1)}:{a:()=>Bl(r,e,!0,!0),b:()=>Bl(e,a,!0,!0)}:{a:()=>Bl(e,r,!1,!0),b:()=>Bl(a,e,!0,!1)}}},nA={kernelName:ln,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>jh(e,a,r)}}},aA={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>Bu(e,i,!0)}}},rA={kernelName:pn,gradFunc:e=>({x:()=>e.clone()})},sA={kernelName:Gn,gradFunc:e=>({x:()=>$i(e)})},oA={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>vu(Ah($u(a,r),oh(a,s)),e,$i(e))}}},iA={kernelName:Tn,inputsToSave:["x"],gradFunc:PC.gradFunc},cA={kernelName:fn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=Gt(r,t[0].shape)[0],o=a.map((e=>e[s]));return Dd(e,o,s).map((e=>()=>e))}},lA={kernelName:mn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return rt(_l(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>lu(a.shape,e,r,o,i,c),filter:()=>Ap(a,e,r.shape,o,i,c)}}},uA={kernelName:yn,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>iu(e,r,s,o,i,1,c),filter:()=>Ap(e,a,r.shape,s,o,i,c)}}};const hA=No({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=Ll(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=Ll(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),rt(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),rt(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),rt(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),rt(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),rt(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return Ao.runKernel(xn,i,c)}}),dA={kernelName:bn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;rt(_l(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>du(o.shape,e,i,r,s),filter:()=>hA(o,e,i.shape,r,s)}}},pA={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(hh(vd(Hi(n,"float32"))),e)}}},GA={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(wd(Hi(n,"float32")),e)}}},CA={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=Mu([r],a.rank);let n=Tu(e,r,s,!o);return null!=t&&(n=ip(n,t)),n}}}},AA={kernelName:_n,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;rt(_l(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return rt(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),rt(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),rt(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),rt(Fl(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),Ml("depthwiseConv2d",s,o),{x:()=>xp(c.shape,e,l,r,s,i,o),filter:()=>bp(c,e,l.shape,r,s,i,o)}}},TA={kernelName:Mn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>Ao.runKernel(Ln,s,n),filter:()=>Ao.runKernel(zn,o,n)}}},fA={kernelName:Wn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Ao.runKernel(Un,a)}}},mA={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Qi(ju(hh(Zi(n))),2/Math.sqrt(Math.PI));return{x:()=>Qi(e,a)}}},gA={kernelName:qn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,n)}}},yA={kernelName:Kn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ll(e,n.shape)}}},bA={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,ju(n))}}},xA={kernelName:Zn,gradFunc:e=>({x:()=>$i(e)})},vA={kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{const t=Yi(e,Hi(a,"float32")),s=Ac(n.shape,r);return s.length>0?Ll(Bu(t,s),n.shape):t},b:()=>{let t=Qi(e,Hi(n,"float32"));const s=Ac(a.shape,r);s.length>0&&(t=Ll(Bu(t,s),a.shape));const o=Zi(a);return hh(Yi(t,Hi(o,"float32")))}}}},wA={kernelName:ea,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?tc(1):i,l=Ac(s.shape,r.shape),u=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const h=dc(r,s),d=Qi(e,c),p=md(Ki(o,tc(a))),G=Qi(Qi(Qi(p,p),p),tc(-.5));return{x:()=>1===s.rank?Ll(Qi(Qi(e,Xu(Ll(p,[1,1,1,s.shape[0]]),u)),c),r.shape):Ll(Qi(Qi(e,p),c),r.shape),mean:()=>{let e=Qi(Qi(p,tc(-1)),d);return 1===s.rank&&(e=Bu(e,l)),Ll(e,s.shape)},variance:()=>{let e=Qi(Qi(G,h),d);return 1===s.rank&&(e=Bu(e,l)),Ll(e,s.shape)},scale:()=>{const t=Qi(h,p);let n=Qi(e,t);return 1===s.rank&&(n=Bu(n,l)),Ll(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Bu(t,l)),Ll(t,s.shape)}}}},kA={kernelName:ta,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=Gt(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,h=IA(0,c),d=IA(c+1,c+1+u),p=NA([o,[r],l]),G=Ll(n,p),C=Ll(t,[r]),A=NA([[c],h,d]),T=ip(G,A);let f=ep(T,C,e.shape[i]);const m=Lu(A);return f=ip(f,m),f};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=zd(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function IA(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function NA(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const SA={kernelName:ra,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>$i(n),b:()=>$i(a)}}},EA={kernelName:sa,gradFunc:e=>({x:()=>Hi(e,"float32")})},RA={kernelName:ca,gradFunc:e=>({x:()=>$i(e)})},_A={kernelName:la,gradFunc:e=>({x:()=>$i(e)})},FA={kernelName:ua,gradFunc:e=>({x:()=>$i(e)})},DA={kernelName:ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=Zu(a,0);return{x:()=>vu(s,e,Qi(e,r))}}},OA={kernelName:Aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Ki(n,1))}}},MA={kernelName:Ca,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Hi(n,"float32"))}}},LA={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=ju(a);return dc(e,Qi(Bu(e,r,!0),t))}}}};const zA=No({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Ao.runKernel(ya,a,r)}}),PA={kernelName:ga,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>zA(a,r,e,s,o,i,c)}}};function VA(e,t,n,a){return t.rank<n.rank&&(t=Ll(t,Du(t.shape,a))),e.rank<n.rank&&(e=Ll(e,Du(e.shape,a))),{x:()=>Qi(e,Hi(xu(n,t),e.dtype))}}const BA={kernelName:ba,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=VA(e,t[1],s,Gt(r,s.shape));return{x:()=>o.x()}}},WA={kernelName:xa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Qi(e,Hi($u(n,a),"float32")),b:()=>Qi(e,Hi(sh(n,a),"float32"))}}};const UA=No({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=wo(e,"dy","maxPool3dGrad"),c=wo(t,"input","maxPool3dGrad"),l=wo(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=Ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=Ll(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=Ll(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),rt(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),rt(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),rt(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),Ml("maxPool3dGrad",s,o);const G={dy:u,input:h,output:d},C={filterSize:a,strides:r,pad:s,dimRoundingMode:o},A=Ao.runKernel(Ia,G,C);return p?Ll(A,[A.shape[1],A.shape[2],A.shape[3],A.shape[4]]):A}}),HA={kernelName:ka,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>UA(e,a,r,s,o,i,c)}}};const jA=No({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=wo(e,"dy","maxPoolGrad"),c=wo(t,"input","maxPoolGrad"),l=wo(n,"output","maxPoolGrad");rt(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),rt(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),rt(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),Ml("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Ao.runKernel(wa,u,h)}}),qA={kernelName:va,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>jA(e,a,r,s,o,i)}}},KA={kernelName:_a,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Ul(e,s,a.shape)}}},XA={kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Ul(e,s,a.shape)}}},YA={kernelName:ja,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=Tc(s.shape,o.shape);return{a:()=>{const t=Hi(o,"float32");let n=Qi(e,Qi(t,hc(s,dc(t,tc(1)))));const a=Ac(s.shape,i);return a.length>0&&(n=Bu(n,a)),Ll(n,s.shape)},b:()=>{const t=Zu(s,0),n=vu(t,lh(s),$i(s));let a=Qi(e,Qi(r,n));const c=Ac(o.shape,i);return c.length>0&&(a=Bu(a,c)),Ll(a,o.shape)}}}};function QA(e,t,n){const a=e.shape.length,r=a-n.length,s=Mu(n,a);let o=e;null!=s&&(o=ip(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=Ll(t,a),s=Au(e,n,!0,!1),o=Au(e,n,!0,!0),i=Qi(s,o);return Qi(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=Lu(s);l=ip(l,e)}return l}const JA={kernelName:Gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Zu(n,tc(0)),a=tc(YG),r=tc(QG),s=Qi(e,r),o=Qi(Qi(e,a),ju(Hi(n,"float32")));return vu(t,s,o)}}}},ZA={kernelName:xr,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>ql(e,a,r)}}},$A={kernelName:vr,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>Vl(e,a)}}};const eT=[PC,VC,BC,WC,UC,HC,jC,qC,KC,XC,YC,QC,ZC,eA,tA,nA,aA,rA,sA,oA,iA,cA,uA,lA,dA,pA,GA,CA,AA,TA,{kernelName:Vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{const t=Yi(e,Hi(a,"float32")),s=Ac(n.shape,r);return s.length>0?Ll(Bu(t,s),n.shape):t},b:()=>{let t=Qi(e,Hi(n,"float32"));const s=Ac(a.shape,r);s.length>0&&(t=Ll(Bu(t,s),a.shape));const o=Zi(a);return hh(Yi(t,Hi(o,"float32")))}}}},fA,mA,gA,yA,bA,vA,xA,wA,kA,SA,EA,RA,_A,FA,DA,OA,MA,LA,PA,BA,BA,WA,HA,qA,{kernelName:Sa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=Gt(r,a.shape),o=it(Fu(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=Ll(e,t);return Yi(Qi(n,Nh(a.shape,"float32")),o)}}}},{kernelName:Ea,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=VA(e,o,s,Gt(r,s.shape));return{x:()=>i.x()}}},{kernelName:Ra,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Qi(e,Hi(oh(n,a),"float32")),b:()=>Qi(e,Hi(Zu(n,a),"float32"))}}},KA,{kernelName:Fa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{const t=Ac(n.shape,r);return t.length>0?Ll(Bu(e,t),n.shape):e},b:()=>{const t=Qi(e,hh(Qu(Yi(n,a)))),s=Ac(a.shape,r);return s.length>0?Ll(Bu(t,s),a.shape):t}}}},{kernelName:Oa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{const t=Qi(e,Hi(a,"float32")),s=Ac(n.shape,r);return s.length>0?Ll(Bu(t,s),n.shape):t},b:()=>{const t=Qi(e,Hi(n,"float32")),s=Ac(a.shape,r);return s.length>0?Ll(Bu(t,s),a.shape):t}}}},{kernelName:Ma,gradFunc:e=>({x:()=>hh(e)})},{kernelName:Wa,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ih(n.shape,"float32")}}},{kernelName:Ba,gradFunc:e=>({x:()=>$i(e)})},{kernelName:Ua,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return tp(e,a).map((e=>()=>e))}},XA,XA,YA,{kernelName:qa,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=Zu(n,0);return{x:()=>vu(r,e,Qi(e,a)),alpha:()=>{let t=vu(r,$i(e),Qi(e,n));const s=Ac(a.shape,e.shape);return s.length>0&&(t=Bu(t,s)),Ll(t,a.shape)}}}},{kernelName:Ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>QA(a,e,s)}}},{kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,hh(Zi(n)))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Qi(oh(n,6),Pd(n));return{x:()=>Qi(e,Hi(a,"float32"))}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,Hi(Pd(n),"float32"))}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ll(e,n.shape)}}},{kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Ao.runKernel(sr,r,n)}}},{kernelName:nr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Ao.runKernel(ar,r,n)}}},{kernelName:ir,gradFunc:(e,t,n)=>{const{dims:a}=n,r=Gt(a,e.shape);return{x:()=>pd(e,r)}}},{kernelName:cr,gradFunc:e=>({x:()=>$i(e)})},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hh(Yi(e,Qi(hc(n,1.5),2)))}}},{kernelName:pr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Hi($i(n),"float32"),t:()=>Qi(e,Hi(n,e.dtype)),e:()=>Qi(e,Hi(Th(n),e.dtype))}}},JA,{kernelName:mr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,Qi(n,dc(tc(1),n)))}}},{kernelName:fr,gradFunc:e=>({x:()=>$i(e)})},{kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(Gu(Hi(n,"float32")),e)}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(Cu(Hi(n,"float32")),e)}}},{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=il(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>Vh(e,l)}}},{kernelName:wr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=Qi(e,a);return{logits:()=>dc(s,Qi(Bu(s,[r],true),a))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,Wl(n))}}},ZA,ZA,$A,$A,{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Qi(Ji(Hi(n,"float32")),2))}}},{kernelName:Rr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=tc(2);return{a:()=>Qi(e,Qi(r,dc(n,a))),b:()=>Qi(e,Qi(r,dc(a,n)))}}},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,Qi(Hi(n,"float32"),2))}}},{kernelName:Yr,gradFunc:e=>({x:()=>$i(e)})},{kernelName:zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Tc(n.shape,a.shape);return{a:()=>{let t=e;const a=Ac(n.shape,r);return a.length>0&&(t=Bu(t,a)),Ll(t,n.shape)},b:()=>{let t=e;const n=Ac(a.shape,r);return n.length>0&&(t=Bu(t,n)),Ll(hh(t),a.shape)}}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;Gt(s,a.shape).forEach((e=>{r[e]=1}));const o=Ll(e,r),i=Qi(o,Nh(a.shape,"float32"));return{x:()=>i}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yi(e,Zi(Gu(n)))}}},{kernelName:Vr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(dc(tc(1),Zi(n)),e)}}},{kernelName:Br,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=$i(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Ki(t,Ul(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Ki(t,Ul(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=Ki(t,Ul(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=Ki(t,Ul(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Hr,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=Lu(r);return{x:()=>ip(e,s)}}},{kernelName:qr,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>zd(e,r)}}},{kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=fc(t,$i(t)),a=Ju(e,n);let r=$u(t,tc(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=qu(r,i+1);r=Ah(r,Nh(a.shape,"bool"));const o=$i(a);return vu(r,a,o)}(e,n)}}},{kernelName:Xr,gradFunc:e=>({x:()=>$i(e)})}];for(const n of eT)ls(n);Ys().prototype.abs=function(){return this.throwIfDisposed(),Gc(this)},Ys().prototype.acos=function(){return this.throwIfDisposed(),ul(this)},Ys().prototype.acosh=function(){return this.throwIfDisposed(),hl(this)},Ys().prototype.add=function(e){return this.throwIfDisposed(),Ki(this,e)},Ys().prototype.all=function(e,t){return this.throwIfDisposed(),pl(this,e,t)},Ys().prototype.any=function(e,t){return this.throwIfDisposed(),Gl(this,e,t)},Ys().prototype.argMax=function(e){return this.throwIfDisposed(),Cl(this,e)},Ys().prototype.argMin=function(e){return this.throwIfDisposed(),Al(this,e)},Ys().prototype.asScalar=function(){return this.throwIfDisposed(),rt(1===this.size,(()=>"The array must have only 1 element.")),Ll(this,[])},Ys().prototype.asType=function(e){return this.throwIfDisposed(),Hi(this,e)},Ys().prototype.as1D=function(){return this.throwIfDisposed(),Ll(this,[this.size])},Ys().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ll(this,[e,t])},Ys().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ll(this,[e,t,n])},Ys().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),Ll(this,[e,t,n,a])},Ys().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),Ll(this,[e,t,n,a,r])},Ys().prototype.asin=function(){return this.throwIfDisposed(),Tl(this)},Ys().prototype.asinh=function(){return this.throwIfDisposed(),fl(this)},Ys().prototype.atan=function(){return this.throwIfDisposed(),ml(this)},Ys().prototype.atan2=function(e){return this.throwIfDisposed(),gl(this,e)},Ys().prototype.atanh=function(){return this.throwIfDisposed(),yl(this)},Ys().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),zl(this,e,t,n,a)},Ys().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ql(this,e,t)},Ys().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Kl(this,e,t,n,a,r)},Ys().prototype.broadcastTo=function(e){return this.throwIfDisposed(),eu(this,e)},Ys().prototype.cast=function(e){return this.throwIfDisposed(),Hi(this,e)},Ys().prototype.ceil=function(){return this.throwIfDisposed(),tu(this)},Ys().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),nu(this,e,t)},Ys().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Xs&&(e=[e]),Vl([this,...e],t)},Ys().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),cu(this,e,t,n,a,r,s)},Ys().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),uu(this,e,t,n,a,r)},Ys().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),iu(this,e,t,n,a,r,s)},Ys().prototype.cos=function(){return this.throwIfDisposed(),Gu(this)},Ys().prototype.cosh=function(){return this.throwIfDisposed(),Cu(this)},Ys().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Au(this,e,t,n)},Ys().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Tu(this,e,t,n)},Ys().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),mu(this,e,t)},Ys().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),gu(this,e,t,n,a,r,s)},Ys().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),bu(this,e,t,n,a,r)},Ys().prototype.divNoNan=function(e){return this.throwIfDisposed(),wu(this,e)},Ys().prototype.div=function(e){return this.throwIfDisposed(),Yi(this,e)},Ys().prototype.dot=function(e){return this.throwIfDisposed(),ku(this,e)},Ys().prototype.elu=function(){return this.throwIfDisposed(),Nu(this)},Ys().prototype.equal=function(e){return this.throwIfDisposed(),xu(this,e)},Ys().prototype.erf=function(){return this.throwIfDisposed(),Eu(this)},Ys().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Hu(this,e,t)},Ys().prototype.exp=function(){return this.throwIfDisposed(),ju(this)},Ys().prototype.expandDims=function(e){return this.throwIfDisposed(),qu(this,e)},Ys().prototype.expm1=function(){return this.throwIfDisposed(),Ku(this)},Ys().prototype.fft=function(){return this.throwIfDisposed(),Rd(this)},Ys().prototype.flatten=function(){return this.throwIfDisposed(),Ll(this,[this.size])},Ys().prototype.floor=function(){return this.throwIfDisposed(),Qu(this)},Ys().prototype.floorDiv=function(e){return this.throwIfDisposed(),Xi(this,e)},Ys().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Ju(this,e,t,n)},Ys().prototype.greaterEqual=function(e){return this.throwIfDisposed(),$u(this,e)},Ys().prototype.greater=function(e){return this.throwIfDisposed(),Zu(this,e)},Ys().prototype.ifft=function(){return this.throwIfDisposed(),_d(this)},Ys().prototype.irfft=function(){return this.throwIfDisposed(),Fd(this)},Ys().prototype.isFinite=function(){return this.throwIfDisposed(),th(this)},Ys().prototype.isInf=function(){return this.throwIfDisposed(),nh(this)},Ys().prototype.isNaN=function(){return this.throwIfDisposed(),ah(this)},Ys().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rh(this,e)},Ys().prototype.lessEqual=function(e){return this.throwIfDisposed(),oh(this,e)},Ys().prototype.less=function(e){return this.throwIfDisposed(),sh(this,e)},Ys().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),ch(this,e,t,n,a)},Ys().prototype.logSigmoid=function(){return this.throwIfDisposed(),ph(this)},Ys().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Gh(this,e)},Ys().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ch(this,e,t)},Ys().prototype.log=function(){return this.throwIfDisposed(),lh(this)},Ys().prototype.log1p=function(){return this.throwIfDisposed(),uh(this)},Ys().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ah(this,e)},Ys().prototype.logicalNot=function(){return this.throwIfDisposed(),Th(this)},Ys().prototype.logicalOr=function(e){return this.throwIfDisposed(),fh(this,e)},Ys().prototype.logicalXor=function(e){return this.throwIfDisposed(),mh(this,e)},Ys().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Bl(this,e,t,n)},Ys().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),xh(this,e,t,n,a)},Ys().prototype.max=function(e,t){return this.throwIfDisposed(),Pu(this,e,t)},Ys().prototype.maximum=function(e){return this.throwIfDisposed(),fc(this,e)},Ys().prototype.mean=function(e,t){return this.throwIfDisposed(),kh(this,e,t)},Ys().prototype.min=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Ys().prototype.minimum=function(e){return this.throwIfDisposed(),Eh(this,e)},Ys().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Rh(this,e,t)},Ys().prototype.mod=function(e){return this.throwIfDisposed(),_h(this,e)},Ys().prototype.mul=function(e){return this.throwIfDisposed(),Qi(this,e)},Ys().prototype.neg=function(){return this.throwIfDisposed(),hh(this)},Ys().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Uu(this,e,t,n)},Ys().prototype.notEqual=function(e){return this.throwIfDisposed(),Mh(this,e)},Ys().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Lh(this,e,t,n)},Ys().prototype.onesLike=function(){return this.throwIfDisposed(),zh(this)},Ys().prototype.pad=function(e,t){return this.throwIfDisposed(),Vh(this,e,t)},Ys().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),qh(this,e,t,n,a,r,s)},Ys().prototype.pow=function(e){return this.throwIfDisposed(),hc(this,e)},Ys().prototype.prelu=function(e){return this.throwIfDisposed(),Kh(this,e)},Ys().prototype.prod=function(e,t){return this.throwIfDisposed(),Xh(this,e,t)},Ys().prototype.reciprocal=function(){return this.throwIfDisposed(),ud(this)},Ys().prototype.relu=function(){return this.throwIfDisposed(),hd(this)},Ys().prototype.relu6=function(){return this.throwIfDisposed(),dd(this)},Ys().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ll(this,e.shape)},Ys().prototype.reshape=function(e){return this.throwIfDisposed(),Ll(this,e)},Ys().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Jp(this,e,t,n)},Ys().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Zp(this,e,t,n)},Ys().prototype.reverse=function(e){return this.throwIfDisposed(),pd(this,e)},Ys().prototype.rfft=function(){return this.throwIfDisposed(),Od(this)},Ys().prototype.round=function(){return this.throwIfDisposed(),fd(this)},Ys().prototype.rsqrt=function(){return this.throwIfDisposed(),md(this)},Ys().prototype.selu=function(){return this.throwIfDisposed(),gd(this)},Ys().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),yd(this,e,t,n,a,r,s)},Ys().prototype.sigmoid=function(){return this.throwIfDisposed(),Wl(this)},Ys().prototype.sign=function(){return this.throwIfDisposed(),xd(this)},Ys().prototype.sin=function(){return this.throwIfDisposed(),vd(this)},Ys().prototype.sinh=function(){return this.throwIfDisposed(),wd(this)},Ys().prototype.slice=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},Ys().prototype.softmax=function(e){return this.throwIfDisposed(),Ed(this,e)},Ys().prototype.softplus=function(){return this.throwIfDisposed(),dh(this)},Ys().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},Ys().prototype.split=function(e,t){return this.throwIfDisposed(),Dd(this,e,t)},Ys().prototype.sqrt=function(){return this.throwIfDisposed(),Ji(this)},Ys().prototype.square=function(){return this.throwIfDisposed(),Zi(this)},Ys().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Md(this,e)},Ys().prototype.squeeze=function(e){return this.throwIfDisposed(),Ld(this,e)},Ys().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Xs?[this,e]:[this,...e];return zd(n,t)},Ys().prototype.step=function(e){return this.throwIfDisposed(),Pd(this,e)},Ys().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),Vd(this,e,t,n,a,r,s,o,i)},Ys().prototype.sub=function(e){return this.throwIfDisposed(),dc(this,e)},Ys().prototype.sum=function(e,t){return this.throwIfDisposed(),Bu(this,e,t)},Ys().prototype.tan=function(){return this.throwIfDisposed(),Bd(this)},Ys().prototype.tanh=function(){return this.throwIfDisposed(),Hl(this)},Ys().prototype.tile=function(e){return this.throwIfDisposed(),Xu(this,e)},Ys().prototype.toBool=function(){return this.throwIfDisposed(),Hi(this,"bool")},Ys().prototype.toFloat=function(){return this.throwIfDisposed(),Hi(this,"float32")},Ys().prototype.toInt=function(){return this.throwIfDisposed(),Hi(this,"int32")},Ys().prototype.topk=function(e,t){return this.throwIfDisposed(),Jd(this,e,t)},Ys().prototype.transpose=function(e){return this.throwIfDisposed(),ip(this,e)},Ys().prototype.unique=function(e){return this.throwIfDisposed(),$d(this,e)},Ys().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ep(this,e,t)},Ys().prototype.unstack=function(e){return this.throwIfDisposed(),tp(this,e)},Ys().prototype.where=function(e,t){return this.throwIfDisposed(),vu(e,this,t)},Ys().prototype.zerosLike=function(){return this.throwIfDisposed(),$i(this)};class tT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tT.prototype)}}class nT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nT.prototype)}}class aT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aT.prototype)}}class rT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rT.prototype)}}class sT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sT.prototype)}}Error;class oT{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function iT(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function cT(e,t){if(!e)throw new sT(t)}function lT(e,t){let n=0;for(const a of e)a===t&&n++;return n}function uT(e){return 1===e.length?e[0]:e}function hT(e){return Array.isArray(e)?e:[e]}function dT(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pT(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let GT={};function CT(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function AT(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>AT(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?AT(t):e[n]=t.value)}}}function TT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in GT)s=GT[r];else if(s=t[r],null==s)throw new aT("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new aT("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in GT?[i,c]=GT.className:o in t&&([i,c]=t[o]),null==i)throw new aT("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(GT))e[n]=GT[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},GT);for(const r of Object.keys(n))GT[r]=n[r];AT(s.config);const a=c(i,s.config,n,r);return GT=Object.assign({},t),a}{const e=Object.assign({},GT);for(const a of Object.keys(n))GT[a]=n[a];const t=new i(s.config);return GT=Object.assign({},e),t}}}function fT(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function mT(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function gT(e){if(null==e)throw new aT("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function yT(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new aT("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function bT(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return cT(n>=0),cT(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function xT(e,t){Array.isArray(e)?(rt(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>xT(e,"element ".concat(n+1," of ").concat(t))))):rt(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(vT(e),".")))}function vT(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>vT(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function wT(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let kT=0;function IT(){return kT++}const NT={};function ST(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in NT||(NT[e]=0),NT[e]+=1,e+NT[e].toString()}const ET=["channelsFirst","channelsLast"],RT=["nearest","bilinear"],_T=["valid","same","causal"],FT=["max","avg"],DT=["sum","mul","concat","ave"],OT=new Map;function MT(e){yT(ET,"DataFormat",e)}function LT(e){yT(_T,"PaddingMode",e)}function zT(e){yT(FT,"PoolMode",e)}const PT=[],VT="/";function BT(e,t){PT.push(e);try{const e=t();return PT.pop(),e}catch(OB){throw PT.pop(),OB}}function WT(e){if(!jT(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===PT.length?"":PT.join(VT)+VT)+e}function UT(e){if(!jT(e))throw new Error("Not a valid tensor name: '"+e+"'");OT.has(e)||OT.set(e,0);const t=OT.get(e);if(OT.set(e,OT.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return OT.set(n,1),n}return e}const HT=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jT(e){return!!e.match(HT)}function qT(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function KT(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function XT(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function YT(e,t){if(t<e)throw new aT("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let QT;function JT(){return null==QT&&(QT=Vo().epsilon()),QT}function ZT(e,t){return Hi(e,t)}function $T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ll(e,n)}function ef(e,t,n){return Mo((()=>{switch(e.rank){case 1:return kd(e,t,n);case 2:return Id(e,[t,0],[n,e.shape[1]]);case 3:return Nd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Sd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ul(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ul(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new aT("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function tf(e,t,n){return Mo((()=>{switch(e.rank){case 1:return kd(e,t,n);case 2:return Id(e,[0,t],[e.shape[0],n]);case 3:return Nd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Sd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new aT("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function nf(e,t,n,a){return Mo((()=>{switch(e.rank){case 1:return kd(e,t,n);case 2:switch(a){case 1:return ef(e,t,n);case 2:return tf(e,t,n);default:throw new aT("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return ef(e,t,n);case 2:return Nd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return tf(e,t,n);default:throw new aT("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return ef(e,t,n);case 2:return Sd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Sd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return tf(e,t,n);default:throw new aT("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new aT("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function af(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Vl(e,n)}function rf(e,t){switch(e.rank){case 1:return au([e,t]);case 2:return ru([e,t],0);case 3:return su([e,t],0);case 4:return ou([e,t],0);default:throw new aT("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function sf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new aT("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Xu(e,t)}function of(e){return rd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function cf(e,t,n,a){if(e.rank<2||t.rank<2)throw new rT("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new rT("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return wp({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?hf(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=Ll(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ll(ip(t,u),[c,-1]);const h=[...r,...l];return Ll(wp({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?hf(e.rank,a,"channelsLast"):null,activation:n}),h)}}function lf(e,t,n){return Mo((()=>(t=Array.isArray(t)?Wd(t,"int32"):Hi(t,"int32"),Ju(e,t,n))))}function uf(e){return Qi(e,e)}function hf(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new aT("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?Ll(t,[1,a[0],1,1,1]):Ll(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Ll(t,[1,1,1,1,a[0]]):Ll(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Ll(t,[1,a[0],1,1]):Ll(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Ll(t,[1,1,1,a[0]]):Ll(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Ll(t,[1,a[0],1]):Ll(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Ll(t,[1,1,a[0]]):Ll(t,[1].concat(a))}else if(e<3)return t;throw new aT("Unsupported input rank by biasAdd: ".concat(t.rank))}function df(e,t,n){return Mo((()=>(null==n&&(n="channelsLast"),MT(n),Ki(e,hf(e.rank,t,n)))))}function pf(e,t,n,a){return Mo((()=>dp(e,t,n,a)))}function Gf(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const Cf=["fanIn","fanOut","fanAvg"],Af=["normal","uniform","truncatedNormal"];class Tf extends rc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ff extends Tf{apply(e,t){return Ih(e,t)}}ff.className="Zeros",oc(ff);class mf extends Tf{apply(e,t){return Nh(e,t)}}mf.className="Ones",oc(mf);class gf extends Tf{constructor(e){if(super(),"object"!==typeof e)throw new aT("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new aT("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return Mo((()=>Qi(tc(this.value),Nh(e,t))))}getConfig(){return{value:this.value}}}gf.className="Constant",oc(gf);class yf extends Tf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return od(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}yf.className="RandomUniform",oc(yf);class bf extends Tf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rT("randomNormal does not support dType ".concat(t,"."));return of(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}bf.className="RandomNormal",oc(bf);class xf extends Tf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rT("truncatedNormal does not support dType ".concat(t,"."));return Zd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xf.className="TruncatedNormal",oc(xf);class vf extends Tf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Mo((()=>{if(2!==e.length||e[0]!==e[1])throw new aT("Identity matrix initializer can only be used for 2D square matrices.");return Qi(this.gain,Yu(e[0]))}))}getConfig(){return{gain:this.gain}}}vf.className="Identity",oc(vf);class wf extends Tf{constructor(e){if(super(),e.scale<0)throw new aT("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,yT(Cf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){yT(Af,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(MT(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=qT(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=qT(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=qT(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rT("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Zd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return od(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wf.className="VarianceScaling",oc(wf);class kf extends wf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wf.className}}kf.className="GlorotUniform",oc(kf);class If extends wf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wf.className}}If.className="GlorotNormal",oc(If);class Nf extends wf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wf.className}}Nf.className="HeNormal",oc(Nf);class Sf extends wf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wf.className}}Sf.className="HeUniform",oc(Sf);class Ef extends wf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wf.className}}Ef.className="LeCunNormal",oc(Ef);class Rf extends wf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wf.className}}Rf.className="LeCunUniform",oc(Rf);class _f extends Tf{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Mo((()=>{if(e.length<2)throw new rT("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=it(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=of([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=kG.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=Qi(i,c.sign()),n<a&&(i=i.transpose()),Qi(tc(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}_f.className="Orthogonal",oc(_f);const Ff={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Df(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return TT(e,sc.getMap().classNameMap,t,"initializer")}function Of(e){return CT(e)}function Mf(e){if("string"===typeof e){const t=e in Ff?Ff[e]:e;if("GlorotNormal"===t)return new If;if("GlorotUniform"===t)return new kf;if("HeNormal"===t)return new Nf;if("HeUniform"===t)return new Sf;if("LeCunNormal"===t)return new Ef;if("LeCunUniform"===t)return new Rf;{const e={};return e.className=t,e.config={},Df(e)}}return e instanceof Tf?e:Df(e)}function Lf(e){return Array.isArray(e)&&Array.isArray(e[0])}function zf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Pf(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new aT("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Vf(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new aT("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Bf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Wf="Variable";class Uf{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Wf,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=IT(),n=null==n?Wf:n,this.originalName=WT(n),this.name=UT(this.originalName),this.trainable_=a,this.constraint=r,this.val=ap(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Hf(e){return e.map((e=>e.read()))}function jf(e){e.forEach((e=>{e[0].write(e[1])}))}class qf{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Kf{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=IT(),null!=s&&(this.originalName=WT(s),this.name=UT(this.originalName)),this.rank=t.length}}let Xf=0;class Yf{constructor(e,t){this.callArgs=t,this.id=Xf++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Qf=0;class Jf extends rc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Qf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=dT(e)+"_"+ST(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new nT("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new aT("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return uT(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return uT(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tT("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new tT("Layer ".concat(this.name)+" is not connected, no input to return.");return uT(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tT("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new tT("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return uT(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=hT(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=hT(this.inputSpec);if(t.length!==n.length)throw new aT("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new aT("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new aT("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new aT("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new aT("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new aT("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new aT("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=hT(e),a=function(e){let t=!0;for(const n of hT(e))if(!(n instanceof Kf)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of hT(e))if(n instanceof Kf){t=!1;break}return t}(e);if(a===r)throw new aT("Arguments to apply() must be all SymbolicTensors or all Tensors");return BT(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of hT(e))t.push(n.shape);this.build(uT(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=hT(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=uT(s),null!=this.activityRegularizer)throw new rT("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=hT(e);const t=[];for(const n of e)t.push(n.shape);return uT(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Kf(s,n,this,hT(e),t,this.name,a))):new Kf(s,a,this,hT(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new rT("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tT("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new tT("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new nT("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Bf(this.weights)}build(e){this.built=!0}getWeights(){return Hf(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Mo((()=>{const t=this.weights;if(t.length!==e.length)throw new aT('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Hf(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!ct(s.shape,i.shape))throw new aT("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}jf(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new aT("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Mf("zeros"));const c=a.apply(t,n),l=new Uf(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=hT(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=hT(t),s=hT(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=hT(e);t=hT(t),n=hT(n),a=hT(a),r=zf(r),s=zf(s);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Yf({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Zf(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Zf(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class $f extends Jf{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ST("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new aT("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new aT("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new aT("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Kf(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Yf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new aT("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}$f.className="InputLayer",oc($f);class em{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof em)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new aT("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Hi(t,e.dtype)}catch(MB){throw new aT("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Kf){if(null==this.id2Value[e.id])throw new aT("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new aT("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Kf){if(null==this.id2Value[e.id])throw new aT("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new aT("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Lo(this.id2Mask)}}const tm=new oT,nm=new oT;function am(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const G of i)-1!==l.indexOf(G)?c.push(t.getValue(G)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let h,d=tm.get(u);if(null==d){const e=function(e,t){rt(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=sm(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=sm(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:rm(a)}}(o,t);d=e.sorted,h=e.recipientCounts,tm.put(u,d),nm.put(u,h)}h={},r||Object.assign(h,nm.get(u));const p=new em(t);for(let G=0;G<d.length;++G){if(null!=a){const e=Oo().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[G],s=e.sourceLayer;if(s instanceof $f)continue;const o=[],l=[],u=[];let C=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),l.push(a),null!=a&&(C=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}C&&((n=n||{}).mask=l[0]);const A=hT(s.apply(o,n));let T=null;s.supportsMasking&&(T=s.computeMask(o,l));const f=om(e),m=Array.isArray(f)?f:[f];for(let t=0;t<m.length;++t){p.hasKey(m[t])||p.add(m[t],A[t],Array.isArray(T)?T[0]:T);const e=i.indexOf(m[t].name);-1!==e&&(c[e]=A[t])}r||Lo(u)}return p.disposeMasks(),s?c:c[0]}function rm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function sm(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function om(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function im(e,t){return Mo((()=>Ji(Bu(Qi(e,e),t,!0))))}zt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=tm&&tm.setMaxEntries(e),null!=nm&&nm.setMaxEntries(e)}));class cm extends rc{getConfig(){return{}}}class lm extends cm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Mo((()=>{const t=im(e,this.axis),n=nu(t,0,this.maxValue);return Qi(e,Yi(n,Ki(JT(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lm.className="MaxNorm",oc(lm);class um extends cm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Mo((()=>Yi(e,Ki(JT(),im(e,this.axis)))))}getConfig(){return{axis:this.axis}}}um.className="UnitNorm",oc(um);class hm extends cm{apply(e){return hd(e)}}hm.className="NonNeg",oc(hm);class dm extends cm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Mo((()=>{const t=im(e,this.axis),n=Ki(Qi(this.rate,nu(t,this.minValue,this.maxValue)),Qi(1-this.rate,t));return Qi(e,Yi(n,Ki(JT(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}dm.className="MinMaxNorm",oc(dm);const pm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gm(e){return CT(e)}function Cm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return TT(e,sc.getMap().classNameMap,t,"constraint")}function Am(e){if(null==e)return null;if("string"===typeof e){return Cm({className:e in pm?pm[e]:e,config:{}})}return e instanceof cm?e:Cm(e)}async function Tm(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Lo(a)}}function fm(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var mm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(mm||(mm={}));class gm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ym{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class bm extends gm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=Mo((()=>Ki(this.totals[a],Qi(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Mo((()=>{const e=Qi(Yi(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),zo(t[n])})))}}class xm extends gm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class vm extends gm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_G,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");yt(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():Ns();return function(){const s=null!=n?n():Ns();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Tm(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Tm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Tm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Tm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Tm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):yt(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Tm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Tm(e),await this.trainEnd(e))}}function wm(e,t){if(null==e&&(e={}),e instanceof gm)return[e];if(Array.isArray(e)&&e[0]instanceof gm)return e;return hT(e).map((e=>new vm(e,t)))}class km{constructor(){}static registerCallbackConstructor(e,t){rt(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),km.checkForDuplicate(t),null==km.constructors[e]&&(km.constructors[e]=[]),km.constructors[e].push(t)}static checkForDuplicate(e){for(const t in km.constructors){km.constructors[+t].forEach((t=>{if(t===e)throw new aT("Duplicate callback constructor.")}))}}static clear(){km.constructors={}}static createCallbacks(e){const t=[];for(const n in km.constructors){const a=+n;e>=a&&t.push(...km.constructors[a])}return t.map((e=>new e))}}function Im(e,t,n,a,r,s,o,i,c){const l=new xm,u=[new bm,...km.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const h=new ym(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:h,history:l}}function Nm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return TT(e,sc.getMap().classNameMap,t,"layer",n)}function Sm(e,t){return Mo((()=>{"float32"!==e.dtype&&(e=Hi(e,"float32"));const n=Bu(uf(e),t,!0),a=lc(n.shape,JT()),r=Ji(fc(n,a));return Yi(e,r)}))}function Em(e,t){return Mo((()=>kh(uf(dc(t,e)),-1)))}function Rm(e,t){return Mo((()=>kh(Gc(dc(t,e)),-1)))}function _m(e,t){return Mo((()=>{const n=dc(e,t),a=nu(Gc(e),JT(),Number.MAX_VALUE),r=Gc(Yi(n,a));return Qi(100,kh(r,-1))}))}function Fm(e,t){return Mo((()=>{const n=nu(t,JT(),Number.MAX_VALUE),a=lh(Ki(1,n)),r=nu(e,JT(),Number.MAX_VALUE),s=lh(Ki(1,r));return kh(uf(dc(a,s)),-1)}))}function Dm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Mo((()=>{if(n)t=Ed(t);else{const e=Bu(t,t.shape.length-1,!0);t=Yi(t,e)}return t=nu(t,JT(),1-JT()),hh(Bu(Qi(Hi(e,"float32"),lh(t)),t.shape.length-1))}))}function Om(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Mo((()=>{const a=Hi(Qu(function(e){const t=[qT(e.shape)];return Ll(e,t)}(e)),"int32"),r=(t=nu(t,JT(),1-JT())).shape;return Dm(Ll(Lh(a,r[r.length-1]),r),t,n)}))}function Mm(e,t){return Mo((()=>{let n;return n=nu(t,JT(),1-JT()),n=lh(Yi(n,dc(1,n))),kh(function(e,t){if(!ct(e.shape,t.shape))throw new aT("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return Mo((()=>{const n=hd(t),a=hh(Gc(t));return Ki(dc(n,Qi(t,e)),uh(ju(a)))}))}(e,n),-1)}))}function Lm(e,t){return Mo((()=>{const n=nu(e,JT(),1),a=nu(t,JT(),1);return Bu(Qi(e,lh(Yi(n,a))),-1)}))}function zm(e,t){return Mo((()=>{const n=Sm(e,-1),a=Sm(t,-1),r=Qi(n,a);return hh(Bu(r,-1))}))}km.constructors={};const Pm={meanSquaredError:Em,meanAbsoluteError:Rm,meanAbsolutePercentageError:_m,meanSquaredLogarithmicError:Fm,squaredHinge:function(e,t){return Mo((()=>{const n=fc(0,dc(1,Qi(e,t)));return kh(uf(n),-1)}))},hinge:function(e,t){return Mo((()=>{const n=fc(0,dc(1,Qi(e,t)));return kh(n,-1)}))},categoricalHinge:function(e,t){return Mo((()=>{const n=Bu(Qi(e,t),-1),a=Pu(Qi(dc(1,e),t),-1);return fc(0,Ki(1,dc(a,n)))}))},logcosh:function(e,t){return Mo((()=>{const n=Math.log(2),a=dc(t,e),r=dc(Ki(a,dh(Qi(-2,a))),n);return kh(r,-1)}))},categoricalCrossentropy:Dm,sparseCategoricalCrossentropy:Om,binaryCrossentropy:Mm,kullbackLeiblerDivergence:Lm,poisson:function(e,t){return Mo((()=>{const n=lh(Ki(JT(),t));return kh(dc(t,Qi(e,n)),-1)}))},cosineProximity:zm};function Vm(e){if("string"===typeof e){if(e in Pm)return Pm[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new aT(t)}return e}function Bm(e,t){return Mo((()=>{const n=Qi(.5,zh(t)),a=ZT(Zu(t,n),e.dtype);return kh(xu(e,a),-1)}))}function Wm(e,t){return Mo((()=>ZT(xu(Cl(e,-1),Cl(t,-1)),"float32")))}function Um(e,t){return Mo((()=>Hi(Bu(Ah(xu(e,1),xu(t,1))),"float32")))}function Hm(e,t){return Mm(e,t)}function jm(e,t){return e.rank===t.rank&&(e=Ld(e,[e.rank-1])),(t=Cl(t,-1)).dtype!==e.dtype&&(t=Hi(t,e.dtype)),Hi(xu(e,t),"float32")}const qm=Dm,Km=Om,Xm={binaryAccuracy:Bm,categoricalAccuracy:Wm,precision:function(e,t){return Mo((()=>{const n=Um(e,t),a=function(e,t){return Mo((()=>Hi(Bu(Ah(xu(e,0),xu(t,1))),"float32")))}(e,t),r=Ki(n,a);return Hi(vu(Zu(r,0),Yi(n,r),0),"float32")}))},categoricalCrossentropy:qm,sparseCategoricalCrossentropy:Km,mse:Em,MSE:Em,mae:Rm,MAE:Rm,mape:_m,MAPE:_m,cosine:zm};function Ym(e){if("string"===typeof e&&e in Xm)return Xm[e];if("string"!==typeof e&&null!=e)return e;throw new aT("Unknown metric ".concat(e))}function Qm(e){if(cT(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Pm))if(Pm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Xm))if(Xm[n]===e){t=n;break}return void 0!==t?t:e.name}}const Jm=1048576;function Zm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!$m(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Jm&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Jm,"."))}}function $m(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!$m(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!$m(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function eg(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),tg(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?ng(i[u],n,a):ag(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Bf(e.collectedTrainableWeights):Bf(e.trainableWeights);return t}(e),l=Bf(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function tg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function ng(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(MB){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(MB){a="multiple"}const s=e.name,o=e.getClassName();tg(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function ag(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(MB){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(MB){r="multiple"}const o=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],a=u.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];tg(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let u=1;u<o.length;++u)tg(["","","","",o[u]],t,a)}function rg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function sg(e,t){if(null===e)return null;if("string"===typeof e)return pT(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];rg(t,r,a)?n.push(a):n.push(sg(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=pT(n);t[e]=sg(a,e)}}return t}}function og(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return dT(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];rg(t,r,a)?n.push(a):n.push(og(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=dT(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?og(a,n):a}return t}}const ig="4.19.0";class cg extends Jf{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ST(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mT(this.inputs).length!==this.inputs.length)throw new aT("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));mT(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const T of this.outputs){const e=T.sourceLayer,t=T.nodeIndex,n=T.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const T of this.inputs){const e=T.sourceLayer,t=T.nodeIndex,n=T.tensorIndex;cT(0===t,"input layer has >1 nodes"),cT(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){const t=this.inputLayers[T];if(!(t instanceof $f))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(T," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new nT("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(cg.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const T of this.outputs)i(T,c,l);const u=o.slice().reverse();for(const T of u){n[T.id]=T,T.id in t||(t[T.id]=0);let e=t[T.id];const s=null==a[T.outboundLayer.id]?0:a[T.outboundLayer.id];e=Math.max(e,s),a[T.outboundLayer.id]=e,r[T.outboundLayer.id]=T.outboundLayer,t[T.id]=e;for(let a=0;a<T.inboundLayers.length;a++){const r=T.inboundLayers[a],s=T.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const T in t){const e=t[T];e in h||(h[e]=[]),h[e].push(n[T])}const d={};for(const T in a){const e=a[T];e in d||(d[e]=[]),d[e].push(r[T])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(fT);this.layers=[];for(const T of p){const e=d[T];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof cg&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(fT);const G=this.inputs.slice(),C=[];for(const T of p)for(const e of h[T]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===G.indexOf(n))throw new nT("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(C));for(const t of e.outputTensors)G.push(t);C.push(t.name)}}this.nodesByDepth=h;const A=this.layers.map((e=>e.name));for(const T of A){const e=A.filter((e=>e===T)).length;if(1!==e)throw new nT('The name "'.concat(T,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(A))}this.outboundNodes=[],this.inboundNodes=[],new Yf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new aT("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new aT("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new aT("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new aT("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}jf(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(ig),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=og(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Mo((()=>{e=hT(e);const n=new em;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return am(this.outputs,n,t)}))}computeMask(e,t){return Mo((()=>{let n;return e=hT(e),n=null==t?iT(null,e.length):hT(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=zf(e);if(t.length!==this.inputLayers.length)throw new aT("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fT);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=zf(e.computeOutputShape(uT(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];cT(e in n),r.push(n[e])}return uT(r)}runInternalGraph(e,t){null==t&&(t=iT(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(fT);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=hT(e.call(t,l)),c=hT(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=hT(e.call(a,l)),c=hT(e.computeMask(a,o));if(e.activityRegularizer)throw new rT("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){cT(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof cg?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=cg.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new aT("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new aT("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new aT("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return Mo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=cg.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=cg.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(MB){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],i=e.tensorIndices[a];let c=t[cg.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=e,o.config=a,o.inboundNodes=r,n.push(o)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=cg.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=cg.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&e.apply(uT(n),r)}function i(e){const r=e.name,o=Nm(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new aT("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const G of l)i(G);for(;!gT(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],h=[],d=t.inputLayers;for(const G of d){const e=G[0],t=G[1],n=G[2];cT(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const G of p){const e=G[0],t=G[1],n=G[2];cT(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new aT("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Mo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function lg(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function ug(e,t){return lg(e,t,"classWeight")}async function hg(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Mo((()=>{if(1===e.shape.length)return ji(e);if(2===e.shape.length){if(e.shape[1]>1){return Cl(e,1)}if(1===e.shape[1])return Ll(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());Lo(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),Wd(r,"float32")}return null}function dg(e,t){return Qi(e,t)}function pg(e,t){let n,a;const r=t;n=r.xs,a=r.ys,rt(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Gg("input",e.inputNames,n),o=Gg("output",e.outputNames,a),i=s[0].shape[0];rt(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),rt(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<s.length;c++)rt(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)rt(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Gg(e,t,n){if(n instanceof Xs)return[n];if(Array.isArray(n))return rt(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new aT("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Cg(e,t,n){const a=null!=n.batchesPerEpoch;if(rt(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),rt(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),rt(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),rt(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),rt(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Ag(n.validationData))rt(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new rT("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=wm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Im(u,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let G=null==n.initialEpoch?0:n.initialEpoch,C=await t.iterator();for(;G<n.epochs;){const l={};await d.onEpochBegin(G);let u=0,h=0;for(a||(C=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await C.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=pg(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=ug(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await hg(r[e],null,t[e]))}const l=a.concat(r).concat(o),p=i(l);Lo(l);for(let e=0;e<c.length;++e){const t=c[e],n=p[e];s[t]=n,zo(n)}await d.onBatchEnd(h,s),fm(s),h++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=Ag(n.validationData)?hT(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):hT(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(G,l),G++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Ag(e){return"function"===typeof e.iterator}function Tg(e){rt(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function fg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ef(e,t,n-t))):ef(e,t,n-t)}function mg(e,t){return Mo((()=>null==e?null:Array.isArray(e)?e.map((e=>mg(e,t))):lf(e,"int32"===t.dtype?t:Hi(t,"int32"))))}function gg(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function yg(e){const t=[];e instanceof Xs&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push($T(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function bg(e,t){if(null==e)return;const n=[];if(t instanceof Xs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Xs)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function xg(e){return Array.isArray(e)}function vg(e){return!function(e){return e instanceof Xs}(e)&&!xg(e)}function wg(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(xg(e)&&e.length>0)t=!0;else if(vg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new aT("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(vg(e)){a=[];for(const n of t){if(null==e[n])throw new aT('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(xg(e)){if(e.length!==t.length)throw new aT("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new aT("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=yg(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new aT("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new aT("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function kg(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new aT("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new aT("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new aT("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new aT("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class Ig extends cg{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new aT("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");eg(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>EG.adagrad(.01),Adadelta:()=>EG.adadelta(1,.95,JT()),Adam:()=>EG.adam(.001,.9,.999,JT()),Adamax:()=>EG.adamax(.002,.9,.999,JT(),0),RMSProp:()=>EG.rmsprop(.001,.9,0,JT()),SGD:()=>EG.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new aT("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ic))throw new aT("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new aT("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Vm(e)))}else{const n=Vm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new aT('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Vm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],BT("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};BT("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Mm?-1!==["accuracy","acc"].indexOf(o)?a=Bm:-1!==["crossentropy","ce"].indexOf(o)&&(a=Hm):this.lossFunctions[e]===Om?-1!==["accuracy","acc"].indexOf(o)?a=jm:-1!==["crossentropy","ce"].indexOf(o)&&(a=Km):-1!==["accuracy","acc"].indexOf(o)?a=Wm:-1!==["crossentropy","ce"].indexOf(o)&&(a=qm),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=Ym(o);s=e,n=""+Qm(o)}let t;BT(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Tg(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return uT(this.testLoop(t,e,a,n.verbose,n.steps))}finally{bg(r[0],e),bg(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new rT("Verbose mode is not implemented yet.");rt(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await o.next();if(s=Mo((()=>{if(t.value){const{xs:n,ys:a}=pg(e,t.value),o=n.concat(a),l=Mo((()=>r(o)));if(Lo(o),0===c)for(let e=0;e<l.length;++e)s.push(tc(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Mo((()=>Ki(s[e],Qi(u,t)))),c>0&&Lo(n)}Lo(l),i+=u,++c}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=Yi(s[l],i),Lo(e)}return uT(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new aT("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new aT("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new aT("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new em;if(e instanceof Xs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new aT("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new aT("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=am(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=iT(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new aT("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Mo((()=>{const a=this.checkNumSamples(e);if(n)throw new rT("Verbose predictLoop() is not implemented yet.");const r=gg(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){Mo((()=>{const n=r[t][0],a=r[t][1],s=fg(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new em(o);return am(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return uT(s.map((e=>Vl(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=yg(e);kg(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Tg(e),this.predictLoop(n,e)}finally{bg(n,e)}}predictOnBatch(e){kg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new nT("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Om?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=mT(e.map((e=>e.shape[0])));a.sort();const r=mT(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new aT("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new aT("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!ct(a,r))throw new aT("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=wg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=wg(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[Em,Mm,Dm];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===Dm&&1===s.shape[s.shape.length-1])throw new aT("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new aT("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new aT("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=ug(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await hg(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return Mo((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new rT("Verbose mode is not implemented yet.");if(null!=r)throw new rT("steps mode in testLoop() is not implemented yet");{const a=gg(s,n),r=Wd(YT(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=ef(r,s,i-s),l=mg(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push(tc(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=Ki(o[e],Qi(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=Yi(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(lT(e,a)>1){const t=lT(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new em(e),i=am(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=dg(e,r[n]));const s=kh(e);t.push(s),c=0===n?e:Ki(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=kh(t(a[r],i[r]))}zo(e),s.push(e)}return c=kh(c),this.calculateLosses().forEach((e=>{c=Ki(c,e)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Mo((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new em(s),i=am(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=kh(a(r[e],i[e]));n=0===e?s:Ki(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=kh(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,c,l,u,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;Tg(d);const p=!1,G=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=G[0],a=G[1],u=G[2];let C,A=!1;if(null!=h.validationData&&h.validationData.length>0){if(A=!0,2!==h.validationData.length)throw 3===h.validationData.length?new rT("validationData including sample weights is not supported yet."):new aT("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,d);c=t[0],l=t[1],C=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){A=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];c=fg(n,e,t),r=n,n=fg(n,0,e),l=fg(a,e,t),s=a,a=fg(a,0,e),C=c.concat(l)}else null!=h.validationSteps&&(A=!0);const T=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const f=this.makeTrainFunction(),m=this.getDedupedMetricsNames();let g,y;A?(this.makeTestFunction(),g=this.testFunction,y=m.slice().concat(m.map((e=>"val_"+e)))):(g=null,C=[],y=m.slice());const b=wm(h.callbacks,h.yieldEvery);return await this.fitLoop(f,T,m,d,h.epochs,h.verbose,b,g,C,h.shuffle,y,h.initialEpoch,null,null)}finally{this.isTraining=!1,bg(n,e),bg(a,t),bg(r,e),bg(s,t),bg(c,o),bg(l,i),null!=u&&Lo(u)}}async fitLoop(e,t,n,a,r,s,o,i,c,l,u,h,d,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let G=!1;if(null!=i&&null!=c&&(G=!0),null!=p&&(G=!0,null==d))throw new aT("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const C=this.checkNumSamples(t,a,d,"steps_per_epoch");let A;null!=C&&(A=YT(0,C)),null==s&&(s=1);const{callbackList:T,history:f}=Im(o,s,r,h,C,d,a,G,u);T.setModel(this),this.history=f,await T.onTrainBegin(),this.stopTraining_=!1;for(let m=h;m<r;++m){await T.onEpochBegin(m);const r={};if(null!=d)throw new rT("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new rT("batch shuffling is not implemneted yet");l&&et(A);const s=Wd(A),o=gg(C,a);for(let l=0;l<o.length;++l){const u={};if(await T.onBatchBegin(l,u),Mo((()=>{const h=o[l][0],d=o[l][1],p=ef(s,h,d-h);u.batch=l,u.size=d-h;const C=mg(t,p),A=e(C);for(let e=0;e<n.length;++e){const t=n[e],a=A[e];u[t]=a,zo(a)}if(l===o.length-1&&G){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];zo(s),r["val_"+a]=s}}})),await T.onBatchEnd(l,u),fm(u),this.stopTraining_)break}s.dispose()}if(await T.onEpochEnd(m,r),this.stopTraining_)break}return await T.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Cg(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return Lo(s),bg(n[0],e),bg(n[1],t),uT(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Oo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Oo().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=dT(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>dT(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=dT(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[dT(Qm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>dT(Qm(e))));{const e={};for(const t in this.metrics)e[t]=dT(Qm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Nm(sg(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=pT(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>pT(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pT(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>pT(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=pT(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=ci(e);if(0===t.length)throw new aT("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new aT("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new aT("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Wo(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(ig),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Wo(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Zo([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Zm(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Zm(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ig.className="Model",oc(Ig);class Ng extends Ig{}Ng.className="Functional",oc(Ng);class Sg extends Ig{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ST("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new aT("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Sg||e instanceof Ig;let n;if(t){if(n=e,1!==n.outputs.length)throw new aT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new aT("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new aT("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new aT("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new $f({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new aT("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new aT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Zf(this.outputs[0])}this.inboundNodes=[],new Yf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:iT(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Vf(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ig({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new nT("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new nT("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new nT("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new nT("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new aT("Legacy serialization format not supported yet.");n=t}else rt(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof Sg))throw new rT("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=Nm(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new aT("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new aT("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Sg.className="Sequential",oc(Sg);class Eg extends rc{getConfig(){return{}}}class Rg extends Eg{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new rT("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return Nu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Rg.className="elu",oc(Rg);class _g extends Eg{apply(e){return gd(e)}}_g.className="selu",oc(_g);class Fg extends Eg{apply(e){return hd(e)}}Fg.className="relu",oc(Fg);class Dg extends Eg{apply(e){return Mo((()=>Eh(6,hd(e))))}}Dg.className="relu6",oc(Dg);class Og extends Eg{apply(e){return e}}Og.className="linear",oc(Og);class Mg extends Eg{apply(e){return Wl(e)}}Mg.className="sigmoid",oc(Mg);class Lg extends Eg{apply(e){return function(e){return Mo((()=>{const t=Ki(.5,Qi(.2,e));return nu(t,0,1)}))}(e)}}Lg.className="hardSigmoid",oc(Lg);class zg extends Eg{apply(e){return dh(e)}}zg.className="softplus",oc(zg);class Pg extends Eg{apply(e){return function(e){return Mo((()=>Yi(e,Ki(Gc(e),1))))}(e)}}Pg.className="softsign",oc(Pg);class Vg extends Eg{apply(e){return Hl(e)}}Vg.className="tanh",oc(Vg);class Bg extends Eg{apply(e){return Ed(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Bg.className="softmax",oc(Bg);class Wg extends Eg{apply(e){return Gh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Wg.className="logSoftmax",oc(Wg);class Ug extends Eg{apply(e){return Mo((()=>Mo((()=>{const t=Math.sqrt(2),n=Qi(.5,Ki(1,Eu(Yi(e,t))));return Qi(e,n)}))))}}Ug.className="gelu",oc(Ug);class Hg extends Eg{apply(e){return Mo((()=>Qi(.5,Qi(e,Ki(1,Hl(Qi(Ji(Yi(2,Math.PI)),Ki(e,Qi(.044715,hc(e,3))))))))))}}Hg.className="gelu_new",oc(Hg);class jg extends Eg{apply(e){return Mo((()=>Qi(e,Hl(dh(e)))))}}jg.className="mish",oc(jg);class qg extends Eg{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Mo((()=>Qi(Wl(Qi(e,t)),e)))}}function Kg(e){return e.getClassName()}function Xg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return TT(e,sc.getMap().classNameMap,t,"activation")}function Yg(e){if(null==e){const e={className:"linear",config:{}};return Xg(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Xg(t)}return e instanceof Eg?e:Xg(e)}function Qg(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}qg.className="swish",oc(qg);class Jg extends rc{}class Zg extends Jg{constructor(e){super(),Qg(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Mo((()=>{let t=Ih([1]);return this.hasL1&&(t=Ki(t,Bu(Qi(this.l1,Gc(e))))),this.hasL2&&(t=Ki(t,Bu(Qi(this.l2,uf(e))))),Ll(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Zg.className="L1L2",oc(Zg);const $g={l1l2:"L1L2"};function ey(e){return CT(e)}function ty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return TT(e,sc.getMap().classNameMap,t,"regularizer")}function ny(e){if(null==e)return null;if("string"===typeof e){return ty({className:e in $g?$g[e]:e,config:{}})}return e instanceof Jg?e:ty(e)}class ay extends Jf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Pf(e);let n=hd(e);return null!=this.maxValue&&(n=nu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ay.className="ReLU",oc(ay);class ry extends Jf{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Pf(e);return rh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ry.className="LeakyReLU",oc(ry);class sy extends Jf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Mf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ny(e.alphaRegularizer),this.alphaConstraint=Am(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new aT("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Vf(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new qf({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pf(e),Kh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Of(this.alphaInitializer),alphaRegularizer:ey(this.alphaRegularizer),alphaConstraint:Gm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}sy.className="PReLU",oc(sy);class oy extends Jf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new rT("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Pf(e);return Nu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}oy.className="ELU",oc(oy);class iy extends Jf{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Pf(e);return Qi(n,Hi(Zu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}iy.className="ThresholdedReLU",oc(iy);class cy extends Jf{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Bg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Mo((()=>{let n=Pf(e);const a=t.mask;if(null!=a){const e=Qi(dc(Nh(n.shape),Hi(a,n.dtype)),tc(-1e9));n=Ki(n,e)}return this.axis instanceof Array?this.axis.length>1?ju(dc(n,Ch(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ly(e,t,n){if("number"===typeof e)return iT(e,t);if(e.length!==t)throw new aT("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new aT("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function uy(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function hy(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+XT([n-t,0]);else{if("same"!==a)throw new aT("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function dy(e,t){return Mo((()=>(MT(t),"channelsFirst"===t?ip(e,[0,2,3,1]):e)))}function py(e,t){return Mo((()=>(MT(t),"channelsFirst"===t?ip(e,[0,2,3,4,1]):e)))}function Gy(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Mo((()=>{if(null==s&&(s="channelsLast"),MT(s),3!==e.shape.length)throw new aT("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new aT("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new aT("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=ip(e,[0,2,1])),"causal"===r)throw new rT("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=cu(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=df(i,n)),i}))}function Cy(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Mo((()=>{if(null==s&&(s="channelsLast"),MT(s),3!==e.rank&&4!==e.rank)throw new aT("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new aT("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=dy(e,s);if("causal"===r)throw new rT("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=yp({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=ip(c,[0,3,1,2])),c}))}function Ay(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return Mo((()=>{if(null==s&&(s="channelsLast"),MT(s),4!==e.rank&&5!==e.rank)throw new aT("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new aT("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=py(e,s);if("causal"===r)throw new rT("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=hu(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=df(i,n)),"channelsFirst"===s&&(i=ip(i,[0,4,1,2,3])),i}))}cy.className="Softmax",oc(cy);class Ty extends Jf{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ty.verifyArgs(t),this.rank=e,xT(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new rT("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=ly(t.kernelSize,e,"kernelSize"),this.strides=ly(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,LT(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,MT(this.dataFormat),this.activation=Yg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Mf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Am(t.biasConstraint),this.biasRegularizer=ny(t.biasRegularizer),this.activityRegularizer=ny(t.activityRegularizer),this.dilationRate=ly(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new aT("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new aT("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new aT("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(cT("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!bT(e.kernelSize,"number",1,3))throw new aT("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Kg(this.activation),useBias:this.useBias,biasInitializer:Of(this.biasInitializer),biasRegularizer:ey(this.biasRegularizer),activityRegularizer:ey(this.activityRegularizer),biasConstraint:Gm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class fy extends Ty{constructor(e,t){super(e,t),this.kernel=null,fy.verifyArgs(t),this.filters=t.filters,xT(this.filters,"filters"),this.kernelInitializer=Mf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Am(t.kernelConstraint),this.kernelRegularizer=ny(t.kernelRegularizer)}build(e){e=Vf(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aT("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Mo((()=>{let t;e=Pf(e);const n=null==this.bias?null:this.bias.read(),a=wT(this.activation.getClassName());if(null!=a&&2===this.rank)t=Cy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Gy(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Cy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new rT("convolutions greater than 3D are not implemented yet.");t=Ay(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Vf(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=uy(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Of(this.kernelInitializer),kernelRegularizer:ey(this.kernelRegularizer),kernelConstraint:Gm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new aT("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class my extends fy{constructor(e){super(2,e),my.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!bT(e.kernelSize,"number",1,2))throw new aT("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}my.className="Conv2D",oc(my);class gy extends fy{constructor(e){super(3,e),gy.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new aT("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}gy.className="Conv3D",oc(gy);class yy extends my{constructor(e){if(super(e),this.inputSpec=[new qf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new aT("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Vf(e)).length)throw new aT("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aT("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qf({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Mo((()=>{let t=Pf(e);if(4!==t.shape.length)throw new aT("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,hy(o,u,c,this.padding),hy(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ip(t,[0,2,3,1]));let p=uu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ip(p,[0,3,1,2])),null!=this.bias&&(p=df(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Vf(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=hy(t[a],i,s,this.padding),t[r]=hy(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}yy.className="Conv2DTranspose",oc(yy);class by extends gy{constructor(e){if(super(e),this.inputSpec=[new qf({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new aT("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Vf(e)).length)throw new aT("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aT("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qf({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Mo((()=>{let t=Pf(e);if(5!==t.shape.length)throw new aT("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],G=this.strides[1],C=this.strides[2],A=[a,hy(i,p,u,this.padding),hy(c,G,h,this.padding),hy(l,C,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ip(t,[0,2,3,4,1]));let T=pu(t,this.kernel.read(),A,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(T=ip(T,[0,4,1,2,3])),null!==this.bias&&(T=df(T,this.bias.read(),this.dataFormat)),null!==this.activation&&(T=this.activation.apply(T)),T}))}computeOutputShape(e){const t=(e=Vf(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=hy(t[a],l,o,this.padding),t[r]=hy(t[r],u,i,this.padding),t[s]=hy(t[s],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}by.className="Conv3DTranspose",oc(by);class xy extends fy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new aT("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new aT("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new aT("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Mf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ny(t.depthwiseRegularizer),this.depthwiseConstraint=Am(t.depthwiseConstraint),this.pointwiseInitializer=Mf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ny(t.pointwiseRegularizer),this.pointwiseConstraint=Am(t.pointwiseConstraint)}build(e){if((e=Vf(e)).length<this.rank+2)throw new aT("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new aT("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new qf({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Mo((()=>{let t;if(e=Pf(e),1===this.rank)throw new rT("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ip(e,[0,2,3,1])),t=yd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=df(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ip(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Of(this.depthwiseInitializer),e.pointwiseInitializer=Of(this.pointwiseInitializer),e.depthwiseRegularizer=ey(this.depthwiseRegularizer),e.pointwiseRegularizer=ey(this.pointwiseRegularizer),e.depthwiseConstraint=Gm(this.depthwiseConstraint),e.pointwiseConstraint=Gm(this.pointwiseConstraint),e}}xy.className="SeparableConv";class vy extends xy{constructor(e){super(2,e)}}vy.className="SeparableConv2D",oc(vy);class wy extends fy{constructor(e){super(1,e),wy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!bT(e.kernelSize,"number",1,1))throw new aT("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}wy.className="Conv1D",oc(wy);class ky extends Jf{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Mo((()=>{if(e=Pf(e),"channelsLast"===this.dataFormat){const t=nf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return nf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=nf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return nf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ky.className="Cropping2D",oc(ky);class Iy extends Jf{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MT(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,yT(RT,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Mo((()=>{let t=Pf(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ip(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?wG.resizeNearestNeighbor(t,[e,a]):wG.resizeBilinear(t,[e,a]);return ip(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?wG.resizeNearestNeighbor(t,[e,a]):wG.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Iy.className="UpSampling2D",oc(Iy);class Ny extends Ty{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Mf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Am(e.depthwiseConstraint),this.depthwiseRegularizer=ny(e.depthwiseRegularizer)}build(e){if((e=Vf(e)).length<4)throw new aT("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new aT("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Mo((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Mo((()=>{null==r&&(r="channelsLast"),MT(r);let o=dy(e,r);if(4!==e.rank)throw new aT("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new aT("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=gu(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=ip(o,[0,3,1,2])),o}))}(e=Pf(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=df(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Vf(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=uy(t,this.kernelSize[0],this.padding,this.strides[0]),s=uy(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Of(this.depthwiseInitializer),e.depthwiseRegularizer=ey(this.depthwiseRegularizer),e.depthwiseConstraint=Gm(this.depthwiseRegularizer),e}}function Sy(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new aT("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Ey(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Mo((()=>{const c=t.shape.length;if(c<3)throw new aT("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(YT(2,c));if(t=ip(t,l),null!=s)throw new rT("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Hi(Hi(r,"bool"),"float32"),r.rank===c-1&&(r=qu(r,-1)),r=ip(r,l)),a&&(t=pd(t,0),null!=r&&(r=pd(r,0)));const u=[];let h,d=n;const p=t.shape[0],G=tp(t);let C,A;null!=r&&(C=tp(r));for(let t=0;t<p;++t){const n=G[t],a=Mo((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=Mo((()=>{const e=C[t],n=dc(zh(e),e);return{output:Ki(Qi(a[0],e),Qi(d[0],n)),newStates:d.map(((t,r)=>Ki(Qi(a[1][r],e),Qi(t,n))))}}));h=e.output,d=e.newStates}i&&u.push(h)}if(i){A=zd(u,1)}return[h,A,d]}))}Ny.className="DepthwiseConv2D",oc(Ny);class Ry extends Jf{constructor(e){let t;if(super(e),null==e.cell)throw new aT("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Py({cells:e.cell}):e.cell,null==t.stateSize)throw new aT("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new qf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return YT(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Lf(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return Mo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new rT("Constants support is not implemented in RNN yet.");Lf(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new qf({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ct(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new aT("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new qf({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Mo((()=>{if(!this.stateful)throw new tT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new aT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ih([n,e]))):this.states_=[Ih([n,this.cell.stateSize])];else if(null==e)Lo(this.states_),null!=this.keptStates&&(Lo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ih([n,e]))):this.states_[0]=Ih([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aT("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):Lo(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!ct(a.shape,s))throw new aT("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>zo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Sy(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new qf({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Kf){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return Mo((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Pf(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new aT("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Ey(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(e){return Mo((()=>{let t=Ih(e.shape);return t=Bu(t,[1,2]),t=$T(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?sf(t,[1,e]):t)):this.cell.stateSize>1?[sf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ry.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Nm(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Ry.className="RNN",oc(Ry);class _y extends Jf{}class Fy extends _y{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xT(this.units,"units"),this.activation=Yg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Mf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ny(e.kernelRegularizer),this.recurrentRegularizer=ny(e.recurrentRegularizer),this.biasRegularizer=ny(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=KT([1,XT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KT([1,XT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Vf(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Mo((()=>{if(2!==e.length)throw new aT("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vy({ones:()=>zh(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vy({ones:()=>zh(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=cf(null!=s?Qi(e,s):e,this.kernel.read()),null!=this.bias&&(r=df(r,this.bias.read())),null!=o&&(n=Qi(n,o));let i=Ki(r,cf(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kg(this.activation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:ey(this.kernelRegularizer),recurrentRegularizer:ey(this.recurrentRegularizer),biasRegularizer:ey(this.biasRegularizer),activityRegularizer:ey(this.activityRegularizer),kernelConstraint:Gm(this.kernelConstraint),recurrentConstraint:Gm(this.recurrentConstraint),biasConstraint:Gm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Fy.className="SimpleRNNCell",oc(Fy);class Dy extends Ry{constructor(e){e.cell=new Fy(e),super(e)}call(e,t){return Mo((()=>{null!=this.cell.dropoutMask&&(Lo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Lo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Dy.className="SimpleRNN",oc(Dy);class Oy extends _y{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new aT("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xT(this.units,"units"),this.activation=Yg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Yg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Mf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ny(e.kernelRegularizer),this.recurrentRegularizer=ny(e.recurrentRegularizer),this.biasRegularizer=ny(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=KT([1,XT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KT([1,XT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Vf(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Mo((()=>{if(2!==e.length)throw new aT("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vy({ones:()=>zh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vy({ones:()=>zh(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=Qi(e,r[0]));let l=cf(e,this.kernel.read());this.useBias&&(l=df(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Qi(a,s[0]));const u=this.recurrentKernel.read(),[h,d]=Dd(u,[2*this.units,this.units],u.rank-1),p=cf(a,h),[G,C,A]=Dd(l,3,l.rank-1),[T,f]=Dd(p,2,p.rank-1);o=this.recurrentActivation.apply(Ki(G,T)),i=this.recurrentActivation.apply(Ki(C,f));const m=cf(Qi(i,a),d);c=this.activation.apply(Ki(A,m));const g=Ki(Qi(o,a),Qi(Ki(1,hh(o)),c));return[g,g]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kg(this.activation),recurrentActivation:Kg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:ey(this.kernelRegularizer),recurrentRegularizer:ey(this.recurrentRegularizer),biasRegularizer:ey(this.biasRegularizer),activityRegularizer:ey(this.activityRegularizer),kernelConstraint:Gm(this.kernelConstraint),recurrentConstraint:Gm(this.recurrentConstraint),biasConstraint:Gm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Oy.className="GRUCell",oc(Oy);class My extends Ry{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Oy(e),super(e)}call(e,t){return Mo((()=>{null!=this.cell.dropoutMask&&(Lo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Lo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}My.className="GRU",oc(My);class Ly extends _y{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xT(this.units,"units"),this.activation=Yg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Yg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Mf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ny(e.kernelRegularizer),this.recurrentRegularizer=ny(e.recurrentRegularizer),this.biasRegularizer=ny(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=KT([1,XT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KT([1,XT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Vf(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Tf{apply(t,a){const r=e.apply([n]),s=(new mf).apply([n]),o=e.apply([2*n]);return rf(rf(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Mo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new aT("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vy({ones:()=>zh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vy({ones:()=>zh(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=Qi(e,s[0]));let h=cf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Qi(a,o[0])),h=Ki(h,cf(a,this.recurrentKernel.read())),this.useBias&&(h=df(h,this.bias.read()));const[d,p,G,C]=Dd(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=Ki(Qi(c,r),Qi(i,this.activation.apply(G))),u=this.recurrentActivation.apply(C);const A=Qi(u,this.activation.apply(l));return[A,A,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Kg(this.activation),recurrentActivation:Kg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ey(this.kernelRegularizer),recurrentRegularizer:ey(this.recurrentRegularizer),biasRegularizer:ey(this.biasRegularizer),activityRegularizer:ey(this.activityRegularizer),kernelConstraint:Gm(this.kernelConstraint),recurrentConstraint:Gm(this.recurrentConstraint),biasConstraint:Gm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ly.className="LSTMCell",oc(Ly);class zy extends Ry{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ly(e),super(e)}call(e,t){return Mo((()=>{null!=this.cell.dropoutMask&&(Lo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Lo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}zy.className="LSTM",oc(zy);class Py extends _y{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Mo((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Lf(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{BT("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(Nm(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Hf(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}jf(t)}}function Vy(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):pf(t(),n),i=()=>Gf(o,t,a);if(!r||r<=1)return zo(i().clone());return Array(r).fill(void 0).map(i).map((e=>zo(e.clone())))}Py.className="StackedRNNCells",oc(Py);var By=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Wy extends Ry{constructor(e){if(e.unroll)throw new rT("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new rT("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new qf({ndim:5})]}call(e,t){return Mo((()=>{if(null!=this.cell.dropoutMask&&(Lo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Lo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new aT("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Mo((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=Ih([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Mo((()=>{if(!this.stateful)throw new tT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new aT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ih(r))):this.states_=[Ih(r)];else if(null==e)Lo(this.states_),null!=this.keptStates&&(Lo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ih(r))):this.states_[0]=Ih(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aT("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):Lo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!ct(n.shape,a))throw new aT("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>zo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=uy(c,a[0],r,s[0],o[0]),h=uy(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Wy.className="ConvRNN2D";class Uy extends Ly{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,xT(this.filters,"filters"),this.kernelSize=ly(n,2,"kernelSize"),this.kernelSize.forEach((e=>xT(e,"kernelSize"))),this.strides=ly(a||1,2,"strides"),this.strides.forEach((e=>xT(e,"strides"))),this.padding=r||"valid",LT(this.padding),this.dataFormat=s||"channelsLast",MT(this.dataFormat),this.dilationRate=ly(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>xT(e,"dilationRate")))}build(e){var t;e=Vf(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new aT("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Tf{apply(e,t){return af([n.apply([a]),Nh([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Mo((()=>{if(3!==e.length)throw new aT("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Vy({ones:()=>zh(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Qi(t[n],e):e;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Vy({ones:()=>zh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),G=i(r,d,1),C=i(r,d,2),A=i(r,d,3);const[T,f,m,g]=Dd(this.kernel.read(),4,3),[y,b,x,v]=this.useBias?Dd(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,T,y,this.padding),l=this.inputConv(l,f,b,this.padding),u=this.inputConv(u,m,x,this.padding),h=this.inputConv(h,g,v,this.padding);const[w,k,I,N]=Dd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,w),G=this.recurrentConv(G,k),C=this.recurrentConv(C,I),A=this.recurrentConv(A,N);const S=this.recurrentActivation.apply(Ki(c,p)),E=this.recurrentActivation.apply(Ki(l,G)),R=Ki(Qi(E,s),Qi(S,this.activation.apply(Ki(u,C)))),_=Qi(this.recurrentActivation.apply(Ki(h,A)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=By(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=iu(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?df(r,n,this.dataFormat):r}recurrentConv(e,t){return iu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Uy.className="ConvLSTM2DCell",oc(Uy);class Hy extends Wy{constructor(e){const t=new Uy(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Hy.className="ConvLSTM2D",oc(Hy);class jy extends Jf{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Gf((()=>pf(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}jy.className="Dropout",oc(jy);class qy extends jy{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}qy.className="SpatialDropout1D",oc(qy);class Ky extends Jf{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xT(this.units,"units"),this.activation=Yg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Mf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Mf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Am(e.kernelConstraint),this.biasConstraint=Am(e.biasConstraint),this.kernelRegularizer=ny(e.kernelRegularizer),this.biasRegularizer=ny(e.biasRegularizer),this.activityRegularizer=ny(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Vf(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Vf(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e),a=wT(this.activation.getClassName());let r;return null!=a?r=cf(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=cf(n,this.kernel.read()),null!=this.bias&&(r=df(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Kg(this.activation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:ey(this.kernelRegularizer),biasRegularizer:ey(this.biasRegularizer),activityRegularizer:ey(this.activityRegularizer),kernelConstraint:Gm(this.kernelConstraint),biasConstraint:Gm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ky.className="Dense",oc(Ky);class Xy extends Jf{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Vf(e);for(const t of e.slice(1))if(null==t)throw new aT('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],qT(e,1)]}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);let n=Pf(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ip(n,e)}return function(e){if(e.rank<=1)throw new aT("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],qT(e.shape,1)];return Ll(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Xy.className="Flatten",oc(Xy);class Yy extends Jf{constructor(e){super(e),this.supportsMasking=!0,this.activation=Yg(e.activation)}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Kg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Yy.className="Activation",oc(Yy);class Qy extends Jf{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Mo((()=>{return e=Pf(e),t=e,n=this.n,Mo((()=>{if(2!==t.shape.length)throw new aT("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return sf($T(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Qy.className="RepeatVector",oc(Qy);class Jy extends Jf{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new aT("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=qT(e);if(null!==s){if(0===r||o%r!==0)throw new aT(n);a[s]=o/r}else if(o!==r)throw new aT(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Ll(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Jy.className="Reshape",oc(Jy);class Zy extends Jf{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=YT(1,e.dims.length+1);if(!ct(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new qf({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Vf(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return ip(Pf(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Zy.className="Permute",oc(Zy);class $y extends Jf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Pf(e);return Gl(Mh(n,this.maskValue),-1)}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e),a=Gl(Mh(n,this.maskValue),-1,!0);return Qi(n,Hi(a,n.dtype))}))}}$y.className="Masking",oc($y);class eb extends Jf{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(hT(e.inputLength))}this.inputDim=e.inputDim,xT(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xT(this.outputDim,"outputDim"),this.embeddingsInitializer=Mf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ny(e.embeddingsRegularizer),this.activityRegularizer=ny(e.activityRegularizer),this.embeddingsConstraint=Am(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Mo((()=>this.maskZero?(e=Pf(e),Mh(e,$i(e))):null))}computeOutputShape(e){if(e=Vf(e),null==this.inputLength)return[...e,this.outputDim];const t=hT(this.inputLength);if(t.length!==e.length-1)throw new aT('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new aT('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);let n=Pf(e);"int32"!==n.dtype&&(n=ZT(n,"int32"));const a=lf(this.embeddings.read(),Ll(n,[n.size]));return Ll(a,Vf(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Of(this.embeddingsInitializer),embeddingsRegularizer:ey(this.embeddingsRegularizer),activityRegularizer:ey(this.activityRegularizer),embeddingsConstraint:Gm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}eb.className="Embedding",oc(eb);class tb extends Jf{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new rT}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new aT("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Vf(e)]),e.length<2)throw new aT("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=mT(t),t.length>1)throw new aT("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===mT(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Mo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=XT(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=$T(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=Ll(s,[a].concat(qT(e.slice(1))));o=ip(o,[1,0]),o=Ll(o,r),t.push(o),n=!0}else if(e>1){const a=YT(1,e).concat([0]);t.push(ip(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Ll(ip(Ll(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(YT(0,r-1));a=ip(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=mT(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Mo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new aT("`mask` should be an Array");if(!Array.isArray(e))throw new aT("`inputs` should be an Array");if(t.length!==e.length)throw new aT("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:qu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ah(n,t[e]);return n}))}}class nb extends tb{constructor(e){super(e)}mergeFunction(e){return Mo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ki(t,e[n]);return t}))}}nb.className="Add",oc(nb);class ab extends tb{constructor(e){super(e)}mergeFunction(e){return Mo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Qi(t,e[n]);return t}))}}ab.className="Multiply",oc(ab);class rb extends tb{constructor(e){super(e)}mergeFunction(e){return Mo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ki(t,e[n]);return Qi(1/e.length,t)}))}}rb.className="Average",oc(rb);class sb extends tb{constructor(e){super(e)}mergeFunction(e){return Mo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=fc(t,e[n]);return t}))}}sb.className="Maximum",oc(sb);class ob extends tb{constructor(e){super(e)}mergeFunction(e){return Mo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Eh(t,e[n]);return t}))}}ob.className="Minimum",oc(ob);class ib extends tb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new aT("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(ct(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new aT("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Mo((()=>af(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new aT("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new aT("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new aT("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new aT("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return Mo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Hi(zh(e[s]),"bool")):t[s].rank<e[s].rank?a.push(qu(t[s],-1)):a.push(t[s]);const r=Vl(a,this.axis);return pl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function cb(e,t){for(;e<0;)e+=t;return e}ib.className="Concatenate",oc(ib);class lb extends tb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){rt(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new rT("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new aT("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new aT("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>cb(t,e[n].shape.length))):[cb(this.axes,n.shape.length),cb(this.axes,a.shape.length)],this.normalize&&(n=Sm(n,t[0]),a=Sm(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new rT("batchDot is not implemented for tensors of 4D or higher rank yet");if(rt(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),rt(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new rT("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return Mo((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ll(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ll(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?Bu(Qi(e,t),s[0]):Bu(Qi(ip(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=Bl(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=Ld(o,t)}return 1===o.shape.length&&(o=qu(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[cb(this.axes,e.length),cb(this.axes,t.length)],n}computeOutputShape(e){rt(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new rT("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}lb.className="Dot",oc(lb);class ub extends Jf{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e);return Gf((()=>Ki(of(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ub.className="GaussianNoise",oc(ub);class hb extends Jf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Mo((()=>{this.invokeCallHook(e,t);const n=Pf(e);if(this.rate>0&&this.rate<1){return Gf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Qi(n,of(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}hb.className="GaussianDropout",oc(hb);class db extends Jf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pf(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Mo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Pf(e),a=-1.7580993408473766;let r=$u(od(n),this.rate);r=ZT(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=Ki(Qi(t,r),Qi(Ki(r,-1),a));return Ki(Qi(i,s),o)};return Gf(a,(()=>Pf(e)),t.training||!1)}return e}))}}function pb(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Xl(e,t,n,a,r,o);else if(3===e.rank)s=Yl(e,t,n,a,r,o);else{if(4!==e.rank)throw new rT("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=Ql(e,t,n,a,r,o)}return s}function Gb(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ct(a.slice().sort(),YT(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Mo((()=>{const s=Fh(e,a),o=s.mean,i=s.variance;return[pb(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Mo((()=>{const s=Fh(e,a),o=s.mean,i=s.variance,c=[];for(const t of YT(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=Ll(o,c),u=Ll(i,c),h=null==t?null:Ll(t,c),d=null==n?null:Ll(n,c);return[pb(e,l,u,d,h,r),o,i]}))}(e,t,n,a,r)}db.className="AlphaDropout",oc(db);class Cb extends Jf{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Mf(e.betaInitializer||"zeros"),this.gammaInitializer=Mf(e.gammaInitializer||"ones"),this.movingMeanInitializer=Mf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Mf(e.movingVarianceInitializer||"ones"),this.betaConstraint=Am(e.betaConstraint),this.gammaConstraint=Am(e.gammaConstraint),this.betaRegularizer=ny(e.betaRegularizer),this.gammaRegularizer=ny(e.gammaRegularizer)}build(e){e=Vf(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new aT("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new qf({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Mo((()=>{const n=null!=t.training&&t.training,a=Pf(e),r=a.shape,s=r.length,o=YT(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=iT(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!ct(l,YT(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const e=Ll(this.movingMean.read(),c),t=Ll(this.movingVariance.read(),c),n=this.center?Ll(this.beta.read(),c):null,r=this.scale?Ll(this.gamma.read(),c):null;return pb(a,e,t,n,r,this.epsilon)}return pb(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Gb(a,this.gamma.read(),this.beta.read(),o,this.epsilon),G=(e,t,n)=>{Mo((()=>{const a=1-n,r=e.read(),s=Qi(dc(r,t),a);e.write(dc(r,s))}))};return(()=>{G(this.movingMean,d,this.momentum),G(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Of(this.betaInitializer),gammaInitializer:Of(this.gammaInitializer),movingMeanInitializer:Of(this.movingMeanInitializer),movingVarianceInitializer:Of(this.movingVarianceInitializer),betaRegularizer:ey(this.betaRegularizer),gammaRegularizer:ey(this.gammaRegularizer),betaConstraint:Gm(this.betaConstraint),gammaConstraint:Gm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Cb.className="BatchNormalization",oc(Cb);class Ab extends Jf{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Mf(e.betaInitializer||"zeros"),this.gammaInitializer=Mf(e.gammaInitializer||"ones"),this.betaRegularizer=ny(e.betaRegularizer),this.gammaRegularizer=ny(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Vf(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==mT(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=Pf(e),a=n.shape,r=a.length;return Mo((()=>{let{mean:e,variance:t}=Fh(n,this.axis,!0);const s=iT(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?Ll(e,s):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=Xu(e,l),t=Xu(t,l),null!=i&&(i=Xu(i,u)),null!=c&&(c=Xu(c,u)),pb(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Of(this.betaInitializer),gammaInitializer:Of(this.gammaInitializer),betaRegularizer:ey(this.betaRegularizer),gammaRegularizer:ey(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ab.className="LayerNormalization",oc(Ab);class Tb extends Jf{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new aT("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new aT("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new aT("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new qf({ndim:4})]}computeOutputShape(e){let t,n;return e=Vf(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Mo((()=>{return t=Pf(e),n=this.padding,a=this.dataFormat,Mo((()=>{if(4!==t.rank)throw new aT("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new aT("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new aT("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Vh(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function fb(e,t,n,a,r,s){return Mo((()=>{let o;MT(r),zT(s),LT(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=dy(e,r);const i="same"===a?"same":"valid";return o="max"===s?xh(e,t,n,i):zl(e,t,n,i),"channelsFirst"===r&&(o=ip(o,[0,3,1,2])),o}))}function mb(e,t,n,a,r,s){return Mo((()=>{let o;MT(r),zT(s),LT(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=py(e,r);const i="same"===a?"same":"valid";return o="max"===s?vh(e,t,n,i):Pl(e,t,n,i),"channelsFirst"===r&&(o=ip(o,[0,4,1,2,3])),o}))}Tb.className="ZeroPadding2D",oc(Tb);class gb extends Jf{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new aT("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(xT(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new aT("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}xT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,LT(this.padding),this.inputSpec=[new qf({ndim:3})]}computeOutputShape(e){const t=uy((e=Vf(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Mo((()=>{this.invokeCallHook(e,t),e=$T(Pf(e),2);const n=this.poolingFunction(Pf(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ld(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class yb extends gb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),fb(e,t,n,a,r,"max")}}yb.className="MaxPooling1D",oc(yb);class bb extends gb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),fb(e,t,n,a,r,"avg")}}bb.className="AveragePooling1D",oc(bb);class xb extends Jf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new aT("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];xT(this.poolSize,"poolSize"),xT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MT(this.dataFormat),LT(this.padding),this.inputSpec=[new qf({ndim:4})]}computeOutputShape(e){e=Vf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=uy(t,this.poolSize[0],this.padding,this.strides[0]),n=uy(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Mo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Pf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vb extends xb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),fb(e,t,n,a,r,"max")}}vb.className="MaxPooling2D",oc(vb);class wb extends xb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),fb(e,t,n,a,r,"avg")}}wb.className="AveragePooling2D",oc(wb);class kb extends Jf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new aT("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xT(this.poolSize,"poolSize"),xT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MT(this.dataFormat),LT(this.padding),this.inputSpec=[new qf({ndim:5})]}computeOutputShape(e){e=Vf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=uy(t,this.poolSize[0],this.padding,this.strides[0]),n=uy(n,this.poolSize[1],this.padding,this.strides[1]),a=uy(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return Mo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Pf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ib extends kb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),mb(e,t,n,a,r,"max")}}Ib.className="MaxPooling3D",oc(Ib);class Nb extends kb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return MT(r),LT(a),mb(e,t,n,a,r,"avg")}}Nb.className="AveragePooling3D",oc(Nb);class Sb extends Jf{constructor(e){super(e),this.inputSpec=[new qf({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new rT}}class Eb extends Sb{constructor(e){super(e||{})}call(e,t){return Mo((()=>{const t=Pf(e);return kh(t,1)}))}}Eb.className="GlobalAveragePooling1D",oc(Eb);class Rb extends Sb{constructor(e){super(e||{})}call(e,t){return Mo((()=>{const t=Pf(e);return Pu(t,1)}))}}Rb.className="GlobalMaxPooling1D",oc(Rb);class _b extends Jf{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MT(this.dataFormat),this.inputSpec=[new qf({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new rT}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fb extends _b{call(e,t){return Mo((()=>{const t=Pf(e);return"channelsLast"===this.dataFormat?kh(t,[1,2]):kh(t,[2,3])}))}}Fb.className="GlobalAveragePooling2D",oc(Fb);class Db extends _b{call(e,t){return Mo((()=>{const t=Pf(e);return"channelsLast"===this.dataFormat?Pu(t,[1,2]):Pu(t,[2,3])}))}}Db.className="GlobalMaxPooling2D",oc(Db);class Ob extends Jf{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Nm(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Mb extends Ob{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Vf(e)).length<3)throw new aT("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Vf(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return Mo((()=>Ey(((e,n)=>[Pf(this.layer.call(e,t)),[]]),e=Pf(e),[],!1,null,null,!1,!0)[1]))}}Mb.className="TimeDistributed",oc(Mb);class Lb extends Ob{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Nm(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Nm(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,yT(DT,"BidirectionalMergeMode",r),e.weights)throw new rT("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):uT(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Sy(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new aT("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new qf({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new rT("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Kf;for(const c of s)if(c instanceof Kf!==i)throw new aT("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return Mo((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=pd(r,1)),"concat"===this.mergeMode?o=af([a,r]):"sum"===this.mergeMode?o=Ki(a,r):"ave"===this.mergeMode?o=Qi(.5,Ki(a,r)):"mul"===this.mergeMode?o=Qi(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){BT(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),BT(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Nm(t.layer);if(delete t.layer,null!=t.numConstants)throw new rT("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Lb.className="Bidirectional",oc(Lb);class zb extends Jf{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Mo((()=>("float32"!==(e=Pf(e)).dtype&&(e=ZT(e,"float32")),Ki(Qi(e,this.scale),this.offset))))}}zb.className="Rescaling",oc(zb);const{resizeBilinear:Pb,cropAndResize:Vb}=wG;class Bb extends Jf{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return Mo((()=>{let c,l=!1;const u=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(l=!0,c=zd([e])):c=e;for(let e=0;e<c.shape[0];e++)h.push(u);const d=Ro(h,[h.length,4]),p=cd(0,h.length,1,"int32"),G=Vb(c,d,p,[a,r],"nearest");return ZT(l?Pf(tp(G)):G,i)}))}upsize(e,t,n,a){return Mo((()=>ZT(Pb(e,[t,n]),a)))}call(e,t){return Mo((()=>{const t=Pf(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Vf(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Bb.className="CenterCrop",oc(Bb);class Wb extends Jf{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Vf(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Mo((()=>{let n;if("int32"!==(e=Pf(e)).dtype&&(e=ZT(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new aT("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Pf(t.countWeights)}const a=Pu(e),r=Vu(e),s=Zu(this.numTokens,a).bufferSync().get(0),o=$u(r,0).bufferSync().get(0);if(!s||!o)throw new aT("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Pf(e);if("int32"!==r.dtype&&(r=ZT(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=qu(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=qu(r,-1)),r.rank>2)throw new aT("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let c;if(c=fu(i,"undefined"!==typeof a&&"count"===t?a:[],n,o),"tfIdf"!==t)return c;if(a)return Qi(c,a);throw new aT("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Wb.className="CategoryEncoding",oc(Wb);const Ub=new Set(["bilinear","nearest"]);class Hb extends Jf{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ub.has(e.interpolation))throw new aT("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Vf(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Mo((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return wG.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return wG.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ub]," are supported"))}))}}Hb.className="Resizing",oc(Hb);class jb{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}jb.className="RandomSeed";class qb extends Jf{constructor(e){super(e),this.randomGenerator=new jb(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}qb.className="BaseRandomLayer";const Kb=new Set(["bilinear","nearest"]);class Xb extends qb{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new aT("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new aT("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new aT("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Kb.has(n))throw new aT("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Vf(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Mo((()=>{const t=Pf(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=od([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return wG.resizeBilinear(e,r);case"nearest":return wG.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Kb]," are supported"))}}))}}Xb.className="RandomWidth",oc(Xb);var Yb,Qb;zt().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Yb||(Yb={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Qb||(Qb={}));const Jb={};function Zb(e){return Jb[e]}function $b(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return ex(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>ex(e,n,a,r)))}const c=ex(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:It(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function ex(e,t,n,a){const[r,s]=rx(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[ax(r,e)]));return void 0!==o?t[ax(r,o)][s]:void 0}function tx(e,t,n){return t[ax(e,n.currentContextId)]}function nx(e,t){const[n,a,r]=rx(e,t);return[ax(n,t&&t.currentContextId),a,r]}function ax(e,t){return t?"".concat(e,"-").concat(t):e}function rx(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function sx(e,t,n){let a=$b("pad",e,t,n);if("explicit"===a){a=$b("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function ox(e){return e.kept?e:ji(e)}const ix=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cx=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lx=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],ux=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hx=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dx=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],px=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Gx=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Cx=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Ax=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Tx=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],fx=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],mx=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],gx=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],yx=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],bx=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],xx=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],vx=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],wx=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class kx{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,i,c,l,u,h,d,p,G,C,A,T,f,m,g,y,b,x,v].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=nx(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?h.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=nx(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=nx(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Zb(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=Nx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Nx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=zx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=Ex(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=Ex(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Lx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Lx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=Sx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Sx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Vx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Vx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=Mx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Mx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Px(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Px(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=Fx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Fx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=Dx(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Dx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=_x(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_x(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=nx(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Rx(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=nx(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=nx(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Ix(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=zt().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Nx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?Ix(r.s,a):n}function Sx(e,t,n){const a=e[t];return a?a.b:n}function Ex(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function Rx(e){switch("string"===typeof e&&(e=Yb[e]),e){case Yb.DT_FLOAT:case Yb.DT_HALF:return"float32";case Yb.DT_INT32:case Yb.DT_INT64:case Yb.DT_INT8:case Yb.DT_UINT8:return"int32";case Yb.DT_BOOL:return"bool";case Yb.DT_DOUBLE:return"float32";case Yb.DT_STRING:return"string";case Yb.DT_COMPLEX64:case Yb.DT_COMPLEX128:return"complex64";default:return null}}function _x(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function Fx(e,t,n){const a=e[t];return a&&a.type?Rx(a.type):n}function Dx(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>Rx(e))):n}function Ox(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function Mx(e,t,n){const a=e[t];return a&&a.shape?Ox(a.shape):n}function Lx(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function zx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>Ix(e,a))):n}function Px(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>Ox(e))):n}function Vx(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class Bx{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ex(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ex(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ex(this.node.rawAttrs,e,t);if(null!=n.s)return Nx(this.node.rawAttrs,e,t);if(null!=n.b)return Sx(this.node.rawAttrs,e,t);if(null!=n.shape)return Mx(this.node.rawAttrs,e,t);if(null!=n.type)return Fx(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Lx(this.node.rawAttrs,e,t);if(null!=n.list.s)return zx(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Px(this.node.rawAttrs,e,t);if(null!=n.list.b)return Vx(this.node.rawAttrs,e,t);if(null!=n.list.type)return Dx(this.node.rawAttrs,e,t)}return t}}function Wx(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){rt(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];rt(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function Ux(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Hx(e,t,n){let a=jx(e,n);const r=!Ux(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=jx(e.shape,a)})),!Ux(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function jx(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class qx{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=tc(0),zo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Wx(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,zo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ro([],[0].concat(this.elementShape));const n=this.readMany(e);return Wx(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),zd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return Ro([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return Wx(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Vl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,tp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];Mo((()=>{t=Ll(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=Ll(Ul(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Kx{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));Wx(t,e.shape,"TensorList shape mismatch: "),zo(e)})),this.idTensor=tc(0),this.maxNumElements=a,zo(this.idTensor)}copy(){return new Kx([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));Wx(e,this.elementShape,"TensorList shape mismatch: ");const a=Hx(this.elementShape,this.tensors,e);return Mo((()=>{const e=this.tensors.map((e=>Ll(e,a)));return zd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Hx(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Wx(a.shape,e,"TensorList shape mismatch: "),Ll(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(Wx(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");zo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Kx([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));Wx(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=Hx(this.elementShape,this.tensors,t);return Ll(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));Wx(this.elementShape,t.shape,"TensorList shape mismatch: "),zo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));Wx(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=Hx(this.elementShape,this.tensors,n);return 0===e.length?Ro([],[0].concat(a)):Mo((()=>{const t=e.map((e=>Ll(this.tensors[e],a)));return zd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));Wx(this.elementShape,t,"TensorList shape mismatch: ");const n=Hx(this.elementShape,this.tensors,t);return 0===this.size()?Ro([],[0].concat(n)):Mo((()=>{const e=this.tensors.map((e=>Ll(e,n)));return Vl(e,0)}))}}const Xx=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=$b("thenBranch",e,t,n),r=$b("elseBranch",e,t,n),s=$b("cond",e,t,n),o=$b("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=$b("body",e,t,n),r=$b("cond",e,t,n),s=$b("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[ox($b("pred",e,t,n))];case"Switch":{const a=$b("pred",e,t,n);let r=$b("data",e,t,n);return r.kept||(r=ox(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==ex(e,t,n)));if(a){return[ox(ex(a,t,n))]}return}case"Enter":{const a=$b("frameName",e,t,n),r=$b("tensor",e,t,n);return n.enterFrame(a),[ox(r)]}case"Exit":{const a=$b("tensor",e,t,n);return n.exitFrame(),[ox(a)]}case"NextIteration":{const a=$b("tensor",e,t,n);return n.nextIteration(),[ox(a)]}case"TensorArrayV3":{const a=$b("size",e,t,n),r=$b("dtype",e,t,n),s=$b("elementShape",e,t,n),o=$b("dynamicSize",e,t,n),i=$b("clearAfterRead",e,t,n),c=$b("identicalElementShapes",e,t,n),l=$b("name",e,t,n),u=new qx(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,tc(1)]}case"TensorArrayWriteV3":{const a=$b("tensorArrayId",e,t,n),r=$b("index",e,t,n),s=$b("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=$b("tensorArrayId",e,t,n),r=$b("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=$b("tensorArrayId",e,t,n),r=$b("indices",e,t,n),s=$b("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=$b("tensorArrayId",e,t,n),r=$b("indices",e,t,n),s=$b("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=$b("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=$b("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=$b("tensorArrayId",e,t,n),r=$b("tensor",e,t,n),s=$b("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=$b("tensorArrayId",e,t,n);return[tc(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=$b("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=$b("tensorListId",e,t,n),r=$b("index",e,t,n),s=$b("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=$b("tensorListId",e,t,n),r=$b("index",e,t,n),s=$b("elementShape",e,t,n),o=$b("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=$b("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Kx([],n,e.dtype,a),o=tp(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}($b("tensor",e,t,n),a,$b("elementShape",e,t,n),$b("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=$b("elementShape",e,t,n),r=$b("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=$b(s,e,t,n),i=function(e,t,n,a){return new Kx([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=$b("tensorListId",e,t,n),r=$b("indices",e,t,n),s=$b("elementShape",e,t,n),o=$b("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=$b("tensorListId",e,t,n),r=$b("elementShape",e,t,n),s=$b("elementDType",e,t,n),o=$b("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));Wx(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=tp(e);return new Kx(r,t,a)}($b("tensor",e,t,n),$b("elementShape",e,t,n),$b("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=$b("tensorListId",e,t,n),r=n.getTensorList(a.id),s=$b("dtype",e,t,n),o=$b("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=$b("tensorListId",e,t,n),r=$b("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=$b("tensorListId",e,t,n),r=$b("elementShape",e,t,n),s=$b("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=$b("tensor",e,t,n),r=$b("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=jx(e.shape.slice(1),n),o=0===a?0:e.size/a,i=Mo((()=>{const n=[];e=Ll(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=Ll(Ul(e,i,c),s)}return e.dispose(),n})),c=new Kx([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,$b("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=$b("tensorListId",e,t,n);return[tc(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=$b("tensorListId",e,t,n),r=$b("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Yx(e,t,n){const[a,r]=$b("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=$b("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=$b("strides",e,t,n),h=sx(e,t,n),d=$b("dataFormat",e,t,n).toUpperCase(),p=$b("dilations",e,t,n);let[G,C]=$b("args",e,t,n);o&&(C=G,G=void 0);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:G,preluArg:C,activationFunc:r,leakyreluAlpha:$b("leakyreluAlpha",e,t,n)}}function Qx(e,t,n){return{boxes:$b("boxes",e,t,n),scores:$b("scores",e,t,n),maxOutputSize:$b("maxOutputSize",e,t,n),iouThreshold:$b("iouThreshold",e,t,n),scoreThreshold:$b("scoreThreshold",e,t,n),softNmsSigma:$b("softNmsSigma",e,t,n)}}class Jx{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=tc(0),this.tensorMap=new Map,zo(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tc(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Mo((()=>{const e=tp(t),a=n.length,r=e.length;rt(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];zo(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Mo((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return zd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function Zx(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Mo;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add($b("a",e,t,n),$b("b",e,t,n))];case"AddN":return[a.addN($b("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod($b("a",e,t,n),$b("b",e,t,n))];case"Mul":return[a.mul($b("a",e,t,n),$b("b",e,t,n))];case"RealDiv":case"Div":return[a.div($b("a",e,t,n),$b("b",e,t,n))];case"DivNoNan":return[a.divNoNan($b("a",e,t,n),$b("b",e,t,n))];case"FloorDiv":return[a.floorDiv($b("a",e,t,n),$b("b",e,t,n))];case"Sub":return[a.sub($b("a",e,t,n),$b("b",e,t,n))];case"Minimum":return[a.minimum($b("a",e,t,n),$b("b",e,t,n))];case"Maximum":return[a.maximum($b("a",e,t,n),$b("b",e,t,n))];case"Pow":return[a.pow($b("a",e,t,n),$b("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference($b("a",e,t,n),$b("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs($b("x",e,t,n))];case"Acos":return[a.acos($b("x",e,t,n))];case"Acosh":return[a.acosh($b("x",e,t,n))];case"Asin":return[a.asin($b("x",e,t,n))];case"Asinh":return[a.asinh($b("x",e,t,n))];case"Atan":return[a.atan($b("x",e,t,n))];case"Atan2":return[a.atan2($b("x",e,t,n),$b("y",e,t,n))];case"Atanh":return[a.atanh($b("x",e,t,n))];case"Ceil":return[a.ceil($b("x",e,t,n))];case"Complex":return[a.complex($b("real",e,t,n),$b("imag",e,t,n))];case"Cos":return[a.cos($b("x",e,t,n))];case"Cosh":return[a.cosh($b("x",e,t,n))];case"Elu":return[a.elu($b("x",e,t,n))];case"Erf":return[a.erf($b("x",e,t,n))];case"Exp":return[a.exp($b("x",e,t,n))];case"Expm1":return[a.expm1($b("x",e,t,n))];case"Floor":return[a.floor($b("x",e,t,n))];case"Log":return[a.log($b("x",e,t,n))];case"Log1p":return[a.log1p($b("x",e,t,n))];case"Imag":return[a.imag($b("x",e,t,n))];case"Neg":return[a.neg($b("x",e,t,n))];case"Reciprocal":return[a.reciprocal($b("x",e,t,n))];case"Real":return[a.real($b("x",e,t,n))];case"Relu":return[a.relu($b("x",e,t,n))];case"Round":return[a.round($b("x",e,t,n))];case"Selu":return[a.selu($b("x",e,t,n))];case"Sigmoid":return[a.sigmoid($b("x",e,t,n))];case"Sin":return[a.sin($b("x",e,t,n))];case"Sign":return[a.sign($b("x",e,t,n))];case"Sinh":return[a.sinh($b("x",e,t,n))];case"Softplus":return[a.softplus($b("x",e,t,n))];case"Sqrt":return[a.sqrt($b("x",e,t,n))];case"Square":return[a.square($b("x",e,t,n))];case"Tanh":return[a.tanh($b("x",e,t,n))];case"Tan":return[a.tan($b("x",e,t,n))];case"ClipByValue":return[a.clipByValue($b("x",e,t,n),$b("clipValueMin",e,t,n),$b("clipValueMax",e,t,n))];case"Relu6":return[a.relu6($b("x",e,t,n))];case"Rsqrt":return[a.rsqrt(ex(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu($b("x",e,t,n),$b("alpha",e,t,n))];case"Prelu":return[a.prelu($b("x",e,t,n),$b("alpha",e,t,n))];case"IsNan":return[a.isNaN(ex(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(ex(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(ex(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Xx(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Conv1D":{const r=$b("stride",e,t,n),s=$b("pad",e,t,n),o=$b("dataFormat",e,t,n).toUpperCase(),i=$b("dilation",e,t,n);return[a.conv1d($b("x",e,t,n),$b("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=$b("strides",e,t,n),s=sx(e,t,n),o=$b("dataFormat",e,t,n).toUpperCase(),i=$b("dilations",e,t,n);return[a.conv2d($b("x",e,t,n),$b("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Yx(e,t,n);return[a.fused.conv2d({x:$b("x",e,t,n),filter:$b("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Yx(e,t,n);return[a.fused.depthwiseConv2d({x:$b("x",e,t,n),filter:$b("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$b("outputShape",e,t,n),s=$b("strides",e,t,n),o=sx(e,t,n);return[a.conv2dTranspose($b("x",e,t,n),$b("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$b("strides",e,t,n),s=sx(e,t,n),o=$b("dilations",e,t,n),i=$b("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d($b("input",e,t,n),$b("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("dataFormat",e,t,n).toUpperCase(),i=$b("dilations",e,t,n);return[a.conv3d($b("x",e,t,n),$b("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("kernelSize",e,t,n);return[a.avgPool($b("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("kernelSize",e,t,n);return[a.maxPool($b("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("kernelSize",e,t,n),i=$b("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax($b("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("kernelSize",e,t,n);return[a.avgPool3d($b("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("kernelSize",e,t,n);return[a.maxPool3d($b("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=$b("strides",e,t,n),s=$b("pad",e,t,n),o=$b("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d($b("x",e,t,n),$b("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Fill":{const r=$b("shape",e,t,n),s=$b("dtype",e,t,n),o=$b("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=$b("start",e,t,n),s=$b("stop",e,t,n),o=$b("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=$b("logits",e,t,n),s=$b("numSamples",e,t,n),o=$b("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=$b("indices",e,t,n),s=$b("depth",e,t,n),o=$b("onValue",e,t,n),i=$b("offValue",e,t,n),c=$b("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones($b("shape",e,t,n),$b("dtype",e,t,n))];case"OnesLike":return[a.onesLike($b("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal($b("shape",e,t,n),$b("dtype",e,t,n),$b("seed",e,t,n))];case"RandomUniform":return[a.randomUniform($b("shape",e,t,n),$b("minval",e,t,n),$b("maxval",e,t,n),$b("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt($b("shape",e,t,n),$b("minval",e,t,n),$b("maxval",e,t,n),$b("seed",e,t,n))];case"Range":{const r=$b("start",e,t,n),s=$b("stop",e,t,n),o=$b("step",e,t,n);return[a.range(r,s,o,$b("dtype",e,t,n))]}case"TruncatedNormal":{const r=$b("shape",e,t,n),s=$b("mean",e,t,n),o=$b("stdDev",e,t,n),i=$b("seed",e,t,n);return[a.truncatedNormal(r,s,o,$b("dtype",e,t,n),i)]}case"Zeros":return[a.zeros($b("shape",e,t,n),$b("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike($b("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:w;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Qx(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Qx(e,t,n),l=$b("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Qx(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast($b("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync($b("x",e,t,n),$b("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"LowerBound":{const r=$b("sortedSequence",e,t,n),s=$b("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=$b("x",e,t,n),s=$b("k",e,t,n),o=$b("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=$b("sortedSequence",e,t,n),s=$b("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=$b("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=$b("x",e,t,n),s=$b("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"ResizeBilinear":{const r=$b("images",e,t,n),s=$b("size",e,t,n),o=$b("alignCorners",e,t,n),i=$b("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=$b("images",e,t,n),s=$b("size",e,t,n),o=$b("alignCorners",e,t,n),i=$b("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=$b("image",e,t,n),s=$b("boxes",e,t,n),o=$b("boxInd",e,t,n),i=$b("cropSize",e,t,n),c=$b("method",e,t,n),l=$b("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=$b("images",e,t,n),s=$b("transforms",e,t,n),o=$b("outputShape",e,t,n),i=$b("fillValue",e,t,n),c=$b("interpolation",e,t,n),l=$b("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=$b("default",e,t,n);return[ex(e.name,t,n)||r];case"Placeholder":return[ex(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ox($b("x",e,t,n))];case"IdentityN":return $b("x",e,t,n).map((e=>ox(e)));case"Shape":return[a.tensor1d($b("x",e,t,n).shape,"int32")];case"ShapeN":return $b("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar($b("x",e,t,n).size,"int32")];case"Rank":return[a.scalar($b("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=$b("x",e,t,n),o=$b("data",e,t,n),i=$b("message",e,t,n),c=$b("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Equal":return[a.equal($b("a",e,t,n),$b("b",e,t,n))];case"NotEqual":return[a.notEqual($b("a",e,t,n),$b("b",e,t,n))];case"Greater":return[a.greater($b("a",e,t,n),$b("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual($b("a",e,t,n),$b("b",e,t,n))];case"Less":return[a.less($b("a",e,t,n),$b("b",e,t,n))];case"LessEqual":return[a.lessEqual($b("a",e,t,n),$b("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd($b("a",e,t,n),$b("b",e,t,n))];case"LogicalNot":return[a.logicalNot($b("a",e,t,n))];case"LogicalOr":return[a.logicalOr($b("a",e,t,n),$b("b",e,t,n))];case"Select":case"SelectV2":return[a.where($b("condition",e,t,n),$b("a",e,t,n),$b("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd($b("a",e,t,n),$b("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul($b("a",e,t,n),$b("b",e,t,n),$b("transposeA",e,t,n),$b("transposeB",e,t,n))];case"Einsum":return[a.einsum($b("equation",e,t,n),...$b("tensors",e,t,n))];case"Transpose":return[a.transpose($b("x",e,t,n),$b("perm",e,t,n))];case"_FusedMatMul":const[r,s]=$b("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=$b("numArgs",e,t,n),l=$b("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=$b("args",e,t,n);return[a.fused.matMul({a:$b("a",e,t,n),b:$b("b",e,t,n),transposeA:$b("transposeA",e,t,n),transposeB:$b("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart($b("a",e,t,n),$b("numLower",e,t,n),$b("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm($b("x",e,t,n),$b("axis",e,t,n),$b("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm($b("x",e,t,n),$b("mean",e,t,n),$b("variance",e,t,n),$b("offset",e,t,n),$b("scale",e,t,n),$b("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization($b("x",e,t,n),$b("radius",e,t,n),$b("bias",e,t,n),$b("alpha",e,t,n),$b("beta",e,t,n))];case"Softmax":return[a.softmax($b("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax($b("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather($b("paramsNestedSplits",e,t,n),$b("paramsDenseValues",e,t,n),$b("indices",e,t,n),$b("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange($b("starts",e,t,n),$b("limits",e,t,n),$b("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor($b("shape",e,t,n),$b("values",e,t,n),$b("defaultValue",e,t,n),$b("rowPartitionTensors",e,t,n),$b("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Max":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.max($b("x",e,t,n),r,s)]}case"Mean":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.mean($b("x",e,t,n),r,s)]}case"Min":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.min($b("x",e,t,n),r,s)]}case"Sum":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.sum($b("x",e,t,n),r,s)]}case"All":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.all($b("x",e,t,n),r,s)]}case"Any":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.any($b("x",e,t,n),r,s)]}case"ArgMax":{const r=$b("axis",e,t,n);return[a.argMax($b("x",e,t,n),r)]}case"ArgMin":{const r=$b("axis",e,t,n);return[a.argMin($b("x",e,t,n),r)]}case"Prod":{const r=$b("axis",e,t,n),s=$b("keepDims",e,t,n);return[a.prod($b("x",e,t,n),r,s)]}case"Cumprod":{const r=$b("axis",e,t,n),s=$b("exclusive",e,t,n),o=$b("reverse",e,t,n);return[a.cumprod($b("x",e,t,n),r,s,o)]}case"Cumsum":{const r=$b("axis",e,t,n),s=$b("exclusive",e,t,n),o=$b("reverse",e,t,n);return[a.cumsum($b("x",e,t,n),r,s,o)]}case"Bincount":const r=$b("x",e,t,n),s=$b("weights",e,t,n),o=$b("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=$b("x",e,t,n),s=$b("weights",e,t,n),o=$b("size",e,t,n),i=$b("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"ConcatV2":case"Concat":{const r=$b("n",e,t,n),s=$b("axis",e,t,n);let o=$b("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=$b("x",e,t,n),s=$b("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=$b("axis",e,t,n),s=$b("batchDims",e,t,n),o=$b("x",e,t,n),i=$b("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=$b("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=$b("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=$b("axis",e,t,n),s=$b("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=$b("begin",e,t,n),s=$b("size",e,t,n);return[a.slice($b("x",e,t,n),r,s)]}case"StridedSlice":{const r=$b("begin",e,t,n),s=$b("end",e,t,n),o=$b("strides",e,t,n),i=$b("beginMask",e,t,n),c=$b("endMask",e,t,n),l=$b("ellipsisMask",e,t,n),u=$b("newAxisMask",e,t,n),h=$b("shrinkAxisMask",e,t,n),d=$b("x",e,t,n);return[a.stridedSlice(d,r,s,o,i,c,l,u,h)]}case"Pack":return Mo((()=>{const r=$b("axis",e,t,n),s=$b("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=ct(e.shape,o);if(!t&&!ct(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=$b("axis",e,t,n),s=$b("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=$b("reps",e,t,n);return[a.tile($b("x",e,t,n),r)]}case"Split":case"SplitV":{const r=$b("axis",e,t,n),s=$b("numOrSizeSplits",e,t,n),o=$b("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=$b("indices",e,t,n),s=$b("values",e,t,n),o=$b("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=$b("x",e,t,n),s=$b("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=$b("sparseIndices",e,t,n),s=$b("outputShape",e,t,n),o=$b("sparseValues",e,t,n),i=$b("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=$b("indices",e,t,n),s=$b("values",e,t,n),o=$b("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows($b("indices",e,t,n),$b("values",e,t,n),$b("denseShape",e,t,n),$b("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape($b("inputIndices",e,t,n),$b("inputShape",e,t,n),$b("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean($b("data",e,t,n),$b("indices",e,t,n),$b("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum($b("data",e,t,n),$b("indices",e,t,n),$b("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"FFT":return[a.fft($b("x",e,t,n))];case"IFFT":return[a.ifft($b("x",e,t,n))];case"RFFT":return[a.rfft($b("x",e,t,n))];case"IRFFT":return[a.irfft($b("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace($b("input",e,t,n),$b("pattern",e,t,n),$b("rewrite",e,t,n),$b("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams($b("data",e,t,n),$b("dataSplits",e,t,n),$b("separator",e,t,n),$b("nGramWidths",e,t,n),$b("leftPad",e,t,n),$b("rightPad",e,t,n),$b("padWidth",e,t,n),$b("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit($b("input",e,t,n),$b("delimiter",e,t,n),$b("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast($b("input",e,t,n),$b("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Cast":return[a.cast($b("x",e,t,n),$b("dtype",e,t,n))];case"ExpandDims":{const r=$b("axis",e,t,n);return[a.expandDims($b("x",e,t,n),r)]}case"Squeeze":{const r=$b("axis",e,t,n);return[a.squeeze($b("x",e,t,n),r)]}case"Reshape":return[a.reshape($b("x",e,t,n),$b("shape",e,t,n))];case"EnsureShape":return[a.ensureShape($b("x",e,t,n),$b("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad($b("x",e,t,n),$b("padding",e,t,n),$b("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad($b("x",e,t,n),$b("padding",e,t,n),$b("constantValue",e,t,n))];case"SpaceToBatchND":{const r=$b("blockShape",e,t,n),s=$b("paddings",e,t,n);return[a.spaceToBatchND($b("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=$b("blockShape",e,t,n),s=$b("crops",e,t,n);return[a.batchToSpaceND($b("x",e,t,n),r,s)]}case"DepthToSpace":{const r=$b("blockSize",e,t,n),s=$b("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace($b("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo($b("x",e,t,n),$b("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs($b("s0",e,t,n),$b("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=$b("keyDType",e,t,n),s=$b("valueDType",e,t,n),o=new Jx(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=$b("tableHandle",e,t,n,a),s=$b("keys",e,t,n),o=$b("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=$b("tableHandle",e,t,n,a),s=$b("keys",e,t,n),o=$b("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=$b("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=Zb(e.op);if(s&&s.customExecutor)return s.customExecutor(new Bx(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return Dt(s)?s.then((e=>[].concat(e))):[].concat(s)}class $x{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ev(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>rx(e)[0])));a=a||[];const u=new Set(a.map((e=>rx(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(ov(e)||iv(e)||cv(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function tv(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>rx(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),h={};for(const C of l){h[C.name]=h[C.name]||0;for(const e of C.children)o(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const G=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new nv("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new nv("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new nv("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new nv("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(G,c),G}class nv extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const av=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),rv=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),sv=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ov(e){return av.has(e.op)}function iv(e){return rv.has(e.op)}function cv(e){return sv.has(e.op)}class lv{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new lv(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=ev(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=tv(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>ov(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return zo(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[rx(e)[0]])),r=t.map((e=>rx(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=zt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(OB){this.keepIntermediateTensors=!1,console.warn(OB.message)}const l={},u={};return Mo((()=>{const n=new $x(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=rx(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=Zx(e,a,n,this._resourceManager);if(Dt(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>ex(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!ov(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(ov(e))continue;const t=tx(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return ov(e)||r.has(e.name)}if(!ov(e)&&null!=s)for(const i of s){if(o(i))continue;const e=tx(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=zt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(OB){this.keepIntermediateTensors=!1,console.warn(OB.message)}const s=new $x(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>ex(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[rx(e)[0]])),o=n.map((e=>rx(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:d}=ev(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),G=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=rx(t),r=[];r[a]=e[t],G[n]=r}));const C={},A=this.getFrozenTensorIds(G),T={};for(;p.length>0;){const e=this.processStack(s,p,t,G,T,A,i,C,l);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const f=c.filter((e=>!ov(e)&&!ex(e.name,G,t))).map((e=>e.name));if(f.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(f,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return G}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&$b("isConstant",e.node,a,n)&&([u]=nx(e.node.name,n)),null==a[e.node.name]){const h=Zx(e.node,a,n,this._resourceManager);u||([u]=nx(e.node.name,n));const d=n.currentContext;Dt(h)?l.push(h.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(h)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=nx(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ex(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ex(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=rx(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;rt(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&rt(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=rx(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=rx(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class uv{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const hv="?tfjs-format=file",dv="model.json";class pv{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new uv}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Dt(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Xo(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new lv(kx.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=kx.Instance.transformGraph(e.modelInitializer);this.initializer=new lv(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Xs?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Xs)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Lo(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Gv(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(dv).concat(hv)}(t));const r=new pv(t,n,a);return await r.load(),r}function Cv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(mv(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=Cv(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function Av(e){return Tv(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:fv)}function Tv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(mv(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=Tv(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function fv(e){return null===e?null:mv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function mv(e){let t=!1;if(zt().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Xs)&&!(e instanceof Promise)&&!t)}function gv(e){return function(e,t){return Cv(e,t)}(e,yv)}function yv(e){return e instanceof Xs?{value:e.clone(),recurse:!1}:mv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class bv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class xv extends bv{constructor(){super(xv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function vv(e){return new Nv(e)}function wv(e,t){return new Pv(e,t)}xv.INITIAL_CAPACITY=32;class kv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ov(this,e)}filter(e){return new Fv(this,e)}map(e){return new Dv(this,e)}mapAsync(e){return new Mv(this,e)}serialMapAsync(e){return new Mv(this,e).serial()}flatmap(e){return new zv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new _v(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:fv;return this.rowMajorBatch(e,t).map((e=>Av(e,n)))}concatenate(e,t){return new Pv(new Iv([this,e]),t)}take(e){return e<0||null==e?this:new Rv(this,e)}skip(e){return e<0||null==e?this:new Ev(this,e)}prefetch(e){return new Bv(this,e)}shuffle(e,t){return new Wv(this,e,t)}serial(){return new Sv(this)}}class Iv extends kv{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:gv(e),done:!1}}}class Nv extends kv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(OB){throw OB.message="Error thrown while iterating through a dataset: ".concat(OB.message),OB}}}class Sv extends kv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ev extends kv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Lo(e.value)}return this.upstream.next()}}class Rv extends kv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class _v extends kv{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Fv extends kv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Lo(e.value)}}}class Dv extends kv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=lo(e.value),n=this.transform(e.value),a=lo(n);for(const r of t)co(r,a)||r.dispose();return{value:n,done:!1}}}class Ov extends kv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(OB){if(!this.handler(OB))return{value:null,done:!0}}}}class Mv extends kv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=lo(e.value),n=await this.transform(e.value),a=lo(n);for(const r of t)co(r,a)||r.dispose();return{value:n,done:!1}}}class Lv extends kv{constructor(){super(),this.outputQueue=new xv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class zv extends Lv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=lo(e.value),n=this.transform(e.value),a=lo(n);this.outputQueue.pushAll(n);for(const r of t)co(r,a)||r.dispose();return!0}}class Pv extends kv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Vv;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Vv||(Vv={}));class Bv extends kv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new bv(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Wv extends Bv{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=$h.alea(n||Ns().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Uv{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return rt(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Hv((async()=>(await n.iterator()).columnMajorBatch(e,t,jv)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Hv((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Hv((async()=>(await t.iterator()).filter((t=>Mo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Hv((async()=>(await t.iterator()).map((t=>Mo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Hv((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Hv((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Hv((async()=>wv(vv((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Hv((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=$h.alea(t||Ns().toString());return Hv((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Hv((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Hv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Uv{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function jv(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Xs||Rs(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Xs?zd(e):Ro(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Uv.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function qv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&rt("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const Kv=rp;class Xv extends Ze{nextDataId(){return Xv.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Je(this,Do())}write(e,t,n){this.firstUse&&(this.firstUse=!1,zt().get("IS_NODE")&&ts("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&gt(n[0])){const r=n.map((e=>Ss(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return aC(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Es(e)));return Ui(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ui(e.shape,e.dtype,t)}makeOutput(e,t,n){return Do().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ns();e();return{kernelMs:Ns()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){qv([e],"where");const t=this.readSync(e.dataId);return Kv(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xv.nextDataId=0;function Yv(e){return(t,n,a)=>{const r=Tt(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function Qv(e,t,n){return Jv(e,Yv(t),n)}function Jv(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;qv(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=LC(l)}else u=l;const h=n||i.dtype,d=t(u,h,s);return c.makeTensorInfo(i.shape,h,d)}}Po("cpu",(()=>new Xv),1);const Zv=Qv(Wn,(e=>e>=0?e:Math.exp(e)-1)),$v={kernelName:Wn,backendName:"cpu",kernelFunc:Zv};function ew(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const tw={kernelName:sa,backendName:"cpu",kernelFunc:ew};function nw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;qv([r],"leakyRelu");const o=it(r.shape),i=n.data.get(r.dataId).values,c=At("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const aw={kernelName:ha,backendName:"cpu",kernelFunc:nw};function rw(e){return(t,n,a,r,s)=>{const o=Tc(t,n),i=o.length,c=wt(o),l=At(s,it(o)),u=t.length,h=n.length,d=wt(t),p=wt(n),G=Cc(t,o),C=Cc(n,o);if(G.length+C.length===0)for(let A=0;A<l.length;++A)l[A]=e(a[A%a.length],r[A%r.length]);else for(let A=0;A<l.length;++A){const t=Ft(A,i,c),n=t.slice(-u);G.forEach((e=>n[e]=0));const s=_t(n,u,d),o=t.slice(-h);C.forEach((e=>o[e]=0));const T=_t(o,h,p);l[A]=e(a[s],r[T])}return[l,o]}}const sw=rw(((e,t)=>e<0?t*e:e));function ow(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;qv([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=sw(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const iw={kernelName:qa,backendName:"cpu",kernelFunc:ow},cw=Qv(er,(e=>Math.max(0,e))),lw={kernelName:er,backendName:"cpu",kernelFunc:cw},uw=Qv(or,(e=>Math.min(Math.max(0,e),6))),hw={kernelName:or,backendName:"cpu",kernelFunc:uw},dw=Yv((e=>1/(1+Math.exp(-e)))),pw=Qv(mr,(e=>1/(1+Math.exp(-e)))),Gw={kernelName:mr,backendName:"cpu",kernelFunc:pw};function Cw(e,t,n,a,r){if("linear"===n)return ew({inputs:{x:t},backend:e});if("relu"===n)return cw({inputs:{x:t},backend:e});if("elu"===n)return Zv({inputs:{x:t},backend:e});if("relu6"===n)return uw({inputs:{x:t},backend:e});if("prelu"===n)return ow({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return nw({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return pw({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Aw(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const Tw={kernelName:An,backendName:"cpu",kernelFunc:Aw};function fw(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Aw({inputs:{real:fw(e,t,"float32"),imag:fw(e,t,"float32")},backend:e})}const a=St(it(t),n);return e.makeTensorInfo(t,n,a)}function mw(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const gw={kernelName:Za,backendName:"cpu",kernelFunc:mw};function yw(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=Is([0],n),[r,s]=rw(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function bw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return ew({inputs:{x:r},backend:n});const e=fw(n,r.shape,r.dtype),t=bw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Aw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=mw({inputs:{input:r},backend:n}),t=bw({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ft(r.dtype,s)){const e=ew({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=yw(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const xw={kernelName:pn,backendName:"cpu",kernelFunc:bw};function vw(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;qv([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,h="string"===o.dtype?LC(l):l,d="string"===o.dtype?LC(u):u,p=a||o.dtype,[G,C]=t(o.shape,i.shape,h,d,p);return c.makeTensorInfo(C,p,G)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=bw({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=bw({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,G=c.data.get(d.dataId).values,C=c.data.get(p.dataId).values,[A,T,f]=n(o.shape,i.shape,s,l,G,C),m=c.makeTensorInfo(f,"float32",A),g=c.makeTensorInfo(f,"float32",T),y=Aw({inputs:{real:m,imag:g},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(g),y}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function ww(e){return(t,n,a,r,s,o)=>{const i=Tc(t,n),c=it(i),l=i.length,u=wt(i),h=At("float32",c),d=At("float32",c),p=Cc(t,i),G=Cc(n,i),C=aC(a,r),A=aC(s,o),T=t.length,f=wt(t),m=n.length,g=wt(n);if(p.length+G.length===0)for(let y=0;y<h.length;y++){const t=y%C.length,n=y%A.length,a=e(C[2*t],C[2*t+1],A[2*n],A[2*n+1]);h[y]=a.real,d[y]=a.imag}else for(let y=0;y<h.length;y++){const t=Ft(y,l,u),n=t.slice(-T);p.forEach((e=>n[e]=0));const a=_t(n,T,f),r=t.slice(-m);G.forEach((e=>r[e]=0));const s=_t(r,m,g),o=e(C[2*a],C[2*a+1],A[2*s],A[2*s+1]);h[y]=o.real,d[y]=o.imag}return[h,d,i]}}const kw=rw(((e,t)=>e+t)),Iw=ww(((e,t,n,a)=>({real:e+n,imag:t+a}))),Nw=vw(qt,kw,Iw),Sw={kernelName:qt,backendName:"cpu",kernelFunc:Nw};function Ew(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=it(r.shape),i=pt(s,o),c=it(i);rt(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const Rw={kernelName:tr,backendName:"cpu",kernelFunc:Ew};function _w(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;qv([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],h=i?s.shape[l-1]:s.shape[l-2],d=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],G=r.shape.slice(0,-2),C=s.shape.slice(0,-2),A=it(G),T=it(C),f=Tc(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);rt(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const m=i?[T,p,h]:[T,h,p],g=Ew({inputs:{x:r},backend:n,attrs:{shape:o?[A,u,d]:[A,d,u]}}),y=Ew({inputs:{x:s},backend:n,attrs:{shape:m}}),b=o?g.shape[1]:g.shape[2],x=o?g.shape[2]:g.shape[1],v=i?y.shape[1]:y.shape[2],w=Math.max(A,T),k=n.data.get(g.dataId).values,I=n.data.get(y.dataId).values,N=wt(g.shape),S=wt(y.shape),[E,R,_]=o?[N[0],1,N[1]]:[N[0],N[1],1],[F,D,O]=i?[1,S[1],S[0]]:[S[1],1,S[0]],M=x*v,L=Ui([w,x,v],g.dtype),z=L.values,P=n.blockSize;for(let V=0;V<w;V++){const e=V%A,t=V%T;for(let n=0;n<x;n+=P){const a=Math.min(n+P,x);for(let r=0;r<v;r+=P){const s=Math.min(r+P,v);for(let o=0;o<b;o+=P){const i=Math.min(o+P,b);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=k[e*E+c*R+r*_]*I[r*F+n*D+t*O]}z[V*M+(c*v+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.makeTensorInfo(f,L.dtype,L.values)}const Fw={kernelName:cn,backendName:"cpu",kernelFunc:_w};const Dw={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,G;const C=[];d=_w({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=Nw({inputs:{a:d,b:o},backend:n}),C.push(d),d=p),u&&(G=Cw(n,d,u,i,h),C.push(d),d=G);for(const A of C)n.disposeIntermediateTensorInfo(A);return d}};function Ow(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Mw={kernelName:Ut,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;qv(t,"abs");let a=new Float32Array(it(t.shape));return a=Ow(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},Lw=Qv(Ht,(e=>Math.acos(e))),zw={kernelName:Ht,backendName:"cpu",kernelFunc:Lw},Pw=Qv(jt,(e=>Math.acosh(e))),Vw={kernelName:jt,backendName:"cpu",kernelFunc:Pw};const Bw={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;qv(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=Ui(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Ww(e,t,n,a,r){const s=t.length,o=it(t),i=wt(t),c=wt(r),l=At(n,it(r));for(let u=0;u<o;++u){const t=Ft(u,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[_t(n,s,c)]=e[u]}return l}function Uw(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;qv(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=Ww(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const Hw={kernelName:Hr,backendName:"cpu",kernelFunc:Uw};const jw={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;qv(r,"all");const i=Gt(s,r.shape);let c=i;const l=Mu(c,r.shape.length);let u=r;null!=l&&(u=Uw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=zu(c.length,r.shape.length)),Ou("all",c,u.shape.length);const[h,d]=Fu(u.shape,c),p=it(d),G=St(it(h),u.dtype),C=n.data.get(u.dataId).values;for(let T=0;T<G.length;++T){const e=T*p;let t=C[e];for(let n=0;n<p;++n){const a=C[e+n];t=t&&a}G[T]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const A=n.makeTensorInfo(h,u.dtype,G);if(o){const e=Ew({inputs:{x:A},backend:n,attrs:{shape:Du(h,i)}});return n.disposeIntermediateTensorInfo(A),e}return A}};const qw={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;qv(r,"any");const i=Gt(s,r.shape);let c=i;const l=Mu(c,r.shape.length);let u=r;null!=l&&(u=Uw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=zu(c.length,r.shape.length)),Ou("any",c,u.shape.length);const[h,d]=Fu(u.shape,c),p=it(d),G=St(it(h),u.dtype),C=n.data.get(u.dataId).values;for(let T=0;T<G.length;++T){const e=T*p;let t=C[e];for(let n=0;n<p;++n){const a=C[e+n];t=t||a}G[T]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const A=n.makeTensorInfo(h,u.dtype,G);if(o){const e=Ew({inputs:{x:A},backend:n,attrs:{shape:Du(h,i)}});return n.disposeIntermediateTensorInfo(A),e}return A}};const Kw={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;qv(r,"argMax");let o=Gt(s,r.shape);const i=Mu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Uw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=zu(o.length,c.shape.length)),o=[o[0]],Ou("argMax",o,c.shape.length);const[u,h]=Fu(c.shape,o),d=St(it(u),"int32"),p=it(h),G=n.data.get(c.dataId).values;for(let C=0;C<d.length;++C){const e=C*p;let t=G[e],n=0;for(let a=0;a<p;++a){const r=G[e+a];r>t&&(t=r,n=a)}d[C]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}};const Xw={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;qv(r,"argMin");let o=Gt(s,r.shape);const i=Mu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Uw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=zu(o.length,c.shape.length)),o=[o[0]],Ou("argMin",o,c.shape.length);const[u,h]=Fu(c.shape,o),d=St(it(u),"int32"),p=it(h),G=n.data.get(c.dataId).values;for(let C=0;C<d.length;++C){const e=C*p;let t=G[e],n=0;for(let a=0;a<p;++a){const r=G[e+a];r<t&&(t=r,n=a)}d[C]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},Yw=Qv(Zt,(e=>Math.asin(e))),Qw={kernelName:Zt,backendName:"cpu",kernelFunc:Yw},Jw=Qv($t,(e=>Math.asinh(e))),Zw={kernelName:$t,backendName:"cpu",kernelFunc:Jw},$w=Qv(en,(e=>Math.atan(e))),ek={kernelName:en,backendName:"cpu",kernelFunc:$w},tk=rw(((e,t)=>Math.atan2(e,t))),nk=vw(nn,tk),ak={kernelName:nn,backendName:"cpu",kernelFunc:nk},rk=Qv(tn,(e=>Math.atanh(e))),sk={kernelName:tn,backendName:"cpu",kernelFunc:rk};function ok(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,G="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=Ui(r.outShape,n),A=C.values,T=r.outShape[1]*r.outShape[2]*r.outShape[3],f=r.outShape[2]*r.outShape[3],m=r.outShape[3];for(let g=0;g<r.batchSize;++g){const t=g*T,n=g*a[0];for(let C=0;C<r.inChannels;++C)for(let T=0;T<r.outHeight;++T){const g=T*o-d,y=Math.max(0,g),b=Math.min(r.inHeight,u+g),x=t+T*f;for(let t=0;t<r.outWidth;++t){const o=t*i-p,u=Math.max(0,o),d=Math.min(r.inWidth,h+o);let T=G,f=0,g=0;for(let t=y;t<b;t+=c){const r=n+t*a[1];for(let t=u;t<d;t+=l){const n=e[r+t*a[2]+C];"max"===s&&n>T?T=n:"avg"===s&&(f+=n,g++)}if(isNaN(T))break}A[x+t*m+C]="avg"===s?f/g:T}}}return C}function ik(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Ui(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,G=a.padInfo.left,C=Ui(t,n,e);for(let A=0;A<a.batchSize;++A)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let T=n;for(;T<0;)T+=l;const f=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-G;let p=h;for(;p<0;)p+=u;const m=Math.min(a.inWidth,d+h);let g=Number.NEGATIVE_INFINITY,y=-1;for(let t=T;t<f;t+=l){const o=t-n;for(let n=p;n<m;n+=u){const i=n-h,c=C.get(A,t,n,e);c>g&&(g=c,y=r?s?((A*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*d+i)}}o.set(y,A,t,i,e)}}return o}function ck(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,G=r.effectiveFilterWidth,C=r.padInfo.front,A=r.padInfo.top,T=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ui(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],b=r.outShape[2]*r.outShape[3]*r.outShape[4],x=r.outShape[3]*r.outShape[4],v=r.outShape[4];for(let w=0;w<r.batchSize;++w){const t=w*y,n=w*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outDepth;++y){const w=y*o-C;let k=w;for(;k<0;)k+=l;const I=Math.min(r.inDepth,d+w),N=t+y*b;for(let t=0;t<r.outHeight;++t){const o=t*i-A;let d=o;for(;d<0;)d+=u;const C=Math.min(r.inHeight,p+o),y=N+t*x;for(let t=0;t<r.outWidth;++t){const o=t*c-T;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,G+o),A=y+t*v;let b=f,x=0,w=0;for(let t=k;t<I;t+=l){const r=n+t*a[1];for(let t=d;t<C;t+=u){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+m];if("max"===s&&r>b?b=r:"avg"===s&&(x+=r,w++),isNaN(b))break}if(isNaN(b))break}if(isNaN(b))break}g[A+m]="avg"===s?x/Math.max(w,1):b}}}}return m}const lk={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;qv(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;rt(Fl(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=xl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))u=ew({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=wt(r.shape),a=ok(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const uk={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;qv(r,"avgPool3d");const u=vl(r.shape,s,o,1,i,c,l),h=ck(n.data.get(r.dataId).values,r.shape,r.dtype,wt(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const hk={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;qv([r,s],"avgPool3DGrad");const u=vl(s.shape,o,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,G=u.filterDepth,C=u.filterHeight,A=u.filterWidth,T=u.dilationDepth,f=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterDepth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=g-1-u.padInfo.front,v=b-1-u.padInfo.left,w=y-1-u.padInfo.top,k=Ui(s.shape,"float32"),I=1/(G*C*A),N=n.bufferSync(r);for(let S=0;S<u.batchSize;++S)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-x,s=n-w,o=a-v;let i=0;for(let t=0;t<g;t+=T){const n=(r+t)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<y;t+=f){const a=(s+t)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<b;t+=m){const r=(o+t)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=N.get(S,n,a,r,e)}}}k.set(i*I,S,t,n,a,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const dk={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;qv([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=xl(o.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,G=u.filterWidth,C=u.dilationHeight,A=u.dilationWidth,T=u.effectiveFilterHeight,f=u.effectiveFilterWidth,m=f-1-u.padInfo.left,g=T-1-u.padInfo.top,y=Ui(o.shape,"float32"),b=1/(p*G),x=n.data.get(r.dataId).values,v=Ui(r.shape,"float32",x);for(let w=0;w<u.batchSize;++w)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-g,r=n-m;let s=0;for(let t=0;t<T;t+=C){const n=(a+t)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<f;t+=A){const a=(r+t)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=v.get(w,n,a,e)}}y.set(s*b,w,t,n,e)}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const pk={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:c}=t;rt(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rt(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rt(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),qv([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),G=o?n.data.get(o.dataId).values:new Float32Array([0]),C=new Float32Array(u.length),A=G.length,T=p.length,f=d.length,m=h.length;let g=0,y=0,b=0,x=0;for(let v=0;v<u.length;++v)C[v]=G[g++]+(u[v]-h[y++])*p[b++]/Math.sqrt(d[x++]+l),g>=A&&(g=0),y>=m&&(y=0),b>=T&&(b=0),x>=f&&(x=0);return n.makeTensorInfo(r.shape,r.dtype,C)}};function Gk(e,t,n,a,r){const s=sl(a,t,n),o=it(n),i=wt(a);if(s){const n=ol(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const c=Ui(a,r,"string"===r?LC(e):e),l=Ui(n,r);for(let u=0;u<l.size;++u){const e=l.indexToLoc(u),n=e.map(((e,n)=>e+t[n]));l.set(c.get(...n),...e)}return"string"===r?zC(l.values):l.values}function Ck(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;qv(r,"slice");const[i,c]=il(r,s,o);Kc(r,i,c);const l=Gk(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const Ak={kernelName:Cr,backendName:"cpu",kernelFunc:Ck};const Tk={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;qv([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),c=UG(r.shape,s,i),l=HG(c.length,s.length),u=jG(r.shape,s,i),h=qG(o,s.length),d=KG(u,o,s.length),p=Ew({inputs:{x:r},backend:n,attrs:{shape:c}}),G=Uw({inputs:{x:p},backend:n,attrs:{perm:l}}),C=Ew({inputs:{x:G},backend:n,attrs:{shape:u}}),A=Ck({inputs:{x:C},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),A}};function fk(e,t,n,a,r){const s=it(a),o=St(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function mk(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=Ui([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const gk={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=fk(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},yk=rw(((e,t)=>e&t)),bk=vw(hn,yk),xk={kernelName:hn,backendName:"cpu",kernelFunc:bk};const vk={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=Tc(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},wk=Yv((e=>Math.ceil(e))),kk=Jv(Gn,wk),Ik={kernelName:Gn,backendName:"cpu",kernelFunc:kk},Nk=Qv(Cn,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Sk={kernelName:Cn,backendName:"cpu",kernelFunc:Nk},Ek={kernelName:Tn,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(it(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function Rk(e,t,n,a){const r=Tt(n,it(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=it(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?LC(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function _k(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Fk={kernelName:ia,backendName:"cpu",kernelFunc:_k};function Dk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Gt(r,t[0].shape)[0];FG(t.map((e=>e.shape)),s);let o=DG(t.map((e=>e.shape)),s);if(0===it(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>it(e.shape)>0));if(1===i.length)return ew({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>mw({inputs:{input:e},backend:n}))),t=i.map((e=>_k({inputs:{input:e},backend:n}))),a=Dk({inputs:e,backend:n,attrs:{axis:s}}),r=Dk({inputs:t,backend:n,attrs:{axis:s}}),o=Aw({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const c=i.map((e=>{const t=it(e.shape.slice(s));return Ew({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=DG(c.map((e=>e.shape)),1);const u=1===c[0].shape[0],h=Rk(l,o,t[0].dtype,u),d=DG(i.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Ok={kernelName:fn,backendName:"cpu",kernelFunc:Dk};function Mk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;qv([r,s],"conv2d");const h=Ol(c),d=wl(r.shape,s.shape,o,l,i,u,!1,h),p=d.filterHeight,G=d.filterWidth,C=d.dilationHeight,A=d.dilationWidth,T=d.padInfo.left,f=d.padInfo.top,m="channelsLast"===d.dataFormat,g=new Hs(d.outShape,r.dtype),y=wt(r.shape),b=wt(s.shape),x=y[0],v=m?y[1]:y[2],w=m?y[2]:1,k=m?1:y[1],I=g.strides[0],N=m?g.strides[1]:g.strides[2],S=m?g.strides[2]:1,E=m?1:g.strides[1],R=n.data.get(r.dataId).values,_=n.data.get(s.dataId).values,F=g.values;for(let D=0;D<d.batchSize;++D){const e=D*x,t=D*I;for(let n=0;n<d.outHeight;++n){const a=t+n*N,r=n*d.strideHeight-f;for(let t=0;t<p;++t){const n=r+t*C;if(n<0||n>=d.inHeight)continue;const s=t*b[0],o=e+n*v;for(let e=0;e<d.outWidth;++e){const t=a+e*S,n=e*d.strideWidth-T;for(let e=0;e<G;++e){const a=n+e*A;if(a<0||a>=d.inWidth)continue;const r=o+a*w;let i=s+e*b[1];for(let e=0;e<d.inChannels;++e){const n=R[r+e*k];for(let e=0;e<d.outChannels;++e)F[t+e*E]+=n*_[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(g.shape,g.dtype,F)}const Lk={kernelName:mn,backendName:"cpu",kernelFunc:Mk};const zk={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;qv([r,s],"conv2dBackpropFilter");const h=Ol(c),d=wl(r.shape,u,o,1,i,l,!1,h),{strideHeight:p,strideWidth:G,filterHeight:C,filterWidth:A}=d,T="channelsLast"===d.dataFormat,f=new Hs(d.filterShape,"float32"),m=d.padInfo.left,g=d.padInfo.top,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,x=new Hs(r.shape,r.dtype,y),v=new Hs(s.shape,s.dtype,b);for(let w=0;w<C;++w){const e=Math.max(0,Math.ceil((g-w)/p)),t=Math.min(d.outHeight,(d.inHeight+g-w)/p);for(let n=0;n<A;++n){const a=Math.max(0,Math.ceil((m-n)/G)),r=Math.min(d.outWidth,(d.inWidth+m-n)/G);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=e;l<t;++l){const e=w+l*p-g;for(let t=a;t<r;++t){const a=n+t*G-m;i+=T?x.get(c,e,a,s)*v.get(c,l,t,o):x.get(c,s,e,a)*v.get(c,o,l,t)}}f.set(i,w,n,s,o)}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Pk={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;qv([r,s],"conv2dBackpropInput");const h=wt(s.shape),d=wt(r.shape);let p=Ol(l);const G=wl(o,s.shape,i,1,c,u,!1,p),C=new Hs(G.inShape,"float32"),A=C.values,T=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values,[m,g,y]=h,{batchSize:b,filterHeight:x,filterWidth:v,inChannels:w,inHeight:k,inWidth:I,outChannels:N,outHeight:S,outWidth:E,strideHeight:R,strideWidth:_}=G;p=G.dataFormat;const F=x-1-G.padInfo.top,D=v-1-G.padInfo.left,O="channelsLast"===p,M=C.strides[0],L=O?C.strides[1]:C.strides[2],z=O?C.strides[2]:1,P=O?1:C.strides[1],V=d[0],B=O?d[1]:d[2],W=O?d[2]:1,U=O?1:d[1];for(let H=0;H<b;++H)for(let e=0;e<w;++e)for(let t=0;t<k;++t){const n=t-F,a=Math.max(0,Math.ceil(n/R)),r=Math.min(S,(x+n)/R);for(let s=0;s<I;++s){const o=s-D,i=Math.max(0,Math.ceil(o/_)),c=Math.min(E,(v+o)/_);let l=0;for(let t=a;t<r;++t){const a=t*R-n;for(let n=i;n<c;++n){const r=V*H+B*t+W*n,s=m*(x-1-a)+g*(v-1-(n*_-o))+y*e;for(let e=0;e<N;++e){l+=T[r+U*e]*f[s+e]}}}A[M*H+L*t+z*s+P*e]=l}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Vk={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a;qv([r,s],"conv3d");const l=kl(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:G,dilationWidth:C,padInfo:A}=l,T=A.front,f=A.left,m=A.top,g=new Hs(l.outShape,r.dtype),y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,x=g.values,v=wt(r.shape),w=wt(s.shape);for(let k=0;k<l.batchSize;++k){const e=k*v[0],t=k*g.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*g.strides[1],r=n*l.strideDepth-T;for(let t=0;t<u;++t){const n=r+t*p;if(n<0||n>=l.inDepth)continue;const s=t*w[0],o=e+n*v[1];for(let e=0;e<l.outHeight;++e){const t=a+e*g.strides[2],n=e*l.strideHeight-m;for(let e=0;e<h;++e){const a=n+e*G;if(a<0||a>=l.inHeight)continue;const r=s+e*w[1],i=o+a*v[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-f;for(let e=0;e<d;++e){const t=a+e*C;if(t<0||t>=l.inWidth)continue;const s=r+e*w[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=y[o+e];for(let e=0;e<l.outChannels;++e)x[n+e]+=t*b[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Bk={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a;qv([r,s],"conv3dBackpropFilterV2");const l=wt(r.shape),u=wt(s.shape),h=kl(r.shape,c,o,1,i),d=h.strideDepth,p=h.strideHeight,G=h.strideWidth,C=h.filterDepth,A=h.filterHeight,T=h.filterWidth,f=new Hs(h.filterShape,"float32"),m=f.values,[g,y,b,x]=f.strides,v=n.data.get(s.dataId).values,[w,k,I,N]=u,S=n.data.get(r.dataId).values,[E,R,_,F]=l,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<C;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*g;for(let a=0;a<A;++a){const r=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*y+n;for(let n=0;n<T;++n){const i=Math.max(0,Math.ceil((O-n)/G)),c=Math.min(h.outWidth,(h.inWidth+O-n)/G),l=n*b+o;for(let o=0;o<h.inChannels;++o){const u=o*x+l;for(let l=0;l<h.outChannels;++l){let C=0;for(let u=0;u<h.batchSize;++u){const h=u*E,A=u*w;for(let u=e;u<t;++u){const e=(L+u*d-D)*R+h,t=u*k+A;for(let u=r;u<s;++u){const r=(a+u*p-M)*_+e,s=u*I+t;for(let e=i;e<c;++e){const t=e*N+s;C+=S[(n+e*G-O)*F+r+o]*v[t+l]}}}}m[u+l]=C}}}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Wk={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a;qv([r],"conv3dBackpropInputV2");const l=wt(r.shape),u=wt(s.shape),h=kl(c,s.shape,i,1,o),d=new Hs(h.inShape,"float32"),p=d.values,[G,C,A,T]=d.strides,f=n.data.get(r.dataId).values,[m,g,y,b]=l,x=n.data.get(s.dataId).values,[v,w,k,I]=u,{batchSize:N,filterDepth:S,filterHeight:E,filterWidth:R,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:V,strideHeight:B,strideWidth:W}=h,U=S-1-h.padInfo.front,H=E-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let q=0;q<N;++q)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-U,a=Math.max(0,Math.ceil(n/V)),r=Math.min(L,(S+n)/V);for(let s=0;s<D;++s){const o=s-H,i=Math.max(0,Math.ceil(o/B)),c=Math.min(z,(E+o)/B);for(let l=0;l<O;++l){const u=l-j,h=Math.max(0,Math.ceil(u/W)),d=Math.min(P,(R+u)/W);let N=0;for(let t=a;t<r;++t){const a=t*V-n;for(let n=i;n<c;++n){const r=n*B-o;for(let s=h;s<d;++s){const o=m*q+g*t+y*n+b*s,i=v*(S-1-a)+w*(E-1-r)+k*(R-1-(s*W-u))+I*e;for(let e=0;e<M;++e){N+=f[o+e]*x[i+e]}}}}p[G*q+C*t+A*s+T*l+e]=N}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Uk=Qv(wn,(e=>Math.cos(e))),Hk={kernelName:wn,backendName:"cpu",kernelFunc:Uk},jk=Qv(kn,(e=>Math.cosh(e))),qk={kernelName:kn,backendName:"cpu",kernelFunc:jk};const Kk={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,G=s.shape[0],[C,A]=i,T=Ui([G,C,A,p],"float32"),f=n.data.get(s.dataId).values,m=n.data.get(o.dataId).values,g=n.data.get(r.dataId).values,y=wt(r.shape),b=wt(T.shape);for(let x=0;x<G;x++){const e=4*x,t=f[e],n=f[e+1],a=f[e+2],r=f[e+3],s=m[x];if(s>=u)continue;const o=C>1?(a-t)*(h-1)/(C-1):0,i=A>1?(r-n)*(d-1)/(A-1):0;for(let u=0;u<C;u++){const e=C>1?t*(h-1)+u*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<A;t++)for(let e=0;e<p;e++){const n=e+t*b[2]+u*b[1]+x*b[0];T.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<A;e++){const c=A>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let t=0;t<p;t++){const n=t+e*b[2]+u*b[1]+x*b[0];T.values[n]=l}continue}const h=Math.floor(c),G=Math.ceil(c),C=c-h;for(let n=0;n<p;n++){let r=n+h*y[2]+t*y[1]+s*y[0];const i=g[r];r=n+G*y[2]+t*y[1]+s*y[0];const c=g[r];r=n+h*y[2]+a*y[1]+s*y[0];const l=g[r];r=n+G*y[2]+a*y[1]+s*y[0];const d=i+(c-i)*C,p=l+(g[r]-l)*C;r=n+e*b[2]+u*b[1]+x*b[0],T.values[r]=d+(p-d)*o}}}else for(let t=0;t<A;++t){const a=A>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*b[2]+u*b[1]+x*b[0];T.values[n]=l}continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<p;e++){const n=e+o*y[2]+c*y[1]+s*y[0],a=e+t*b[2]+u*b[1]+x*b[0];T.values[a]=g[n]}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Xk={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;qv(r,"cumprod");const c=Mu([s],r.shape.length);let l=r;null!=c&&(l=Uw({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=zu(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=ao(l.dtype,"int32"),d=Nt(it(l.shape),h),p=n.data.get(l.dataId).values,G=l.shape[l.shape.length-1],C=i?(e,t)=>e+G-t-1:(e,t)=>e+t;for(let T=0;T<p.length;T+=G)for(let e=0;e<G;e++){const t=C(T,e);if(0===e)d[t]=o?1:p[t];else{const n=C(T,e-1);d[t]=o?p[n]*d[n]:p[t]*d[n]}}const A=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=Uw({inputs:{x:A},backend:n,attrs:{perm:Lu(c)}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(l),e}return A}};const Yk={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;qv(r,"cumsum");const c=Mu([s],r.shape.length);let l=r;null!=c&&(l=Uw({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=zu(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=ao(l.dtype,"int32"),d=St(it(l.shape),h),p=n.data.get(l.dataId).values,G=l.shape[l.shape.length-1],C=i?(e,t)=>e+G-t-1:(e,t)=>e+t;for(let T=0;T<p.length;T+=G)for(let e=0;e<G;e++){const t=C(T,e);if(0===e)d[t]=o?0:p[t];else{const n=C(T,e-1);d[t]=o?p[n]+d[n]:p[t]+d[n]}}const A=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=Uw({inputs:{x:A},backend:n,attrs:{perm:Lu(c)}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(l),e}return A}};const Qk={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=fk(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=mk(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const Jk={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;rt("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*s,d=l*s,p=u/(s*s),G=n.data.get(r.dataId).values,C=new Float32Array(i*h*d*p);let A=0;for(let T=0;T<i;++T)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+u*(a+l*(t+c*T));C[A++]=G[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,C)}};function Zk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;qv([r,s],"depthwiseConv2DNative");const u=wt(r.shape),h=wt(s.shape);let d=c;null==d&&(d=[1,1]),rt(Fl(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=wl(r.shape,s.shape,o,d,i,l,!0),{filterHeight:G,filterWidth:C,dilationHeight:A,dilationWidth:T,padInfo:f}=p,m=f.left,g=f.top,y=p.outChannels/p.inChannels,b=new Hs(p.outShape,r.dtype),x=n.data.get(r.dataId).values,v=n.data.get(s.dataId).values,w=b.values;for(let k=0;k<p.batchSize;++k){const e=k*u[0],t=k*b.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*b.strides[1],r=n*p.strideHeight-g;for(let t=0;t<G;++t){const n=r+t*A;if(n<0||n>=p.inHeight)continue;const s=t*h[0],o=e+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*b.strides[2],n=e*p.strideWidth-m;for(let e=0;e<C;++e){const a=n+e*T;if(a<0||a>=p.inWidth)continue;const r=s+e*h[1],i=o+a*p.inChannels;let c=t,l=r;for(let e=0;e<p.inChannels;++e){const t=x[i+e];for(let e=0;e<y;++e)w[c+e]+=t*v[l+e];c+=y,l+=y}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const $k={kernelName:_n,backendName:"cpu",kernelFunc:Zk};const eI={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;qv([r,s],"depthwiseConv2dNativeBackpropFilter");const h=wl(r.shape,u,o,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:G,filterWidth:C}=h,A=new Hs(h.filterShape,"float32"),T=h.padInfo.left,f=h.padInfo.top,m=h.outChannels/h.inChannels,g=n.data.get(r.dataId).values,y=new Hs(r.shape,r.dtype,g),b=n.data.get(s.dataId).values,x=new Hs(s.shape,s.dtype,b);for(let v=0;v<G;++v){const e=Math.max(0,Math.ceil((f-v)/d)),t=Math.min(h.outHeight,(h.inHeight+f-v)/d);for(let n=0;n<C;++n){const a=Math.max(0,Math.ceil((T-n)/p)),r=Math.min(h.outWidth,(h.inWidth+T-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/m),i=s%m;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=v+i*d-f;for(let t=a;t<r;++t){const a=n+t*p-T;c+=y.get(l,e,a,o)*x.get(l,i,t,s)}}A.set(c,v,n,o,i)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};const tI={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;qv([r,s],"depthwiseConv2DNativeBackpropInput");const h=wt(r.shape),d=wt(s.shape),p=wl(u,s.shape,o,i,c,l,!0),G=new Hs(p.inShape,"float32"),C=G.values,[A,T,f]=G.strides,m=n.data.get(r.dataId).values,[g,y,b]=h,x=n.data.get(s.dataId).values,[v,w,k]=d,{batchSize:I,filterHeight:N,filterWidth:S,inChannels:E,inHeight:R,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=p,z=N-1-p.padInfo.top,P=S-1-p.padInfo.left,V=F/E;for(let B=0;B<I;++B)for(let e=0;e<E;++e)for(let t=0;t<R;++t){const n=t-z,a=Math.max(0,Math.ceil(n/M)),r=Math.min(D,(N+n)/M);for(let s=0;s<_;++s){const o=s-P,i=Math.max(0,Math.ceil(o/L)),c=Math.min(O,(S+o)/L);let l=0;for(let t=a;t<r;++t){const a=t*M-n;for(let n=i;n<c;++n){const r=g*B+y*t+b*n,s=v*(N-1-a)+w*(S-1-(n*L-o))+k*e;for(let t=0;t<V;++t){l+=m[r+(e*V+t)]*x[s+t]}}}C[A*B+T*t+f*s+e]=l}}return n.makeTensorInfo(G.shape,G.dtype,G.values)}};const nI={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=it(a.shape),s=n.data.get(a.dataId).values,o=Ui([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},aI={kernelName:Mn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:G,inHeight:C,inWidth:A,inChannels:T,outHeight:f,outWidth:m,padInfo:g,strideHeight:y,strideWidth:b,filterHeight:x,filterWidth:v,dilationHeight:w,dilationWidth:k,outShape:I}=bl(r.shape,s.shape,o,i,"NHWC",c),N=it(I),S=I.length,E=Tt(r.dtype,N);for(let R=0;R<G;++R)for(let e=0;e<f;++e){const t=e*y-g.top;for(let n=0;n<m;++n){const a=n*b-g.left;for(let o=0;o<T;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<x;++e){const n=t+e*w;if(n>=0&&n<C)for(let t=0;t<v;++t){const c=a+t*k;if(c>=0&&c<A){const a=_t([R,n,c,o],h,wt(r.shape)),l=_t([e,t,o],p,wt(s.shape)),G=u[a]+d[l];G>i&&(i=G)}}}E[_t([R,e,n,o],S,wt(I))]=i}}}return{dataId:l.write(Is(E,r.dtype),I,r.dtype),shape:I,dtype:r.dtype}}},rI={kernelName:zn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=It(r.shape,u.data.get(r.dataId).values),d=It(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:G,inWidth:C,inChannels:A,outHeight:T,outWidth:f,padInfo:m,strideHeight:g,strideWidth:y,filterHeight:b,filterWidth:x,dilationHeight:v,dilationWidth:w,outShape:k}=bl(r.shape,s.shape,i,c,"NHWC",l);rt(o.rank===k.length,(()=>"Error in ".concat(zn,", dy ")+"must have the same rank as output ".concat(k.length,", but got ")+"".concat(o.rank)));const I=It(k,u.data.get(o.dataId).values),N=Et(s.shape,s.dtype);for(let S=0;S<p;++S)for(let e=0;e<T;++e){const t=e*g-m.top;for(let n=0;n<f;++n){const a=n*y-m.left;for(let r=0;r<A;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<b;++e){const n=t+e*v;if(n>=0&&n<G)for(let t=0;t<x;++t){const c=a+t*w;if(c>=0&&c<C){const a=h[S][n][c][r]+d[e][t][r];a>s&&(s=a,o=e,i=t)}}}N[o][i][r]+=I[S][e][n][r]}}}return{dataId:u.write(Is(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sI={kernelName:Ln,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=It(r.shape,u.data.get(r.dataId).values),d=It(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:G,inWidth:C,inChannels:A,outHeight:T,outWidth:f,padInfo:m,strideHeight:g,strideWidth:y,filterHeight:b,filterWidth:x,dilationHeight:v,dilationWidth:w,outShape:k}=bl(r.shape,s.shape,i,c,"NHWC",l);rt(o.rank===k.length,(()=>"Error in ".concat(Ln,", dy ")+"must have the same rank as output ".concat(k.length,", but got ")+"".concat(o.rank)));const I=It(k,u.data.get(o.dataId).values),N=Et(r.shape,r.dtype);for(let S=0;S<p;++S)for(let e=0;e<T;++e){const t=e*g-m.top;for(let n=0;n<f;++n){const a=n*y-m.left;for(let r=0;r<A;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<b;++e){const n=t+e*v;if(n>=0&&n<G)for(let t=0;t<x;++t){const c=a+t*w;if(c>=0&&c<C){const a=h[S][n][c][r]+d[e][t][r];a>s&&(s=a,o=n,i=c)}}}N[S][o][i][r]+=I[S][e][n][r]}}}return{dataId:u.write(Is(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const oI={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=r.shape.slice(0,2),G=2===r.shape.length?1:r.shape[2],C=n.data.get(r.dataId).values,A="float32"===r.dtype?255:1,T=new Uint8ClampedArray(p*d*4);for(let m=0;m<d*p;++m){const e=[0,0,0,255*l];for(let n=0;n<G;n++){const t=C[m*G+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===G?(e[0]=t*A,e[1]=t*A,e[2]=t*A):e[n]=t*A}const t=4*m;T[t+0]=Math.round(e[0]),T[t+1]=Math.round(e[1]),T[t+2]=Math.round(e[2]),T[t+3]=Math.round(e[3])}s.width=p,s.height=d;const f=new ImageData(T,p,d);return h.putImageData(f,0,0),r}},iI=rw(((e,t)=>e*t)),cI=ww(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),lI=vw(Oa,iI,cI),uI={kernelName:Oa,backendName:"cpu",kernelFunc:lI};function hI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;qv(r,"sum"),i="bool"===r.dtype?bw({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):ew({inputs:{x:r},backend:n});const c=i.shape.length,l=Gt(s,i.shape),u=Mu(l,c);let h=l,d=i;null!=u&&(d=Uw({inputs:{x:i},backend:n,attrs:{perm:u}}),h=zu(h.length,c)),Ou("sum",h,d.shape.length);const[p,G]=Fu(d.shape,h);let C=fw(n,p,ao(d.dtype,"int32"));const A=it(G),T=n.data.get(C.dataId).values,f=n.data.get(d.dataId).values;for(let m=0;m<T.length;++m){const e=m*A;let t=0;for(let n=0;n<A;++n)t+=f[e+n];T[m]=t}if(o){const e=C;C=Ew({inputs:{x:C},backend:n,attrs:{shape:Du(C.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),C}const dI={kernelName:br,backendName:"cpu",kernelFunc:hI};const pI={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=CC(r,s.length);TC(o.length,c,s);const{path:l,steps:u}=fC(i,c),h=u.length;let d=null,p=o.length;const G=[];for(let C=0;C<h;++C){for(const e of u[C]){const{permutationIndices:t,expandDims:a}=AC(p,c[e]);let r;mC(t)?r=s[e]:(r=Uw({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),G.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);ct(r.shape,o)||(r=Ew({inputs:{x:r},backend:n,attrs:{shape:o}}),G.push(r)),null===d?d=r:(d=lI({inputs:{a:r,b:d},backend:n}),G.push(d))}C<h-1&&(l[C]>=0&&(d=hI({inputs:{x:d},backend:n,attrs:{axis:l[C]-(o.length-p),keepDims:!1}}),G.push(d)),p--)}for(const C of G)C!==d&&n.disposeIntermediateTensorInfo(C);return d}};const GI={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;qv([a,r],"eluGrad");const s=new Float32Array(it(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];s[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},CI=rw(((e,t)=>e===t?1:0)),AI=vw(jn,CI,null,"bool"),TI={kernelName:jn,backendName:"cpu",kernelFunc:AI},fI=JG,mI=ZG,gI=$G,yI=eC,bI=tC,xI=nC,vI=Qv(Hn,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+fI*n);return t*(1-((((xI*a+bI)*a+yI)*a+gI)*a+mI)*a*Math.exp(-n*n))})),wI={kernelName:Hn,backendName:"cpu",kernelFunc:vI},kI=Yv((e=>Math.exp(e))),II=Jv(qn,kI,"float32"),NI={kernelName:qn,backendName:"cpu",kernelFunc:II};function SI(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(rt(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),Ew({inputs:{x:r},backend:n,attrs:{shape:i}})}const EI={kernelName:Kn,backendName:"cpu",kernelFunc:SI},RI=Yv((e=>Math.expm1(e))),_I=Jv(Xn,RI),FI={kernelName:Xn,backendName:"cpu",kernelFunc:_I},DI=rw(((e,t)=>e/t)),OI=vw(Vn,DI),MI={kernelName:Vn,backendName:"cpu",kernelFunc:OI},LI=rw(((e,t)=>e-t)),zI=ww(((e,t,n,a)=>({real:e-n,imag:t-a}))),PI=vw(zr,LI,zI),VI={kernelName:zr,backendName:"cpu",kernelFunc:PI};function BI(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=it(l),h=At("float32",u),d=At("float32",u);for(let A=0;A<r;A++){const e=Ck({inputs:{x:i},backend:n,attrs:{begin:[A,0],size:[1,s]}}),a=Ck({inputs:{x:c},backend:n,attrs:{begin:[A,0],size:[1,s]}}),r=Aw({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=WI(r,t,n),u=aC(o,l);for(let t=0;t<s;t++){const e=iC(u,t);h[A*s+t]=e.real,d[A*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),G=n.makeTensorInfo(l,"float32",d),C=Aw({inputs:{real:p,imag:G},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),C}function WI(e,t,n){const a=it(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=UI(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",ks(a,"float32")),o=ew({inputs:{x:s},backend:n}),c=MI.kernelFunc({inputs:{a:e,b:s},backend:n}),l=MI.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=uC(r*a,t,n),c=iC(e,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=t,o/=t),cC(a,s,o,r)}return a}(aC(s,o),a,t);return rC(e)}var i}function UI(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=aC(e,t),o=n/2,i=sC(s),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=Aw({inputs:{real:h,imag:d},backend:r}),G=oC(s),C=G.real,A=G.imag,T=[C.length],f=r.makeTensorInfo(T,"float32",C),m=r.makeTensorInfo(T,"float32",A),g=Aw({inputs:{real:f,imag:m},backend:r}),y=UI(c,l,o,a,r),b=y.real,x=y.imag,v=[b.length],w=r.makeTensorInfo(v,"float32",b),k=r.makeTensorInfo(v,"float32",x),I=Aw({inputs:{real:w,imag:k},backend:r}),N=UI(C,A,o,a,r),S=N.real,E=N.imag,R=[S.length],_=r.makeTensorInfo(R,"float32",S),F=r.makeTensorInfo(R,"float32",E),D=Aw({inputs:{real:_,imag:F},backend:r}),O=lC(n,a),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=Aw({inputs:{real:L,imag:z},backend:r}),V=lI({inputs:{a:P,b:D},backend:r}),B=Nw({inputs:{a:I,b:V},backend:r}),W=PI({inputs:{a:I,b:V},backend:r}),U=mw({inputs:{input:B},backend:r}),H=mw({inputs:{input:W},backend:r}),j=_k({inputs:{input:B},backend:r}),q=_k({inputs:{input:W},backend:r}),K=Dk({inputs:[U,H],backend:r,attrs:{axis:0}}),X=Dk({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const HI={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=it(a.shape),s=a.shape[a.shape.length-1],o=Ew({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=BI(o,!1,n),c=Ew({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function jI(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||bt(r),i=Tt(o,it(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const qI={kernelName:Qn,backendName:"cpu",kernelFunc:jI};const KI={kernelName:Jn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=At(r.dtype,it(r.shape)),[i,c,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const s=Math.round(l-t-1),i=e+n+a+r;let c=h[i];if(s>=0&&s<l){c=h[e+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},XI=Yv((e=>Math.floor(e))),YI=Jv(Zn,XI),QI={kernelName:Zn,backendName:"cpu",kernelFunc:YI},JI=rw(((e,t)=>Math.floor(e/t))),ZI=vw($n,JI,null,"int32"),$I={kernelName:$n,backendName:"cpu",kernelFunc:ZI};const eN={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:G}=a;let C=Mk({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=C;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=Ew({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});C=Nw({inputs:{a:C,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else C=Nw({inputs:{a:C,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=C;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=Ew({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});C=Cw(n,C,p,e,G),n.disposeIntermediateTensorInfo(e)}else C=Cw(n,C,p,i,G);n.disposeIntermediateTensorInfo(e)}return C}};const tN={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:G}=a;let C=Zk({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const e=C;C=Nw({inputs:{a:C,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=C;C=Cw(n,C,p,i,G),n.disposeIntermediateTensorInfo(e)}return C}};function nN(e,t,n,a,r,s,o,i,c){const l=Ui([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[u*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)l.values[u*s+e]=t.get(...t.indexToLoc(a*s+e))}return l}const aN={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=it(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,h]=XG(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=nN(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,s);return n.makeTensorInfo(c,a.dtype,d.values)}};function rN(e,t,n){const a=Ui(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const sN={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;qv([r,s],"gatherV2");const c=Gt(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let m=0;m<l.length;++m){const e=l[m];rt(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=it(s.shape),p=MC(r,s,c,h),G=Ew({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),C=Ew({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),A=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],T=n.bufferSync(C),f=rN(n.bufferSync(G),T,A);return n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(p.outputShape,f.dtype,f.values)}},oN=rw(((e,t)=>e>t?1:0)),iN=vw(aa,oN,null,"bool"),cN={kernelName:aa,backendName:"cpu",kernelFunc:iN},lN=rw(((e,t)=>e>=t?1:0)),uN=vw(ra,lN,null,"bool"),hN={kernelName:ra,backendName:"cpu",kernelFunc:uN};const dN={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=it(a.shape),s=a.shape[a.shape.length-1],o=Ew({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=BI(o,!0,n),c=Ew({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},pN=Qv(ca,(e=>Number.isFinite(e)?1:0),"bool"),GN={kernelName:ca,backendName:"cpu",kernelFunc:pN},CN=Qv(la,(e=>Math.abs(e)===1/0?1:0),"bool"),AN={kernelName:la,backendName:"cpu",kernelFunc:CN},TN=Qv(ua,(e=>Number.isNaN(e)?1:0),"bool"),fN={kernelName:ua,backendName:"cpu",kernelFunc:TN},mN=rw(((e,t)=>e<t?1:0)),gN=vw(da,mN,null,"bool"),yN={kernelName:da,backendName:"cpu",kernelFunc:gN},bN=rw(((e,t)=>e<=t?1:0)),xN=vw(pa,bN,null,"bool"),vN={kernelName:pa,backendName:"cpu",kernelFunc:xN};function wN(e,t,n){const a=(t-e)/(n-1),r=St(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const kN={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=wN(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},IN=Yv((e=>Math.log(e))),NN=Jv(Ca,IN),SN={kernelName:Ca,backendName:"cpu",kernelFunc:NN},EN=Qv(Aa,(e=>Math.log1p(e))),RN={kernelName:Aa,backendName:"cpu",kernelFunc:EN},_N=rw(((e,t)=>e&&t)),FN=vw(Ta,_N,null,"bool"),DN={kernelName:Ta,backendName:"cpu",kernelFunc:FN},ON=Qv(fa,(e=>e?0:1),"bool"),MN={kernelName:fa,backendName:"cpu",kernelFunc:ON},LN=rw(((e,t)=>e||t)),zN=vw(ma,LN,null,"bool"),PN={kernelName:ma,backendName:"cpu",kernelFunc:zN};const VN={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a;qv(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=it(r.shape),p=new Float32Array(d);function G(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,u);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let C=0;C<d;C++){const e=G(C),t=h[C]*Math.pow(o+i*e,-c);p[C]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const BN={kernelName:ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;qv(o,"LRNGrad");const h=it(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,G=n.data.get(r.dataId).values,C=n.data.get(s.dataId).values,A=new Float32Array(h),T=h;for(let f=0;f<T;f++){const e=f%d,t=f-e+Math.max(0,e-i),n=f-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(G[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*G[r]*C[f]/a;f===r&&(e+=Math.pow(a,-u)),e*=p[f],A[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,A)}};function WN(e,t,n,a){const r=At(a,it(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function UN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=Gt(s,c);let h=u;const d=Mu(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[d[t]];p=Ww(p,c,r.dtype,d,e),h=zu(h.length,l),c=e}qv(r,"max"),Ou("max",h,l);const[G,C]=Fu(c,h),A=WN(p,it(C),G,r.dtype),T=i.write(A,G,r.dtype);let f=G;if(o){f=Du(G,u)}return{dataId:T,shape:f,dtype:r.dtype}}const HN={kernelName:ba,backendName:"cpu",kernelFunc:UN},jN=rw(((e,t)=>Math.max(e,t))),qN=vw(xa,jN),KN={kernelName:xa,backendName:"cpu",kernelFunc:qN};const XN={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;qv(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;rt(Fl(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=xl(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))u=ew({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=wt(r.shape),a=ok(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const YN={kernelName:ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;qv(r,"maxPool3d");const u=vl(r.shape,s,o,1,i,c,l),h=ck(n.data.get(r.dataId).values,r.shape,r.dtype,wt(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const QN={kernelName:Ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;qv([r,s],"maxPool3DGrad");const u=vl(s.shape,o,i,1,c,l),h=function(e,t){const n=Ui(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,G=t.padInfo.left;for(let C=0;C<t.batchSize;++C)for(let A=0;A<t.inChannels;++A)for(let T=0;T<t.outDepth;++T){const f=T*a-d;let m=f;for(;m<0;)m+=o;const g=Math.min(t.inDepth,l+f);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const y=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const p=r*s-G;let b=p;for(;b<0;)b+=c;const x=Math.min(t.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=m;t<g;t+=o){const n=t-f;for(let a=d;a<y;a+=i){const r=a-l;for(let s=b;s<x;s+=c){const o=s-p,i=e.get(C,t,a,s,A);i>=v&&(v=i,w=n*u*h+r*u+o)}}}n.set(w,C,T,a,r,A)}}}return n}(n.bufferSync(s),u),d=u.strideDepth,p=u.strideHeight,G=u.strideWidth,C=u.dilationDepth,A=u.dilationHeight,T=u.dilationWidth,f=u.effectiveFilterDepth,m=u.effectiveFilterHeight,g=u.effectiveFilterWidth,y=f-1-u.padInfo.front,b=g-1-u.padInfo.left,x=m-1-u.padInfo.top,v=Ui(s.shape,"float32"),w=n.bufferSync(r);for(let k=0;k<u.batchSize;++k)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-y,s=n-x,o=a-b;let i=0;for(let t=0;t<f;t+=C){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<m;a+=A){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<g;s+=T){const c=(o+s)/G;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=f*m*g-1-h.get(k,n,r,c,e)===t*m*g+a*g+s?1:0;if(0===l)continue;i+=w.get(k,n,r,c,e)*l}}}v.set(i,k,t,n,a,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const JN={kernelName:wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;qv([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=xl(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,G=Ui(d.outShape,i.dtype,ik(p,i.shape,i.dtype,d).values),C=d.strideHeight,A=d.strideWidth,T=d.dilationHeight,f=d.dilationWidth,m=d.effectiveFilterHeight,g=d.effectiveFilterWidth,y=g-1-d.padInfo.left,b=m-1-d.padInfo.top,x=Ui(i.shape,"float32"),v=n.data.get(r.dataId).values,w=Ui(r.shape,"float32",v);for(let k=0;k<d.batchSize;++k)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-b,r=n-y;let s=0;for(let t=0;t<m;t+=T){const n=(a+t)/C;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<g;a+=f){const o=(r+a)/A;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=m*g-1-G.get(k,n,o,e)===t*g+a?1:0;if(0===i)continue;s+=w.get(k,n,o,e)*i}}x.set(s,k,t,n,e)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const ZN={kernelName:Na,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;qv(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=xl(r.shape,s,o,[1,1],i),[d,p]=function(e,t,n,a,r){const s=ok(e,0,n,wt(t),r,"max"),o=ik(e,t,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,h),G=l.write(d,h.outShape,r.dtype),C=l.write(p,h.outShape,r.dtype);return[{dataId:G,shape:h.outShape,dtype:r.dtype},{dataId:C,shape:h.outShape,dtype:"int32"}]}};const $N={kernelName:Sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=Gt(s,r.shape),c=it(Fu(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=bw({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=OI({inputs:{a:h,b:u},backend:n});l.push(d);const p=hI({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const eS={kernelName:Ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;qv(r,"min");const i=Gt(s,r.shape);let c=i;const l=Mu(c,r.shape.length);let u=r;null!=l&&(u=Uw({inputs:{x:r},backend:n,attrs:{perm:l}}),c=zu(c.length,r.shape.length)),Ou("min",c,u.shape.length);const[h,d]=Fu(u.shape,c),p=it(d),G=St(it(h),u.dtype),C=n.data.get(u.dataId).values;for(let T=0;T<G.length;++T){const e=T*p;let t=C[e];for(let n=0;n<p;++n){const a=C[e+n];(Number.isNaN(a)||a<t)&&(t=a)}G[T]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const A=n.makeTensorInfo(h,u.dtype,G);if(o){const e=Ew({inputs:{x:A},backend:n,attrs:{shape:Du(h,i)}});return n.disposeIntermediateTensorInfo(A),e}return A}},tS=rw(((e,t)=>Math.min(e,t))),nS=vw(Ra,tS),aS={kernelName:Ra,backendName:"cpu",kernelFunc:nS};const rS={kernelName:_a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;qv(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=wt(r.shape),G=it(i),C=i.length,A=wt(i),T=At(r.dtype,G);for(let f=0;f<G;f++){let e=Ft(f,C,A);for(let n=0;n<C;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=_t(e,d,p);T[f]=h[t]}return{dataId:n.write(T,i,r.dtype),shape:i,dtype:r.dtype}}},sS=rw(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),oS=vw(Fa,sS),iS={kernelName:Fa,backendName:"cpu",kernelFunc:oS};function cS(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=Gt([i],r.shape),l=UN({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Du(l.shape,c),h=Ew({inputs:{x:l},backend:n,attrs:{shape:u}}),d=PI({inputs:{a:r,b:h},backend:n}),p=II({inputs:{x:d},backend:n}),G=hI({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),C=Ew({inputs:{x:G},backend:n,attrs:{shape:u}}),A=OI({inputs:{a:p,b:C},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),A}const lS={kernelName:wr,backendName:"cpu",kernelFunc:cS};const uS={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;qv(r,"multinomial");const c=i?r:cS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,s],p=St(it(d),"int32");for(let G=0;G<l;++G){const e=G*u,t=new Float32Array(u-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=$h.alea(o.toString()),a=G*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function hS(e,t,n){const a=ks(-1,n);return iI([],t,a,e,n)}const dS={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;qv(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=hS(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},pS=Pp;const GS={kernelName:za,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;qv(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=pS(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},CS=Vp;const AS={kernelName:Pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;qv(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=CS(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},TS=Bp;const fS={kernelName:Va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;qv(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,G=c,C=l,{selectedIndices:A,selectedScores:T}=TS(u,h,d,p,G,C);return[n.makeTensorInfo([A.length],"int32",new Int32Array(A)),n.makeTensorInfo([T.length],"float32",new Float32Array(T))]}},mS=rw(((e,t)=>e!==t?1:0)),gS=vw(La,mS,null,"bool"),yS={kernelName:La,backendName:"cpu",kernelFunc:gS};const bS={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a;qv(r,"oneHot");const l=it(r.shape),u=new Float32Array(l*o);u.fill(c);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function xS(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=mw({inputs:{input:a},backend:n}),t=xS({inputs:{x:e},backend:n}),r=_k({inputs:{input:a},backend:n}),s=xS({inputs:{x:r},backend:n}),o=Aw({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return jI({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const vS={kernelName:Xr,backendName:"cpu",kernelFunc:xS};const wS={kernelName:Ba,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=mw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=_k({inputs:{input:r},backend:a}),o=xS({inputs:{x:s},backend:a}),i=Aw({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return jI({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function kS(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return SI({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{st(s,e.shape,"All tensors passed to stack must have matching shapes"),rt(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=Dk({inputs:t.map((e=>{const t=SI({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const IS={kernelName:Ua,backendName:"cpu",kernelFunc:kS};const NS={kernelName:Ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;qv(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=n.data.get(r.dataId).values,u=it(r.shape),h=r.shape.length,d=wt(r.shape),p=it(i),G=i.length,C=wt(i),A=At(r.dtype,p);0!==o&&A.fill(o);for(let T=0;T<u;T++){A[_t(Ft(T,h,d).map(((e,t)=>e+c[t])),G,C)]=l[T]}return{dataId:n.write(A,i,r.dtype),shape:i,dtype:r.dtype}}},SS=rw(((e,t)=>Math.pow(e,t))),ES=vw(ja,SS),RS={kernelName:ja,backendName:"cpu",kernelFunc:ES};function _S(e,t,n,a){const[r,s]=Fu(e,a),o=ao(t,"int32"),i=St(it(r),o),c=it(s);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:o}}const FS={kernelName:Ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;qv(r,"prod");const i=r.shape.length,c=Gt(s,r.shape),l=Mu(c,i);let u=c,h=r;const d=[];null!=l&&(h=Uw({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=zu(u.length,i));const p=n.data.get(h.dataId).values,{outVals:G,outShape:C,outDtype:A}=_S(h.shape,h.dtype,p,u);let T=C;return o&&(T=Du(C,c)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(T,A,G)}};function DS(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function OS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function MS(e,t,n,a,r){const s=t.slice();s[0]=r;const o=Tt(n,it(s)),i=e.length;return function(e,t,n,a,r,s){const o=OS(t,2)[1],i=OS(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function LS(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=Ft(a,t.length,wt(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=DS(s,o,e,c),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=Tt("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(l),p=MS(n,a,r,u,h);return[d,p[0],p[1]]}const zS={kernelName:Xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,G]=LS(c,l,u,s.shape,s.dtype,h,o.shape),C=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),A=n.makeTensorInfo(G,s.dtype,p);return C.concat([A])}},PS=2147483647;function VS(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(o[0]);for(let C=1;C<u.length;++C)if(u[C]!==u[C-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=Tt("int32",h+1);d[0]=0;for(let C=0;C<h;++C){const t=i?e[0]:e[C],n=c?a[0]:a[C],r=l?s[0]:s[C];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>PS)throw new Error("Requires ((limit - start) / delta) <= ".concat(PS));d[C+1]=d[C]+o}const p=Tt(n,d[h]);let G=0;for(let C=0;C<h;++C){const t=d[C+1]-d[C];let n=i?e[0]:e[C];const a=l?s[0]:s[C];for(let e=0;e<t;++e)p[G++]=n,n+=a}return[d,p]}const BS={kernelName:Ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=VS(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var WS=OG;class US{constructor(e,t,n,a,r,s,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=LG(l),this.raggedRank=zG(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===WS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===WS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case WS.VALUE_ROWIDS:return US.getMaxWidthValueRowID(t);case WS.ROW_SPLITS:return US.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(WS[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return jS(e,n)}calculateOutputSize(e){const t=this.valuesShape;PG(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=MG(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return rt(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case WS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case WS.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(WS[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case WS.FIRST_DIM_SIZE:return e[0];case WS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case WS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(WS[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=jS(t,!1),r=Tt(this.valuesDType,it(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=it(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Mo((()=>{const t=Ll(l,e),n=eu(t,o);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let e=p<c?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(u*i);HS(s.subarray(h*i),e,(d-h)*i)}if(p>=c){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){HS(s.slice(d*i),l,i),++d}e<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function HS(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function jS(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function qS(e,t,n,a,r,s,o,i,c,l){return new US(e,t,n,a,r,s,o,i,c,l).compute()}const KS={kernelName:Qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[G,C]=qS(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(G,s.dtype,C)}};function XS(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return St(0,a);const r=St(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const YS={kernelName:Ja,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=XS(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},QS=Qv($a,(e=>1/e)),JS={kernelName:$a,backendName:"cpu",kernelFunc:QS};const ZS={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;qv(r,"resizeBilinear");const c=wt(r.shape),[l,u]=i,[h,d,p,G]=r.shape,C=n.data.get(r.dataId).values,A=new Float32Array(it([h,l,u,G])),T=[s&&l>1?d-1:d,s&&u>1?p-1:p],f=[s&&l>1?l-1:l,s&&u>1?u-1:u];let m=0;const g=T[0]/f[0],y=T[1]/f[1];for(let b=0;b<h;b++)for(let e=0;e<l;e++){let t;t=o?g*(e+.5)-.5:g*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=b*c[0]+n*c[1],i=b*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=o?y*(e+.5)-.5:y*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(p-1,Math.ceil(t)),u=s+n*c[2],h=i+n*c[2],d=s+l*c[2],T=i+l*c[2];for(let e=0;e<G;e++){const t=C[u+e],n=C[h+e],s=t+(C[d+e]-t)*r,o=s+(n+(C[T+e]-n)*r-s)*a;A[m++]=o}}}return n.makeTensorInfo([h,l,u,G],"float32",A)}};const $S={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;qv([s,r],"resizeBilinearGrad");const i=wt(r.shape),[c,l,u,h]=r.shape,[,d,p]=s.shape,G=new Float32Array(c*l*u*h),C=[o&&d>1?l-1:l,o&&p>1?u-1:u],A=[o&&d>1?d-1:d,o&&p>1?p-1:p],T=C[0]/A[0],f=C[1]/A[1],m=n.data.get(s.dataId).values;let g=0;for(let y=0;y<c;y++){const e=y*i[0];for(let t=0;t<d;t++){const n=t*T,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=e+a*i[1],o=e+r*i[1],c=n-a,d=1-c;for(let e=0;e<p;e++){const t=e*f,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,p=s+n*i[2],C=s+a*i[2],A=o+n*i[2],T=o+a*i[2],y=d*l,b=d*r,x=c*l,v=c*r;for(let e=0;e<h;e++){const t=m[g++];G[p+e]+=t*y,G[C+e]+=t*b,G[A+e]+=t*x,G[T+e]+=t*v}}}}return n.makeTensorInfo([c,u,l,h],"float32",G)}};const eE={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;qv(r,"resizeNearestNeighbor");const c=wt(r.shape),[l,u]=i,[h,d,p,G]=r.shape,C=n.data.get(r.dataId).values,A=new Float32Array(h*l*u*G),T=[s&&l>1?d-1:d,s&&u>1?p-1:p],f=[s&&l>1?l-1:l,s&&u>1?u-1:u],m=T[0]/f[0],g=T[1]/f[1];let y=0;for(let b=0;b<h;b++){const e=b*c[0];for(let t=0;t<l;t++){const n=o?m*(t+.5):m*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=o?g*(e+.5):g*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<G;e++){const t=C[a+e];A[y++]=t}}}}return n.makeTensorInfo([h,l,u,G],r.dtype,A)}};const tE={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;qv([s,r],"resizeNearestNeighborGrad");const i=wt(r.shape),c=wt(s.shape),[l,u,h,d]=r.shape,[,p,G]=s.shape,C=new Float32Array(l*u*h*d),A=n.data.get(s.dataId).values,T=[o&&p>1?u-1:u,o&&G>1?h-1:h],f=[o&&p>1?p-1:p,o&&G>1?G-1:G],m=T[0]/f[0],g=T[1]/f[1],y=1/m,b=1/g,x=2*Math.ceil(y)+2,v=2*Math.ceil(b)+2;for(let w=0;w<l;w++){const e=w*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*y),r=Math.floor(a-x/2);for(let s=0;s<h;s++){const a=n+s*i[2],l=Math.floor(s*b),T=Math.floor(l-v/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<x;a++){const l=a+r;if(l<0||l>=p)continue;const d=e+l*c[1],C=l*m;if(t===Math.min(u-1,o?Math.round(C):Math.floor(C)))for(let e=0;e<v;e++){const t=e+T;if(t<0||t>=G)continue;const a=d+t*c[2],r=t*g;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=A[a+n])}}C[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,C)}};const nE={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;qv(r,"reverse");const o=r.shape.length,i=Gt(s,r.shape);if(0===o)return ew({inputs:{x:r},backend:n});const c=new Hs(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},aE={kernelName:Jr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=At(r.dtype,it(r.shape)),[u,h,d,p]=r.shape,[G,C]=WG(i,h,d),A=Math.sin(s),T=Math.cos(s),f=c.data.get(r.dataId).values;for(let m=0;m<u;m++){const e=m*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,t,a,s],c=i[2],m=i[1];let g=(c-G)*T-(m-C)*A,y=(c-G)*A+(m-C)*T;g=Math.round(g+G),y=Math.round(y+C);let b=o;if("number"!==typeof o&&(b=3===s?255:o[s]),g>=0&&g<d&&y>=0&&y<h){b=f[e+y*(d*p)+g*p+s]}l[e+n+r+s]=b}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rE=Qv(cr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),sE={kernelName:cr,backendName:"cpu",kernelFunc:rE},oE=Yv((e=>1/Math.sqrt(e))),iE=Jv(lr,oE),cE={kernelName:lr,backendName:"cpu",kernelFunc:iE};function lE(e,t,n,a,r,s,o,i,c,l){const u=[a/r,r],h=e.values,d=t.values;if(0===a)return Ui(n,t.dtype);const p=c instanceof Hs?c:Ui(u,t.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let G=0;G<s;G++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[G*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=d[G*r+n]:p.values[s*r+n]=0===t.rank?d[0]:d[G*r+n]}return p}const uE={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Yd(0,r,o),d=lE(n.bufferSync(r),n.bufferSync(s),o,h,l,c,i,u,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function hE(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function dE(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const pE={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=Tt("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?hE(n,t[e+c]):dE(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const GE={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;qv([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=ao(r.dtype,s.dtype),h=St(it(r.shape),u);let d=0;const p=0===o||o>1||1===r.shape.length?1:it(r.shape.slice(1));for(let G=0;G<i.length;G++)for(let e=0;e<p;e++)1===i[G]?h[d++]=c[G]:h[d++]=l[G];return n.makeTensorInfo(r.shape,u,h)}},CE=YG,AE=QG,TE=Qv(Gr,(e=>e>=0?AE*e:CE*(Math.exp(e)-1))),fE={kernelName:Gr,backendName:"cpu",kernelFunc:TE},mE=Qv(fr,(e=>e<0?-1:e>0?1:0)),gE={kernelName:fr,backendName:"cpu",kernelFunc:mE},yE=Qv(Ar,(e=>Math.sin(e))),bE={kernelName:Ar,backendName:"cpu",kernelFunc:yE},xE=Qv(Tr,(e=>Math.sinh(e))),vE={kernelName:Tr,backendName:"cpu",kernelFunc:xE},wE=Math.log(1.1920928955078125e-7)+2,kE=Qv(gr,(e=>{const t=e>-wE,n=e<wE,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),IE={kernelName:gr,backendName:"cpu",kernelFunc:kE};const NE={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;qv([r],"spaceToBatchND");const i=it(s),c=[[0,0]];c.push(...o);for(let A=1+s.length;A<r.shape.length;++A)c.push([0,0]);const l=NS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=UG(l.shape,s,i,!1),h=HG(u.length,s.length,!1),d=jG(l.shape,s,i,!1),p=Ew({inputs:{x:l},backend:n,attrs:{shape:u}}),G=Uw({inputs:{x:p},backend:n,attrs:{perm:h}}),C=Ew({inputs:{x:G},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),C}};function SE(e,t,n,a,r,s,o){const i=t[0],c=s[0],l=new Array(c),u=new Array(i),h=t[1];if(0===c){if(0!==i)throw new Error(bC(i));return[Tt(n,0),[0,h],Tt(r,0),l,u]}let d=!0,p=0;const G=new Array(c).fill(0);for(let A=0;A<i;++A){const t=e[A*h];if(t<0)throw new Error(xC(A,t));if(t>=c)throw new Error(vC(A,t,c));++G[t],d=d&&t>=p,p=t}let C=!0;for(let A=0;A<c;++A){const e=0===G[A];l[A]=e,C=C&&!e,G[A]=Math.max(G[A],1),A>0&&(G[A]+=G[A-1])}if(C&&d){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,h],n,l,u]}{const t=G[c-1],s=Tt(n,t*h),d=Tt(r,t),p=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],o=(0===t?0:G[t-1])+r;p[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];d[o]=a[n],u[n]=o}for(let e=0;e<c;++e){if(0===p[e]){const t=0===e?0:G[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=o}}return[s,[t,h],d,l,u]}}const EE={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,G,C]=SE(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([G.length],"bool",new Uint8Array(G.map((e=>Number(e))))),n.makeTensorInfo([C.length],a.dtype,new Int32Array(C))]}};function RE(e,t,n,a,r){const s=it(a),o=t[0],i=r.length,c=[];let l=1,u=-1;for(let C=0;C<i;++C){const e=r[C];if(-1===e){if(-1!==u)throw new Error(wC(u,C));u=C,c.push(1)}else{if(e<0)throw new Error(kC(C,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(NC(a,c));c[u]=e}if(it(c)!==s)throw new Error(SC(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*c[e+1]}const G=Tt(n,o*i);for(let C=0;C<o;++C){let t=0;for(let n=0;n<h;++n)t+=e[C*h+n]*d[n];for(let e=0;e<i;++e)G[C*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[G,[o,i],c]}const _E={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,h]=RE(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function FE(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=u;const d=Tt(n,h.reduce(((e,t)=>e*t),1));if(0===i)return u>0&&d.fill(o),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,G=1,C=0,A=r[p];for(;;){let t=0;if(G<i){if(t=r[G],A===t){++G;continue}if(A>=t)throw new Error("segment ids are not increasing")}if(A<0||A>=u)throw new Error(_C(A,u));A>C&&d.fill(o,C*l,A*l);for(let n=p;n<G;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(FC(n,a[n],c[0]));for(let n=0;n<l;n++)d[A*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)d[A*l+e]/=G-p;if(p=G,++G,C=A+1,A=t,G>i)break}return C<u&&d.fill(o,C*l,u*l),[d,h]}const DE={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=FE(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const OE={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=FE(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const ME={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Yd(0,r,i),p=!1,G=n.bufferSync(r);let C;switch(s.dtype){case"bool":C=lE(G,n.bufferSync(s),i,d,u,l,c,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":C=lE(G,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"int32":C=lE(G,n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],p);break;case"string":C=lE(G,n.bufferSync(s),i,d,u,l,c,h,Es(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,C.dtype,C.values)}};const LE={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Gt(o,r.shape)[0],c=yC(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=Ck({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},zE=Yv((e=>Math.sqrt(e))),PE=Qv(yr,(e=>Math.sqrt(e))),VE={kernelName:yr,backendName:"cpu",kernelFunc:PE},BE={kernelName:_r,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;qv(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},WE=rw(((e,t)=>{const n=e-t;return n*n})),UE=vw(Rr,WE),HE={kernelName:Rr,backendName:"cpu",kernelFunc:UE},jE=Yv(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),qE=Jv(Fr,jE),KE={kernelName:Fr,backendName:"cpu",kernelFunc:qE},XE=Qv(Yr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),YE={kernelName:Yr,backendName:"cpu",kernelFunc:XE};function QE(e,t,n,a){const r=Ui(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const JE={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;qv(r,"stridedSlice");const{finalShapeSparse:p,finalShape:G,isIdentity:C,sliceDim0:A,isSimpleSlice:T,begin:f,end:m,strides:g}=cl(r.shape,s,o,i,c,l,u,h,d);let y;if(C)y=Ew({inputs:{x:r},backend:n,attrs:{shape:G}});else if(A||T){rt(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Yc(f,m,g),t=Ck({inputs:{x:r},backend:n,attrs:{begin:f,size:e}});y=Ew({inputs:{x:t},backend:n,attrs:{shape:G}}),n.disposeIntermediateTensorInfo(t)}else{const e=QE(p,n.bufferSync(r),g,f);y=n.makeTensorInfo(G,e.dtype,e.values)}return y}};class ZE{constructor(e,t,n,a,r,s){this.separator=Ss(e),this.nGramWidths=t,this.leftPad=Ss(n),this.rightPad=Ss(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),h=t+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let t=0;t<u;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let G=0;const C=e=>e.forEach((e=>p[G++]=e));for(let e=0;e<c;++e)C(this.leftPad),C(this.separator);for(let t=0;t<u-1;++t)C(e[h+t]),C(this.separator);if(u>0){C(e[h+u-1]);for(let e=0;e<l;++e)C(this.separator),C(this.rightPad)}else{for(let e=0;e<l-1;++e)C(this.rightPad),C(this.separator);C(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=Tt("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function $E(e,t,n,a,r,s,o,i){return new ZE(n,a,r,s,o,i).compute(e,t)}const eR={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[G,C]=$E(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([G.length],"string",G),n.makeTensorInfo(h.shape,"int32",C)]}};function tR(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function nR(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;tR(e[d],t,n,r);const c=r.length-a;i[d]=c,s+=c,o=Math.max(o,c)}const c=Tt("int32",2*s),l=new Array(s),u=[a,o];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)c[2*h]=d,c[2*h+1]=e,l[h]=r[h],++h;return[c,l,u]}const aR={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=nR(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function rR(e,t){const n=Tt("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ws(e[a]).modulo(t).getLowBitsUnsigned();return n}const sR={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=rR(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},oR=Qv(Pr,(e=>Math.tan(e))),iR={kernelName:Pr,backendName:"cpu",kernelFunc:oR},cR=Qv(Vr,(e=>Math.tanh(e)));const lR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Yd(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),G=lE(h,d,a.shape,u,c,i,o,l,p,!1);return n.makeTensorInfo(a.shape,G.dtype,G.values)}};function uR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Ui(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const hR={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;qv(r,"tile");const o=uR(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},dR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function pR(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);pR(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(at(e,n,t),dR(e[a],r)>0&&at(e,n,a);s<o;){for(at(e,s,o),s++,o--;dR(e[s],r)<0;)s+=1;for(;dR(e[o],r)>0;)o-=1}0===dR(e[n],r)?at(e,n,o):(o+=1,at(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function GR(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],c=At(n,o*a),l=At("int32",o*a);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(pR(s,a),s=s.slice(0,a)),r&&s.sort(dR);const o=h*a,u=c.subarray(o,o+a),d=l.subarray(o,o+a);for(let e=0;e<a;e++)u[e]=s[e].value,d[e]=s[e].index}const u=t.slice();return u[u.length-1]=a,[Ui(u,n,c),Ui(u,"int32",l)]}const CR={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;qv(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=GR(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const AR={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[G,C]=null!=l?l:[h,d],A=[u,G,C,p],T=wt(r.shape),f=T[0],m=T[1],g=T[2],y=wt(A),b=y[0],x=y[1],v=y[2],w=At(r.dtype,it(A));w.fill(c);const k=a.data.get(r.dataId).values,I=a.data.get(s.dataId).values;for(let N=0;N<u;++N){const e=1===s.shape[0]?I:I.subarray(8*N,8*N+8);for(let t=0;t<G;++t)for(let n=0;n<C;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[0]*n+e[1]*t+e[2])/s,u=(e[3]*n+e[4]*t+e[5])/s,p=TR(l,d,i),G=TR(u,h,i);switch(o){case"nearest":r=mR(k,h,d,f,m,g,N,G,p,a,c);break;case"bilinear":r=gR(k,h,d,f,m,g,N,G,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}w[N*b+t*x+n*v+a]=r}return a.makeTensorInfo(A,r.dtype,w)}return{dataId:a.write(w,A,r.dtype),shape:r.shape,dtype:r.dtype}}};function TR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return tt(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return tt(0,n,t-1)}(e,t);case"nearest":return function(e,t){return tt(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function fR(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function mR(e,t,n,a,r,s,o,i,c,l,u){return fR(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function gR(e,t,n,a,r,s,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,G=d+1;return(p-i)*((G-c)*fR(e,t,n,a,r,s,o,h,d,l,u)+(c-d)*fR(e,t,n,a,r,s,o,h,G,l,u))+(i-h)*((G-c)*fR(e,t,n,a,r,s,o,p,d,l,u)+(c-d)*fR(e,t,n,a,r,s,o,p,G,l,u))}function yR(e,t,n,a){const r=Gt(t,n)[0],s=[1,n[0],1];for(let G=0;G<r;G++)s[0]*=n[G];s[1]=n[r];for(let G=r+1;G<n.length;G++)s[2]*=n[G];const o=new Map,i=new Int32Array(n[r]),c=new Hs(s,a,e),l=[],u=1===s[0]&&1===s[2];for(let G=0;G<n[r];G++){let t;if(u)t=e[G].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(c.get(t,G,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[G]=n;else{const e=o.size;o.set(t,e),i[G]=e,l.push(G)}}const h=s.slice();h[1]=o.size;const d=new Hs(h,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(c.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const bR={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;qv(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=yR(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const xR={kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[s]=p;const e=Ck({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=Ew({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return d}};const vR={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;qv(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let d=0;d<l;++d){const e=SI({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=e,c.push(e)}for(let d=0;d<o;++d){const e=ks(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=AI({inputs:{a:t,b:u},backend:n}),s=bw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=lI({inputs:{a:s,b:r},backend:n}),l=hI({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(s),c.push(o),c.push(l)}const h=kS({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},wR=[Dw,Mw,zw,Vw,Sw,Bw,jw,qw,Kw,Xw,Qw,Zw,ek,ak,sk,lk,uk,hk,dk,Fw,pk,Tk,gk,xk,vk,xw,Ik,Sk,Tw,Ek,Ok,Lk,zk,Pk,Vk,Bk,Wk,Hk,qk,Kk,Xk,Yk,Qk,Jk,$k,eI,tI,nI,aI,rI,sI,oI,pI,$v,GI,TI,wI,NI,EI,FI,HI,qI,KI,QI,$I,eN,tN,aN,sN,cN,hN,tw,dN,Fk,GN,AN,fN,aw,yN,vN,kN,SN,RN,DN,MN,PN,VN,BN,HN,KN,XN,YN,QN,JN,ZN,$N,eS,aS,rS,iS,uS,uI,dS,GS,AS,fS,yS,bS,wS,IS,NS,RS,iw,FS,zS,BS,KS,YS,gw,MI,JS,lw,hw,Rw,ZS,$S,eE,tE,nE,aE,sE,cE,uE,pE,GE,fE,Gw,gE,bE,vE,Ak,lS,IE,NE,EE,_E,DE,OE,ME,LE,VE,BE,HE,KE,YE,JE,eR,aR,sR,VI,dI,iR,{kernelName:Vr,backendName:"cpu",kernelFunc:cR},lR,hR,CR,AR,Hw,bR,xR,vR,vS];for(const n of wR)cs(n);const kR={},IR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function NR(e,t){if(!(e in kR)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(zt().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete kR[e]}),!1),zt().getBool("SOFTWARE_WEBGL_ENABLED")&&(IR.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",IR)||n.getContext("experimental-webgl",IR);return n.getContext("webgl2",IR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;kR[e]=n}const n=kR[e];return null==n||n.isContextLost()?(delete kR[e],NR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),kR[e])}var SR,ER,RR;function _R(e,t){return[t,e]}function FR(e){const t=it(e);return ut(Math.ceil(t/4))}function DR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function OR(e,t){const n=e;let a,r,s,o,i,c,l,u,h,d;return 2===zt().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function MR(e,t){const n=t();return zt().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(SR||(SR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ER||(ER={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(RR||(RR={}));function LR(e){return!!(zt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function zR(e,t){return KR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const PR=/ERROR: [0-9]+:([0-9]+):/g;function VR(e,t){const n=PR.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>ht((t+1).toString(),s)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(ht(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function BR(e,t){if(MR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function WR(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(MR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),MR(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),MR(e,(()=>e.enableVertexAttribArray(i))),!0)}function UR(e,t,n,a){MR(e,(()=>function(e,t,n){XR(e,n),MR(e,(()=>e.activeTexture(e.TEXTURE0+n))),MR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),MR(e,(()=>e.uniform1i(n,a)))}function HR(e,t,n){MR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),MR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function jR(e,t){MR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),MR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function qR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function KR(e,t,n){const a=MR(e,(()=>t()));if(null==a)throw new Error(n);return a}function XR(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function YR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return it(e.slice(0,e.length-t))}function QR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function JR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[YR(e),...QR(e)]),t}function ZR(e){return e%2===0}function $R(e,t){if(ct(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(ZR(n)&&ZR(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&ZR(e[0])&&ZR(t[0])}let e_,t_;function n_(e,t){return null!=e.getExtension(t)}function a_(e){try{if(null!=NR(e))return!0}catch(OB){return console.log("Error when getting WebGL context: ",OB),!1}return!1}function r_(e){if(0===e)return!1;const t=NR(e);if(1!==e){if(n_(t,"EXT_color_buffer_float"))return s_(t);const e="EXT_color_buffer_half_float";if(n_(t,e)){const n=t.getExtension(e);return function(e,t){const n=OR(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!n_(t,"OES_texture_float"))return!1;if(!n_(t,"WEBGL_color_buffer_float"))return!1;return s_(t)}function s_(e){const t=OR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function o_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&rt("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const i_=zt();function c_(){let e,t,n,a,r,s,o,i,c,l;return 2===zt().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=zt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function l_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=wt(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function u_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=wt(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function h_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function d_(e){const t=wt(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}i_.registerFlag("HAS_WEBGL",(()=>i_.getNumber("WEBGL_VERSION")>0)),i_.registerFlag("WEBGL_VERSION",(()=>a_(2)?2:a_(1)?1:0)),i_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),i_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===i_.get("WEBGL_VERSION"))),i_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),i_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),i_.registerFlag("WEBGL_PACK",(()=>i_.getBool("HAS_WEBGL"))),i_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_CLIP",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_REDUCE",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_CONV_IM2COL",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>i_.getBool("WEBGL_PACK"))),i_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==e_){const t=NR(e);e_=t.getParameter(t.MAX_TEXTURE_SIZE)}return e_}(i_.getNumber("WEBGL_VERSION")))),i_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==t_){const t=NR(e);t_=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,t_)}(i_.getNumber("WEBGL_VERSION")))),i_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=i_.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=NR(e);return t=n_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:n_(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),i_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>i_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!mo())),i_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=NR(e);if(1===e){if(!n_(t,"OES_texture_float"))return!1}else if(!n_(t,"EXT_color_buffer_float"))return!1;return s_(t)}(i_.getNumber("WEBGL_VERSION")))),i_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!i_.getBool("WEBGL_FORCE_F16_TEXTURES")&&i_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),i_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>r_(i_.getNumber("WEBGL_VERSION")))),i_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=i_.getNumber("WEBGL_VERSION"))&&null!=NR(e).fenceSync;var e})),i_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>i_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),i_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),i_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>mo()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),i_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),i_.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),i_.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),i_.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),i_.registerFlag("WEBGL_EXP_CONV",(()=>!1)),i_.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>i_.getBool("IS_TEST"))),i_.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),i_.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),i_.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),i_.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const p_="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:G_}=s;function C_(e,t,n){const a=[];if(e.forEach((e=>{const t=it(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=w_(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?T_(e,a):A_(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=G_(e.shapeInfo.logicalShape,t.logicalShape),c=v_(o),l=o-s;let u;const h=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+l]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+l]))).join(", ");let p="return outputValue;";const G=1===it(e.shapeInfo.logicalShape),C=it(t.logicalShape),A=1===C;if(1!==s||G||A){if(G&&!A)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&ct(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=v_(c),u=G_(e.shapeInfo.logicalShape,t.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let G="";G=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(G,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=c_(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(f_,"\n    ").concat(m_,"\n    ").concat(g_,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ct(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(ct(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=u_(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=l_(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=u_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=l_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=l_(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=l_(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=y_);return[h,c,u,r,l,s,n.userCode].join("\n")}function A_(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=b_(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(x_(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=b_(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ct(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=Ct(n),c=o;if(c.length<n.length){const n=k_(e,c),a=["row","col"];return"\n      ".concat(A_(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(I_(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(x_(e),"\n      }\n    ");const l=s[0],u=s[1],h=b_(a);if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=Ct(n),l=i;if(l.length<n.length){const n=k_(e,l),a=["row","col","depth"];return"\n        ".concat(A_(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(I_(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(x_(e),"\n      }\n    ");const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const G=b_(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(G,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(G,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=Ct(n);if(c.length<n.length){const n=k_(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(A_(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(I_(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(x_(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],G="int stride2 = ".concat(a,"Shape[3];"),C="int stride1 = ".concat(a,"Shape[2] * stride2;"),A="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(G,"\n        ").concat(C,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const T=b_(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(G,"\n      ").concat(C,"\n      ").concat(A,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(T,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(T,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:c,keptDims:l}=Ct(t);if(c.length<t.length){const t=k_(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(A_(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(I_(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(x_(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const G=b_(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(G,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=Ct(t);if(r.length<t.length){const t=k_(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(A_(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(I_(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(x_(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],G=d[1];if(G===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(G,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(G===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(G,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const C=b_(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(C,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(G,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function T_(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=c_();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=c_();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],c=c_();if(null!=s&&ct(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=k_(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(T_(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(I_(o,a),");\n        }\n      ")}const i=c_();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=c_();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",G="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let C=2;C<o-1;C++)p="int b".concat(C,", ")+p,d*=s[o-C-1],G="b".concat(C," * ").concat(d," + ")+G;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(G,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const f_="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",m_="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",g_="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",y_="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function b_(e){return"offset".concat(e)}function x_(e){const t=e.name,n=it(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function v_(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function w_(e,t,n){const{newShape:a,keptDims:r}=Ct(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,c=!e&&s>1&&!ct(t,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function k_(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function I_(e,t){return t.map((t=>e[t])).join(", ")}function N_(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=C_(r,o,t),c=function(e,t){const n=KR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(MR(e,(()=>e.shaderSource(n,t))),MR(e,(()=>e.compileShader(n))),zt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw VR(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return zt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},S_(e,t,l)))}function S_(e,t,n){const a=[],r=[];let s,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===zt().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,u),offset:e.getUniformLocation(n,"offset".concat(h),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function E_(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!ct(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!ct(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function R_(e){return zt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class __{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=SR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=c_();this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?u_(["r","c","d"],e):l_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class F_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=SR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=c_();this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?u_(["r","c","d"],e):l_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class D_{constructor(e){this.variableNames=["A"],this.outTexUsage=ER.DOWNLOAD;const t=c_();this.outputShape=e,this.userCode="\n      ".concat(p_,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class O_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ER.DOWNLOAD;const t=c_();this.outputShape=e,this.userCode="\n      ".concat(p_,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const M_={R:0,G:1,B:2,A:3};class L_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=c_();this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(M_[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":d_(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class z_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=c_();this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":d_(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function P_(e){const t=c_();return function(e,t){const n=KR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(MR(e,(()=>e.shaderSource(n,t))),MR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function V_(e){return function(e,t){const n=KR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function B_(e){return function(e,t){const n=KR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),MR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function W_(e,t,n,a,r,s){!function(e,t){const n=zt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return KR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return MR(e,(()=>e.bindTexture(i,o))),MR(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),MR(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),MR(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),MR(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===zt().getNumber("WEBGL_VERSION")?MR(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):MR(e,(()=>e.texStorage2D(i,1,a,t,n))),MR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function U_(e){return e.internalFormatFloat}function H_(e){return e.internalFormatHalfFloat}function j_(e){return e.downloadTextureFormat}function q_(e){return e.internalFormatPackedFloat}function K_(e){return e.internalFormatPackedHalfFloat}function X_(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=DR(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Y_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=zt().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){kR[e]=t}(t,e)):this.gl=NR(t),e=this.gl,2===zt().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>MR(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>MR(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>MR(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>MR(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>MR(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>MR(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>MR(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>MR(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===zt().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=zR(this.gl,e),n_(this.gl,t))this.textureHalfFloatExtension=zR(this.gl,t);else if(zt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),n_(this.gl,a))this.colorBufferHalfFloatExtension=zR(this.gl,a);else if(zt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",n_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!n_(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=V_(this.gl),this.indexBuffer=B_(this.gl),this.framebuffer=function(e){return KR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=OR(this.gl,this.textureHalfFloatExtension)}get debug(){return zt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;MR(e,(()=>e.finish())),MR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),MR(e,(()=>e.deleteFramebuffer(this.framebuffer))),MR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),MR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),MR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_R(t,n);return W_(e,r,s,U_(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_R(t,n);return W_(e,r,s,H_(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_R(t,n);return W_(e,r,s,j_(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){MR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===zt().getNumber("WEBGL_VERSION")?MR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):MR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===zt().getNumber("WEBGL_VERSION")?MR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):MR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),MR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,c;MR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===zt().getNumber("WEBGL_VERSION")?MR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):MR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,o))),MR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=DR(t,n);return W_(e,r,s,K_(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=DR(t,n);return W_(e,r,s,q_(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jR(this.gl,this.framebuffer),this.outputTexture=null),MR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=_R(t,n),o=new Uint8Array(t*n*4);return MR(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return X_(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();MR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return MR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),MR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),MR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(zt().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return MR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=P_(t));const n=function(e){return KR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);MR(t,(()=>t.attachShader(n,this.vertexShader))),MR(t,(()=>t.attachShader(n,e))),function(e,t){if(MR(e,(()=>e.linkProgram(t))),!zt().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&BR(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;MR(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){MR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),WR(e,t,"clipSpacePos",n,3,20,0)&&WR(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(MR(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&BR(this.gl,this.program),MR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return KR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),MR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),UR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=DR(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&BR(this.gl,this.program),qR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}MR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),MR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zR(this.gl,2===zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await dt((()=>this.disposed||this.isQueryAvailable(e,zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in zt().platform&&(n=zt().platform.setTimeoutCustom.bind(zt().platform)),dt((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),HR(this.gl,e,this.framebuffer),this.debug&&qR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(HR(this.gl,this.outputTexture,this.framebuffer),this.debug&&qR(this.gl)):jR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;HR(a,e,this.framebuffer),this.debug&&qR(a),this.outputTexture=e,MR(a,(()=>a.viewport(0,0,t,n))),MR(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),MR(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Q_,bincountImpl:J_,bincountReduceImpl:Z_,bitwiseAndImpl:$_,castImpl:eF,ceilImpl:tF,concatImpl:nF,equalImpl:aF,expImpl:rF,expm1Impl:sF,floorImpl:oF,gatherNdImpl:iF,gatherV2Impl:cF,greaterImpl:lF,greaterEqualImpl:uF,lessImpl:hF,lessEqualImpl:dF,linSpaceImpl:pF,logImpl:GF,maxImpl:CF,maximumImpl:AF,minimumImpl:TF,multiplyImpl:fF,negImpl:mF,notEqualImpl:gF,prodImpl:yF,raggedGatherImpl:bF,raggedRangeImpl:xF,raggedTensorToTensorImpl:vF,rangeImpl:wF,rsqrtImpl:kF,scatterImpl:IF,sigmoidImpl:NF,simpleAbsImpl:SF,sliceImpl:EF,sparseFillEmptyRowsImpl:RF,sparseReshapeImpl:_F,sparseSegmentReductionImpl:FF,sqrtImpl:DF,staticRegexReplaceImpl:OF,stridedSliceImpl:MF,stringNGramsImpl:LF,stringSplitImpl:zF,stringToHashBucketFastImpl:PF,subImpl:VF,tileImpl:BF,topKImpl:WF,transposeImpl:UF,uniqueImpl:HF}=k;function jF(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function qF(e,t){return 1===t?[e]:jF(e,t)}class KF{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=R_(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=qF("rc",this.rank),t=v_(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class XF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?h_(["r","c","d"],"inputShape"):l_(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":d_(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class YF{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=JF(t,n),r=ZF(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=QF(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===RR.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===RR.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===RR.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===RR.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===RR.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=JF(n,a),s=ZF(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=QF(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=zt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function QF(e,t,n,a,r){const s=function(e,t){switch(e){case RR.PACKED_2X2_FLOAT32:return q_(t);case RR.PACKED_2X2_FLOAT16:return K_(t);case RR.UNPACKED_FLOAT32:return U_(t);case RR.UNPACKED_FLOAT16:return H_(t);case RR.PACKED_4X1_UNSIGNED_BYTE:return j_(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=DR(e[0],e[1]);o=t*n}else{const[t,n]=_R(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function JF(e,t){if(e===ER.UPLOAD)return RR.PACKED_2X2_FLOAT32;if(e===ER.RENDER||null==e)return function(e){return zt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?RR.PACKED_2X2_FLOAT32:RR.UNPACKED_FLOAT32:e?RR.PACKED_2X2_FLOAT16:RR.UNPACKED_FLOAT16}(t);if(e===ER.DOWNLOAD||e===ER.PIXELS)return RR.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function ZF(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class $F{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const eD="if (isnan(x)) return x;",tD="return x;",nD="return abs(x);";const aD="return (x >= 0.0) ? x : (exp(x) - 1.0);",rD=eD+"\n  return (x < 0.0) ? 0.0 : x;\n",sD=eD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",oD="return x;",iD="return 1.0 / (1.0 + exp(-1.0 * x));",cD="return x;",lD="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",uD="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hD="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",dD="return 1.0 / (1.0 + exp(-1.0 * x));";class pD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class GD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length);const t=e.length,n=qF("rc",t),a=v_(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const CD=rp,AD={};const TD=zt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class fD extends Ze{nextDataId(){return fD.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!zt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Y_)t=e;else{const n=NR(zt().getNumber("WEBGL_VERSION"),e);t=new Y_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=NR(zt().getNumber("WEBGL_VERSION"));t=new Y_(e),this.binaryCache=((n=zt().getNumber("WEBGL_VERSION"))in AD||(AD[n]={}),AD[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new YF(this.gpgpu),this.numMBBeforeWarning=null==zt().global.screen?1024:zt().global.screen.height*zt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Je(this,Do())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=JR(t),l=new L_(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if((zt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||zt().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:ER.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(zt().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:ER.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new pD(o,oD):new $F(o,oD);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=Ns()),"complex64"===a){u=aC(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Ns()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new pD(a,oD):new $F(a,oD);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(zt().getBool("DEBUG")&&!zt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===zt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&zt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...FR(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=aC(e[0],e[1])}else if(null==u)l=this.getValuesFromTexture(e);else{const e=it(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;MR(e,(()=>e.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Do().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new pD(r,oD):new $F(r,oD);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=Do().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Es(e)));return Ui(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ui(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!LR(n)){if(zt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=it(t);if(zt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...FR(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=zt().getBool("WEBGL_PACK")&&!0===a,o=s?JR(t):t,i=s?new O_(o):new D_(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=_s(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=_s(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ns(),endMs:null}}endTimer(e){return zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ns(),e)}async getQueryTime(e){if(zt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:TD;return zt().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&it(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ts("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return CD(e.shape,t)}packedUnaryOp(e,t,n){const a=new pD(e.shape,t),r=this.compileAndRun(a,[e],n);return Do().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=SF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(zt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nD,e.dtype);const t=new $F(e.shape,nD),n=this.compileAndRun(t,[e]);return Do().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&gt(n[0])){const r=n.map((e=>Ss(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Do().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new GD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new KF(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[YR(e.shape),...QR(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[YR(t),...QR(t)],s=new XF(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){rt(it(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=JR(r);let i;i=a?new F_(o):new __(o);const c=[null!=t?t:FR(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===SR.DENSE){const t=null!=s?s:FR(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===it(o.shape))return i.values=At(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&it(t.shape)<=zt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!$R(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=w_(e.packedInputs,t.shape,s);let l="",u="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=wt(i);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&ct(t.shape,s),G=1===it(t.shape),C=Cc(t.shape,n.shape),A=!e.packedInputs&&d===n.shape.length&&ct(s,n.texData.texShape),T=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(A,"_").concat(o?c:"","_").concat(i.length,"_").concat(G,"_").concat(C,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(T,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat(zt().getNumber("WEBGL_VERSION")),s}(e,l,u),d=this.getAndSaveBinary(h,(()=>N_(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let G;p&&(G=this.startTimer()),zt().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(E_(t.inShapeInfos,n),E_([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===zt().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=w_(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(it(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=wt(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],s=r[c];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(G=this.endTimer(G),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(G)}));const C=zt().getNumber("WEBGL_FLUSH_THRESHOLD");if(C>0){const e=Ns();e-this.lastGlFlushTime>C&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!zt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!zt().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Mo((()=>{if(!zt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=zt().getBool("DEBUG");zt().set("DEBUG",!1);const t=this.abs(tc(1e-8)).dataSync()[0];if(zt().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=Ns());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=zt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=zt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&zt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?nt(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Ct(e);e=t.newShape}let r=it(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=YR(e);let n=2,a=2;e.length&&([n,a]=QR(e)),r=t*(n/2)*(a/2),s=ut(r).map((e=>2*e))}else s=ut(r);return s}(n,i),t.texShape=u),null!=r){const e=JR(n);let s,o=u[1],h=u[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=DR(u[0],u[1])),s=i?new z_(e,d):new L_(e,d);const p=d?[h,o]:u,G=this.makeTensorInfo(p,a),C=this.texData.get(G.dataId);C.usage=d?ER.PIXELS:ER.UPLOAD,C.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(G.dataId),o,h,r);const A=[[h,o]],T=!0,f=this.runWebGLProgram(s,[G],a,A,T),m=this.texData.get(f.dataId);t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,zt().get("ENGINE_COMPILE_ONLY")?this.disposeData(f.dataId):(t.texture=m.texture,t.values=null,this.texData.delete(f.dataId)),this.disposeIntermediateTensorInfo(G),c&&(this.uploadWaitMs+=Ns()-l)}else{const e=this.acquireTexture(u,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*mt(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await _G(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw VR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=S_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=Do().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,s,o);return Do().makeTensorFromDataId(c,t,n,i)}}fD.nextDataId=0;go()&&Po("webgl",(()=>new fD),2);const mD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class gD{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Tc(t,n),this.enableShapeUniforms=R_(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const yD="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class bD{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Tc(t,n);const r=this.outputShape.length;this.enableShapeUniforms=R_(r);let s="";if(a)if(0===r||1===it(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=v_(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=qF("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function xD(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const vD={kernelName:sa,backendName:"webgl",kernelFunc:xD};function wD(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=xD({inputs:{x:a},backend:n}),c=xD({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const kD={kernelName:An,backendName:"webgl",kernelFunc:wD},ID="return (a < 0.) ? b * a : a;",ND="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const SD={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",ks(s,"float32")),i=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bD(ND,r.shape,o.shape):new gD(ID,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},ED="return (a < 0.) ? b * a : a;",RD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const _D={kernelName:qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bD(RD,a.shape,r.shape):new gD(ED,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},FD="if (isnan(x)) return x;";function DD(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=zt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new pD(i.shape,n):new $F(i.shape,t),c.runWebGLProgram(u,[i],l)}}function OD(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new gD(t,l.shape,u.shape);return h.runWebGLProgram(o,[r,s],ao(n.dtype,a.dtype))})),s=wD({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||ao(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=s){const e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?LC(e):e,a="string"===l.dtype?LC(t):t,[r,o]=s(l.shape,u.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new bD(n,l.shape,u.shape,a):new gD(t,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function MD(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?cD:tD;if("relu"===e)return t?uD:rD;if("elu"===e)return t?lD:aD;if("relu6"===e)return t?hD:sD;if("prelu"===e)return t?RD:ED;if("leakyrelu"===e)return t?ND:ID;if("sigmoid"===e)return t?dD:iD;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class LD{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=R_(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],G=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let C="",A="";o&&(C=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),A="result = activation(result);");const T=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let f="rc.x",m="rc.x";e[0]<t[0]?f="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(m="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(C,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(f,";\n        int batchB = ").concat(m,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(G[0],");\n          result += (").concat(p[1]," * ").concat(G[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(T,"\n\n        ").concat(A,"\n\n        setOutput(result);\n      }\n    ")}}const zD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class PD{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Tc(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const VD="return a * b;";function BD(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=ao(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new PD(zD.REAL,a.shape,r.shape),o=new PD(zD.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=wD({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=fF(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bD(VD,a.shape,r.shape):new gD(VD,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const WD={kernelName:Oa,backendName:"webgl",kernelFunc:BD};function UD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=it(r.shape),c=pt(s,i),l=it(c);rt(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||$R(r.shape,c)||null!==u.texture&&$R(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[YR(e.shape),...QR(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[YR(t),...QR(t)],o=new XF(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,o)}const HD={kernelName:tr,backendName:"webgl",kernelFunc:UD};class jD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(lt(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class qD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function KD(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=BG(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,h;u="mean"===n?0===o?new jD({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new jD({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new qD({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class XD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=v_(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class YD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=v_(this.rank),r=jF("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function QD(e,t,n){const a=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YD(e.shape,t):new XD(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function JD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=Gt(r,e.shape);let i=o;const c=Mu(i,s),l=null!=c;let u=e;l&&(u=QD(e,c,a),i=zu(i.length,s)),Ou("sum",i,s);const[h,d]=Fu(u.shape,i);let p=h;n&&(p=Du(h,o));const G=it(d),C=UD({inputs:{x:u},attrs:{shape:[it(e.shape)/G,G]},backend:a}),A=KD(C,ro(e.dtype),"sum",a),T=UD({inputs:{x:A},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(A),l&&a.disposeIntermediateTensorInfo(u),T}(r,s,o,n)}const ZD={kernelName:br,backendName:"webgl",kernelFunc:JD};function $D(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=UF(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=QD(r,s,o);return l}const eO={kernelName:Hr,backendName:"webgl",kernelFunc:$D},tO=1e3;function nO(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,h=n.shape.length,d=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],G=a?t.shape[u-1]:t.shape[u-2],C=r?n.shape[h-2]:n.shape[h-1],A=t.shape.slice(0,-2),T=n.shape.slice(0,-2),f=it(A),m=it(T),g=Tc(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([G,C]);rt(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const y=a?[f,d,G]:[f,G,d],b=r?[m,C,p]:[m,p,C],x=UD({inputs:{x:t},backend:s,attrs:{shape:y}}),v=UD({inputs:{x:n},backend:s,attrs:{shape:b}}),w=[x,v],k=Math.max(f,m),I=a?x.shape[1]:x.shape[2],N=null!=o,S=null!=i,E="leakyrelu"===l,R=null!=l?MD(l,!0):null;let _;if((1===G||1===C)&&I>tO&&!1===(N||S||E||null!=R)){let e=x,t=v;a&&(e=$D({inputs:{x:x},backend:s,attrs:{perm:[0,2,1]}}),w.push(e)),r&&(t=$D({inputs:{x:v},backend:s,attrs:{perm:[0,2,1]}}),w.push(t));const n=1===C;let o=e;1!==C&&(o=UD({inputs:{x:e},backend:s,attrs:{shape:[k,I,1]}}),w.push(o));const i=1===C?2:1;let c=t;n&&(c=UD({inputs:{x:t},backend:s,attrs:{shape:[k,1,I]}}),w.push(c));const l=BD({inputs:{a:o,b:c},backend:s});_=JD({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),w.push(l)}else{const e=ao(t.dtype,n.dtype),l=new LD(y,b,[k,G,C],a,r,N,R,S,E),u=[x,v];if(null!=o&&u.push(o),S&&u.push(i),E){const e=s.makeTensorInfo([],"float32",ks(c,"float32"));u.push(e),w.push(e)}_=s.runWebGLProgram(l,u,e)}const F=UD({inputs:{x:_},backend:s,attrs:{shape:g}});w.push(_);for(const D of w)s.disposeIntermediateTensorInfo(D);return F}const aO={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return nO({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},rO="return abs(x);";const sO={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=SF(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=zt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pD(a.shape,rO):new $F(a.shape,rO),n.runWebGLProgram(r,[a],a.dtype)}},oO=DD({opSnippet:eD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),iO={kernelName:Ht,backendName:"webgl",kernelFunc:oO},cO=DD({opSnippet:eD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),lO={kernelName:jt,backendName:"webgl",kernelFunc:cO},uO="return a + b;",hO=OD({opSnippet:uO,packedOpSnippet:uO,supportsComplex:!0,cpuKernelImpl:Q_}),dO={kernelName:qt,backendName:"webgl",kernelFunc:hO};class pO{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class GO{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const CO={kernelName:Kt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return xD({inputs:{x:r[0]},backend:a});if(r.length>zt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>ao(e,t))),o=r.map((e=>e.shape)),i=zt().getBool("WEBGL_PACK")?new GO(r[0].shape,o):new pO(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const AO={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Gt(s,r.shape);let l=c;const u=Mu(l,i);let h=r;null!=u&&(h=$D({inputs:{x:r},backend:n,attrs:{perm:u}}),l=zu(l.length,i)),Ou("all",l,i);const[d,p]=Fu(h.shape,l),G=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,it(p)]}}),C=KD(G,G.dtype,"all",n);let A;if(o){A=UD({inputs:{x:C},backend:n,attrs:{shape:Du(d,c)}})}else A=UD({inputs:{x:C},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),null!=u&&n.disposeIntermediateTensorInfo(h),A}};const TO={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Gt(s,r.shape);let l=c;const u=Mu(l,i);let h=r;null!=u&&(h=$D({inputs:{x:r},backend:n,attrs:{perm:u}}),l=zu(l.length,i)),Ou("any",l,i);const[d,p]=Fu(h.shape,l),G=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,it(p)]}}),C=KD(G,G.dtype,"any",n);let A;if(o){A=UD({inputs:{x:C},backend:n,attrs:{shape:Du(d,c)}})}else A=UD({inputs:{x:C},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),null!=u&&n.disposeIntermediateTensorInfo(h),A}};class fO{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class mO{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,rt(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=v_(i),l=qF("coords",i);let u,h;if(1===s){h=i+1;const e=v_(h);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],G=d.map((e=>"int "+e)),C=qF("sourceLocR",h-1).concat("inIdx.r"),A=qF("sourceLocG",h-1).concat("inIdx.g"),T=qF("sourceLocB",h-1).concat("inIdx.b"),f=qF("sourceLocA",h-1).concat("inIdx.a"),m="max"===n?"greaterThan":"lessThan",g=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(C.join(),"),\n                             getBestIndicesAChannel(").concat(A.join(),"),\n                             getBestIndicesAChannel(").concat(T.join(),"),\n                             getBestIndicesAChannel(").concat(f.join(),")));"),y="vec4(\n            getAChannel(".concat(C.join(),"),\n            hasNextCol ? getAChannel(").concat(A.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(T.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(f.join(),") : 0.)"),b=a?"":"\n      float getBestIndicesAChannel(".concat(G.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(G.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(b,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(y,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(g,"\n          vec4 candidate = ").concat(y,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(m,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function gO(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=BG(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new fO(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=gO(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function yO(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=BG(r[r.length-1]),o=new mO(r,s,n,null==a),i=null==a?[t]:[t,a],c=e.runWebGLProgram(o,i,"int32");if(c.shape.length===t.shape.length){const a=yO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),a}return c}function bO(e,t,n,a){const r=[n];if(Ou("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!zt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=Fu(o.shape,r),l=it(c),u=UD({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const h=gO(e,u,a);n.push(h);const d=UD({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return yO(e,t,a)}const xO={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Gt(s,r.shape);const i=Mu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=$D({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=zu(o.length,c.shape.length)),Ou("argMax",[o[0]],c.shape.length);const u=bO(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const vO={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Gt(s,r.shape);const i=Mu(o,r.shape.length);let c=r;const l=[];null!=i&&(c=$D({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=zu(o.length,c.shape.length)),Ou("argMin",[o[0]],c.shape.length);const u=bO(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},wO=DD({opSnippet:eD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),kO={kernelName:Zt,backendName:"webgl",kernelFunc:wO},IO=DD({opSnippet:eD+"return log(x + sqrt(x * x + 1.0));"}),NO={kernelName:$t,backendName:"webgl",kernelFunc:IO},SO=DD({opSnippet:eD+"\n  return atan(x);\n"}),EO={kernelName:en,backendName:"webgl",kernelFunc:SO},RO=OD({opSnippet:mD+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yD+"\n  return result;\n"}),_O={kernelName:nn,backendName:"webgl",kernelFunc:RO},FO=DD({opSnippet:eD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),DO={kernelName:tn,backendName:"webgl",kernelFunc:FO};class OO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const G="avg"===t,C="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),A="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let T="0.0";if(G||(T="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?C:A:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let f="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(f="avgValue / max(count, 1.0)");const m=4*Math.floor(s/4),g=s%4,y="\n      if (".concat(G,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(T,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(T,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(m,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(y,"\n          }\n\n          int xC = xCCorner + ").concat(m,";\n          if (").concat(1===g,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(y,"\n          } else if (").concat(2===g,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(y,"\n          } else if (").concat(3===g,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(y,"\n          }\n        }\n        setOutput(").concat(f,");\n      }\n    ")}}class MO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,G=e.effectiveFilterWidth,C=e.padInfo.front,A=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(C,", ").concat(A,", ").concat(T,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(G,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(G," +\n                      wR * ").concat(G," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let g="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(g="avgValue / max(count, 1.0)");const y=4*Math.floor(s/4),b=s%4,x="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(C,", ").concat(A,", ").concat(T,");\n      const float initializationValue = ").concat(m,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(m,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(y,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(x,"\n            }\n\n            int xC = xCCorner + ").concat(y,";\n            if (").concat(1===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(x,"\n            } else if (").concat(2===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(x,"\n            } else if (").concat(3===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(x,"\n            }\n          }\n        }\n        setOutput(").concat(g,");\n      }\n    ")}}const LO={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;o_(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;rt(Fl(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=xl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))return xD({inputs:{x:r},backend:n});const u=new OO(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const zO={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=vl(r.shape,s,o,[1,1,1],i,c,l),h=new MO(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class PO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class VO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,G=h-1-e.padInfo.top,C=d-1-e.padInfo.left,A=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(G,", ").concat(C,");\n      const float avgMultiplier = float(").concat(A,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const BO={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=vl(o.shape,i,c,[1,1,1],l,u),d=new VO(h);return n.runWebGLProgram(d,[r],o.dtype)}};const WO={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;o_([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=xl(o.shape,i,c,1,l),h=new PO(u);return n.runWebGLProgram(h,[r],o.dtype)}};const UO={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return nO({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class HO{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Tc(e,t),Tc(e,n);let o="0.0";null!=a&&(Tc(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(Tc(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class jO{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Tc(e,t),Tc(e,n);let o="vec4(0.0)";null!=a&&(Tc(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(Tc(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const qO={kernelName:ea,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:c}=t;rt(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rt(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rt(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=zt().getBool("WEBGL_PACK_NORMALIZATION")?new jO(r.shape,s.shape,o.shape,h,d,l):new HO(r.shape,s.shape,o.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class KO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=v_(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return XO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(XO[t]," = start[").concat(t,"] + coords.").concat(XO[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const XO=["x","y","z","w","u","v"];class YO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=v_(this.rank),n=qF("coords",this.rank),a=qF("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function QO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,c]=il(r,s,o);if(Kc(r,i,c),0===it(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=EF(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=sl(r.shape,i,c);if(l||!u){const e=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YO(c):new KO(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=ol(t,wt(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const JO={kernelName:Cr,backendName:"webgl",kernelFunc:QO},ZO={kernelName:ln,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;rt(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=UG(r.shape,s,i),l=HG(c.length,s.length),u=jG(r.shape,s,i),h=qG(o,s.length),d=KG(u,o,s.length),p=[],G=UD({inputs:{x:r},backend:n,attrs:{shape:c}}),C=$D({inputs:{x:G},backend:n,attrs:{perm:l}}),A=UD({inputs:{x:C},backend:n,attrs:{shape:u}}),T=QO({inputs:{x:A},backend:n,attrs:{begin:h,size:d}});return p.push(G),p.push(C),p.push(A),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};const $O={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=J_(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const eM={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=zt().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=$_(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new bD("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new gD("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const tM={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=Tc(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},nM=OD({opSnippet:"return float(a != b);",cpuKernelImpl:gF,dtype:"bool"}),aM={kernelName:La,backendName:"webgl",kernelFunc:nM};function rM(e){const{inputs:t,backend:n}=e,{input:a}=t;return xD({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const sM={kernelName:Za,backendName:"webgl",kernelFunc:rM},oM="return float(int(x));";const iM={kernelName:pn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return xD({inputs:{x:s},backend:a});const t=Ih(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=wD({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=rM({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!ft(s.dtype,o)){const e=xD({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=eF(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new $F(e.shape,oM),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",At("bool",1)),t=nM({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},cM="return ceil(x);",lM=DD({opSnippet:cM,packedOpSnippet:cM,cpuKernelImpl:tF}),uM={kernelName:Gn,backendName:"webgl",kernelFunc:lM};class hM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class dM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const pM={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=zt().getBool("WEBGL_PACK_CLIP")?new dM(r.shape):new hM(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class GM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function CM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const AM={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new GM(a.shape),o=[CM(a,r.complexTensorInfos.real),CM(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class TM{constructor(e){this.outputShape=[],this.outputShape=DG(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class fM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=DG(e,t);const n=this.outputShape,a=n.length,r=v_(a),s=qF("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let G=1;G<i.length;G++)i[G]=i[G-1]+e[G][t];const c=o[t],l=o.slice(-2),u=o.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let G=1;G<i.length;G++){const e=i[G-1];h+="\n        if (".concat(c," < ").concat(i[G],"  && ").concat(c," >= ").concat(i[G-1],") {\n          return getChannel(\n            getT").concat(G,"(").concat(mM(o,c,e),"),\n            vec2(").concat(mM(l,c,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(mM(o,c,p),"),\n          vec2(").concat(mM(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function mM(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function gM(e){const{inputs:t,backend:n}=e,{input:a}=t;return xD({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const yM={kernelName:ia,backendName:"webgl",kernelFunc:gM};function bM(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>rM({inputs:{input:e},backend:n}))),r=e.map((e=>gM({inputs:{input:e},backend:n}))),s=bM(a,t,n),o=bM(r,t,n),i=wD({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=it(e.shape.slice(t));return UD({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=DG(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=nF(s,o,a,i),l=DG(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const s=e.filter((e=>it(e.shape)>0)),o=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new $F(e[0].shape,oD):new pD(e[0].shape,oD);return n.runWebGLProgram(t,e,a)}const i=zt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(bM(a,t,n))}const a=bM(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new fM(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=DG(e.map((e=>e.shape)),t),r=e.map((e=>UD({inputs:{x:e},attrs:{shape:[-1,it(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),u=new TM(c.map((e=>e.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=UD({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function xM(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Gt(r,t[0].shape)[0];FG(t.map((e=>e.shape)),s);const o=DG(t.map((e=>e.shape)),s);if(0===it(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>it(e.shape)>0));return 1===i.length?xD({inputs:{x:i[0]},backend:n}):bM(i,s,n)}const vM={kernelName:fn,backendName:"webgl",kernelFunc:xM};class wM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),G=e.inChannels%4,C="channelsLast"===e.dataFormat,A=C?1:2,T=C?2:3,f=C?3:1;let m="",g="";n&&(m=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(m,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(f,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(A,"], coords[").concat(T,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(C,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===G,") {\n\n              if (").concat(C,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===G,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(C,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===G,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(C,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(y,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}class kM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),G=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===G,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===G,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===G,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class IM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=R_(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let C=0;C<l;C++)h+="\n           vec4 xTexelC".concat(2*C,";\n           int xTexelC").concat(2*C,"Ready;\n           vec4 xTexelC").concat(2*C+1,";\n           int xTexelC").concat(2*C+1,"Ready;\n           vec4 xC").concat(C,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let C=0;C<l;C++)h+="\n           xTexelC".concat(2*C," = vec4(0.0);\n           xTexelC").concat(2*C,"Ready = 0;\n           xTexelC").concat(2*C+1," = vec4(0.0);\n           xTexelC").concat(2*C+1,"Ready = 0;\n           xC").concat(C," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let C=0;C<(u+1)/2;C++){const t=2*C;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=s%2===0?nt(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const G=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(G,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class NM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=R_(this.outputShape.length);const{dataFormat:n}=t,a=c_(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function SM(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function EM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,G="channelsLast"===a.dataFormat;let C;const A=[];if(null!=o){const e=SM(o.shape,G);null!=e&&(o=UD({inputs:{x:o},backend:r,attrs:{shape:e}}),A.push(o))}if(null!=s){const e=SM(s.shape,G);null!=e&&(s=UD({inputs:{x:s},backend:r,attrs:{shape:e}}),A.push(s))}if(!((1===d||1===p)&&h>tO)&&u.isPacked&&G&&null!=u.texture&&l[2]%2!==0&&ct(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,rt($R(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=UD({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});A.push(p);const G=nO({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),T=r.texData.get(G.dataId);rt(T.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,T.shape=a.outShape,C=xD({inputs:{x:G},backend:r}),C.shape=a.outShape,A.push(G)}else{const e=a.outHeight*a.outWidth,l=UD({inputs:{x:t},backend:r,attrs:{shape:G?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=UD({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=nO({a:G?l:u,b:G?u:l,transposeA:!G,transposeB:false,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});C=UD({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),A.push(l),A.push(u),A.push(h)}for(const T of A)r.disposeIntermediateTensorInfo(T);return C}function RM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:G}=a,C="channelsLast"===G,A=l*u*h,T=p*d,f=[a.batchSize,A,T],m=[];if(null!=o){const e=SM(o.shape,C);null!=e&&(o=UD({inputs:{x:o},backend:r,attrs:{shape:e}}),m.push(o))}if(null!=s){const e=SM(s.shape,C);null!=e&&(s=UD({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}const g=UD({inputs:{x:n},backend:r,attrs:{shape:[1,A,it(n.shape)/A]}});m.push(g);const y=new NM(f,a),b=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],x=r.runWebGLProgram(y,[t],"float32",b),v=UD({inputs:{x:x},backend:r,attrs:{shape:f}});m.push(x),m.push(v);const w=null!=s,k=null!=o,I="leakyrelu"===c,N=c?MD(c,!0):null,S=new LD(C?v.shape:g.shape,C?g.shape:v.shape,C?[a.batchSize,T,a.outChannels]:[a.batchSize,a.outChannels,T],!0,!1,w,N,k,I),E=C?[v,g]:[g,v];if(s&&E.push(s),k&&E.push(o),I){const e=r.makeTensorInfo([],"float32",ks(i,"float32"));E.push(e),m.push(e)}const R=r.runWebGLProgram(S,E,"float32"),_=UD({inputs:{x:R},backend:r,attrs:{shape:a.outShape}});m.push(R);for(const F of m)r.disposeIntermediateTensorInfo(F);return _}const _M={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=Ol(c),d=wl(r.shape,s.shape,o,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&zt().getBool("WEBGL_EXP_CONV")){const e=new IM(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(zt().getBool("WEBGL_CONV_IM2COL"))p=RM({x:r,filter:s,convInfo:d,backend:n});else{const e=new wM(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=EM({x:r,filter:s,convInfo:d,backend:n});const G=UD({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),G}};class FM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class DM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class OM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class MM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const LM={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=Ol(c),d=wl(r.shape,u,o,1,i,l,!1,h),p=new FM(d);return n.runWebGLProgram(p,[r,s],"float32")}};class zM{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=R_(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const PM={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=Ol(l),d=wl(o,s.shape,i,1,c,u,!1,h);if(zt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new zM(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new DM(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const VM={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=kl(r.shape,s.shape,o,c,i),u=new kM(l);return n.runWebGLProgram(u,[r,s],"float32")}};const BM={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a,l=kl(r.shape,c,o,1,i),u=new OM(l);return n.runWebGLProgram(u,[r,s],"float32")}};const WM={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a,l=kl(c,s.shape,i,1,o),u=new MM(l);return n.runWebGLProgram(u,[r,s],"float32")}},UM=DD({opSnippet:FD+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(yD,"\n  return result;\n")}),HM={kernelName:wn,backendName:"webgl",kernelFunc:UM},jM=DD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qM={kernelName:kn,backendName:"webgl",kernelFunc:jM};class KM{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,G]=["".concat(o-1,".0"),"".concat(i-1,".0")],[C,A,T]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[f,m,g]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(G," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(G)];this.userCode="\n      const float height_ratio = float(".concat(C,");\n      const float width_ratio = float(").concat(f,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(A,";\n        float width_scale = ").concat(m,";\n\n        float in_y = ").concat(T,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(g,";\n        if( in_x < 0.0 || in_x > ").concat(G," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const XM={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new KM(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var YM;!function(e){e.Prod="*",e.Sum="+"}(YM||(YM={}));class QM{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===YM.Prod?"1.0":"0.0",o=n?s:"getX(".concat(JM(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(v_(r)," coords = getOutputCoords();\n        int end = ").concat(ZM(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(ZM(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(JM(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function JM(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function ZM(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function $M(e,t,n,a,r,s){const o=t.shape.length,i=Mu([a],o);let c=t;null!=i&&(c=$D({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=zu(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=xD({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const t=new QM(e,c.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new QM(e,c.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=$D({inputs:{x:h},backend:n,attrs:{perm:Lu(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}const eL={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return $M(YM.Prod,r,n,s,o,i)}};const tL={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return $M(YM.Sum,r,n,s,o,i)}};const nL={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=J_(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=Z_(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class aL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rL={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new aL("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class sL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=R_(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class oL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=R_(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let A=0;A<u;A++)d+="\n          vec4 xTexelC".concat(2*A,";\n          int xTexelC").concat(2*A,"Ready;\n          vec4 xTexelC").concat(2*A+1,";\n          int xTexelC").concat(2*A+1,"Ready;\n          vec4 xC").concat(A,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let A=0;A<u;A++)d+="\n          xTexelC".concat(2*A," = vec4(0.0);\n          xTexelC").concat(2*A,"Ready = 0;\n          xTexelC").concat(2*A+1," = vec4(0.0);\n          xTexelC").concat(2*A+1,"Ready = 0;\n          xC").concat(A," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let A=0;A<(h+1)/2;A++){const e=2*A;if(d+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?nt(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",G="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),G="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(C,"\n        ").concat(G,"\n        setOutput(result);\n      }\n    ")}}const iL={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),rt(Fl(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const h=wl(r.shape,s.shape,o,u,i,l,!0);let d;d=zt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new oL(h):new sL(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class cL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class lL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const uL={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=wl(r.shape,u,o,i,c,l,!0),d=new cL(h);return n.runWebGLProgram(d,[r,s],"float32")}};const hL={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=wl(u,s.shape,o,i,c,l,!0),d=new lL(h);return n.runWebGLProgram(d,[r,s],"float32")}};class dL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const pL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=it(a.shape),o=UD({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new dL(s),c=n.runWebGLProgram(i,[o],o.dtype),l=UD({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class GL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const CL={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=bl(r.shape,s.shape,o,i,"NHWC",c);let u;const h=new GL(l);u=n.runWebGLProgram(h,[r,s],"float32");const d=UD({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const AL={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=CC(r,s.length);TC(o.length,c,s);const{path:l,steps:u}=fC(i,c),h=u.length;let d=null,p=o.length;const G=[];for(let C=0;C<h;++C){for(const e of u[C]){const{permutationIndices:t,expandDims:a}=AC(p,c[e]);let r;mC(t)?r=s[e]:(r=$D({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),G.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);ct(r.shape,o)||(r=UD({inputs:{x:r},backend:n,attrs:{shape:o}}),G.push(r)),null===d?d=r:(d=BD({inputs:{a:r,b:d},backend:n}),G.push(d))}C<h-1&&(l[C]>=0&&(d=JD({inputs:{x:d},backend:n,attrs:{axis:l[C]-(o.length-p),keepDims:!1}}),G.push(d)),p--)}for(const C of G)C!==d&&n.disposeIntermediateTensorInfo(C);return d}},TL=DD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),fL={kernelName:Wn,backendName:"webgl",kernelFunc:TL},mL={kernelName:Un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=zt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new gD("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},gL=OD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:aF}),yL={kernelName:jn,backendName:"webgl",kernelFunc:gL},bL=DD({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(JG,";\n  float a1 = ").concat(ZG,";\n  float a2 = ").concat($G,";\n  float a3 = ").concat(eC,";\n  float a4 = ").concat(tC,";\n  float a5 = ").concat(nC,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),xL={kernelName:Hn,backendName:"webgl",kernelFunc:bL},vL=DD({opSnippet:FD+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:rF,dtype:"float32"}),wL={kernelName:qn,backendName:"webgl",kernelFunc:vL};function kL(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(rt(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),UD({inputs:{x:s},backend:a,attrs:{shape:i}})}const IL={kernelName:Kn,backendName:"webgl",kernelFunc:kL},NL="return exp(x) - 1.0;",SL=DD({opSnippet:NL,packedOpSnippet:NL,cpuKernelImpl:sF}),EL={kernelName:Xn,backendName:"webgl",kernelFunc:SL};class RL{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function _L(e,t,n){const a=n.texData.get(e.dataId),r=it(e.shape),s=e.shape[e.shape.length-1],o=UD({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new RL("real",i,t),l=new RL("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=wD({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const G=UD({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),G}const FL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return _L(a,!1,n)}};class DL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function OL(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||bt(r),"string"===s){const e=Tt(s,it(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new DL(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const ML={kernelName:Qn,backendName:"webgl",kernelFunc:OL};class LL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const zL={kernelName:Jn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new LL(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},PL="return floor(x);",VL=DD({opSnippet:PL,packedOpSnippet:PL,cpuKernelImpl:oF}),BL={kernelName:Zn,backendName:"webgl",kernelFunc:VL},WL=OD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),UL={kernelName:$n,backendName:"webgl",kernelFunc:WL};class HL{constructor(e){this.variableNames=["A"];const t=c_(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class jL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=c_(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const qL={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,s];if(i||o){const e=zt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=KL&&e===XL||(XL=e,KL=document.createElement("canvas").getContext("2d",{willReadFrequently:XL})),KL.canvas.width=c,KL.canvas.height=l,KL.drawImage(r,0,0,c,l),r=KL.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=ER.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=zt().getBool("WEBGL_PACK")?new jL(h):new HL(h),G=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),G}};let KL,XL=zt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const YL={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:G}=a,C=Ol(u),A=wl(r.shape,s.shape,c,h,l,d,!1,C);let T;const f=[],m=null!=o,g=null!=i,y="leakyrelu"===p,b=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=UD({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return f.push(t),t}return e};if(m&&e.push(t(o,u)),g&&e.push(t(i,u)),y){const t=n.makeTensorInfo([],"float32",ks(G,"float32"));e.push(t),f.push(t)}return e};if(1!==A.filterHeight||1!==A.filterWidth||1!==A.dilationHeight||1!==A.dilationWidth||1!==A.strideHeight||1!==A.strideWidth||"SAME"!==A.padInfo.type&&"VALID"!==A.padInfo.type)if(A.strideWidth<=2&&"channelsLast"===C&&zt().getBool("WEBGL_EXP_CONV")){const e=p?MD(p,!0):null,t=new IM(A,m,e,g,y),a=[[A.padInfo.top,A.padInfo.left],[A.strideHeight,A.strideWidth],[A.dilationHeight,A.dilationWidth],[A.inHeight,A.inWidth]],r=b();T=n.runWebGLProgram(t,r,"float32",a)}else if(zt().getBool("WEBGL_CONV_IM2COL"))T=RM({x:r,filter:s,convInfo:A,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:G});else{const e=p?MD(p,!1):null,t=new wM(A,m,e,g,y),a=b();T=n.runWebGLProgram(t,a,"float32")}else T=EM({x:r,filter:s,convInfo:A,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:G});const x=UD({inputs:{x:T},backend:n,attrs:{shape:A.outShape}});return f.push(T),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const QL={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,G=[];let C=u;null==C&&(C=[1,1]),rt(Fl(c,C),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(C,"'")));const A=wl(r.shape,s.shape,c,C,l,h,!0),T=zt().getBool("WEBGL_PACK_DEPTHWISECONV")&&A.strideWidth<=2&&A.outChannels/A.inChannels===1,f=d?MD(d,T):null,m=[r,s],g=null!=o,y=null!=i,b="leakyrelu"===d;if(g&&m.push(o),y&&m.push(i),b){const e=n.makeTensorInfo([],"float32",ks(p,"float32"));m.push(e),G.push(e)}let x;x=T?new oL(A,g,f,y,b):new sL(A,g,f,y,b);const v=[[A.padInfo.top,A.padInfo.left],[A.strideHeight,A.strideWidth],[A.dilationHeight,A.dilationWidth],[A.inHeight,A.inWidth]],w=n.runWebGLProgram(x,m,"float32",v);return G.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}};class JL{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=v_(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const ZL={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=it(a.shape),[c,l,u,h]=XG(a,r),d=UD({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=UD({inputs:{x:a},backend:n,attrs:{shape:[it(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=iF(e,t,a.dtype,l,o,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const G=new JL(o,h,[l,u],a.shape),C=n.runWebGLProgram(G,[p,d],p.dtype),A=UD({inputs:{x:C},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(C),A}};class $L{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=v_(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function ez(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,c=Gt(o,r.shape)[0];if(zt().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];rt(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=MC(r,s,c,i),u=it(s.shape),h=[],d=UD({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=UD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const G=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=cF(t,e,G);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const C=new $L(d.shape,G),A=n.runWebGLProgram(C,[d,p],d.dtype);h.push(A);const T=UD({inputs:{x:A},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}const tz={kernelName:ta,backendName:"webgl",kernelFunc:ez},nz=OD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:lF,dtype:"bool"}),az={kernelName:aa,backendName:"webgl",kernelFunc:nz},rz=OD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:uF}),sz={kernelName:ra,backendName:"webgl",kernelFunc:rz};const oz={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return _L(a,!0,n)}},iz=DD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),cz={kernelName:ca,backendName:"webgl",kernelFunc:iz},lz=DD({opSnippet:"return float(isinf(x));",dtype:"bool"}),uz={kernelName:la,backendName:"webgl",kernelFunc:lz},hz=DD({opSnippet:"return float(isnan(x));",dtype:"bool"}),dz={kernelName:ua,backendName:"webgl",kernelFunc:hz},pz=OD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:hF,dtype:"bool"}),Gz={kernelName:da,backendName:"webgl",kernelFunc:pz},Cz=OD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:dF,dtype:"bool"}),Az={kernelName:pa,backendName:"webgl",kernelFunc:Cz};const Tz={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=pF(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},fz=DD({opSnippet:FD+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:GF}),mz={kernelName:Ca,backendName:"webgl",kernelFunc:fz},gz=DD({opSnippet:FD+"\n  return log(1.0 + x);\n"}),yz={kernelName:Aa,backendName:"webgl",kernelFunc:gz},bz=OD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),xz={kernelName:Ta,backendName:"webgl",kernelFunc:bz},vz=DD({opSnippet:"return float(!(x >= 1.0));"}),wz={kernelName:fa,backendName:"webgl",kernelFunc:vz},kz=OD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Iz={kernelName:ma,backendName:"webgl",kernelFunc:kz};class Nz{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Sz{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Ez={kernelName:ga,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=zt().getBool("WEBGL_PACK_NORMALIZATION")?new Sz(r.shape,s,o,i,c):new Nz(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class Rz{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const _z={kernelName:ya,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new Rz(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function Fz(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=Gt(s,r.shape);let l=c;const u=Mu(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=UF(e,r.shape,r.dtype,u,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=QD(r,u,n);l=zu(l.length,i)}Ou("max",l,i);const[G,C]=Fu(p.shape,l);let A,T=G;if(o&&(T=Du(G,c)),d){const e=n.texData.get(p.dataId).values,t=CF(e,it(C),T,r.dtype);A=n.makeTensorInfo(T,r.dtype);n.texData.get(A.dataId).values=t}else A=function(e,t,n,a){const r=it(t),s=UD({inputs:{x:e},attrs:{shape:[it(e.shape)/r,r]},backend:a}),o=KD(s,e.dtype,"max",a),i=UD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,C,T,n);return h&&n.disposeIntermediateTensorInfo(p),A}const Dz={kernelName:ba,backendName:"webgl",kernelFunc:Fz},Oz=OD({opSnippet:mD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yD+"\n  return result;\n",cpuKernelImpl:AF}),Mz={kernelName:xa,backendName:"webgl",kernelFunc:Oz};const Lz={kernelName:va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;o_(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;rt(Fl(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=xl(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))return xD({inputs:{x:r},backend:n});const u=new OO(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const zz={kernelName:ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=vl(r.shape,s,o,[1,1,1],i,l,c),h=new MO(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class Pz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Vz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,h=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Bz={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=vl(o.shape,i,c,[1,1,1],l,u),d=new MO(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),G=new Vz(h),C=n.runWebGLProgram(G,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),C}};const Wz={kernelName:wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;o_([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=xl(i.shape,c,l,1,u,h),p=new OO(d,"max",!0),G=n.runWebGLProgram(p,[i],i.dtype),C=new Pz(d),A=n.runWebGLProgram(C,[r,G],i.dtype);return n.disposeIntermediateTensorInfo(G),A}};const Uz={kernelName:Na,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;rt(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];rt(Fl(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const h=xl(r.shape,s,o,u,i),[d,p]=function(e,t,n,a){let r=new OO(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new OO(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,c,h,l);return[d,p]}};const Hz={kernelName:Sa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=Gt(o,r.shape);let u=l;const h=Mu(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),G=[];let C=r;if(d){if(p){const e=i.texData.get(C.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=UF(e,r.shape,r.dtype,h,t);C=i.makeTensorInfo(t,r.dtype);i.texData.get(C.dataId).values=n}else C=QD(r,h,i);G.push(C),u=zu(u.length,c)}Ou("sum",u,c);const[A,T]=Fu(C.shape,u);let f=A;s&&(f=Du(A,l));const m=function(e,t,n,a){const r=it(t),s=UD({inputs:{x:e},attrs:{shape:[it(e.shape)/r,r]},backend:a}),o=KD(s,"float32","mean",a),i=UD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(C,T,f,i);for(const g of G)i.disposeIntermediateTensorInfo(g);return m}};const jz={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Gt(s,r.shape);let l=c;const u=Mu(l,i);let h=r;null!=u&&(h=$D({inputs:{x:r},backend:n,attrs:{perm:u}}),l=zu(l.length,r.shape.length)),Ou("min",l,i);const[d,p]=Fu(h.shape,l),G=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,it(p)]}}),C=KD(G,G.dtype,"min",n);let A;if(o){A=UD({inputs:{x:C},backend:n,attrs:{shape:Du(d,c)}})}else A=UD({inputs:{x:C},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),null!=u&&n.disposeIntermediateTensorInfo(h),A}},qz=OD({opSnippet:mD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yD+"\n  return result;\n",cpuKernelImpl:TF}),Kz={kernelName:Ra,backendName:"webgl",kernelFunc:qz};class Xz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=v_(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class Yz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=v_(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=qF("rc",a),c=qF("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const Qz={kernelName:_a,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yz(r.shape,s,o):new Xz(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},Jz=OD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+yD+"\n  return result;\n"}),Zz={kernelName:Fa,backendName:"webgl",kernelFunc:Jz};class $z{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const eP=OD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),tP={kernelName:Vn,backendName:"webgl",kernelFunc:eP},nP="return a - b;",aP=OD({opSnippet:nP,packedOpSnippet:nP,supportsComplex:!0,cpuKernelImpl:VF}),rP={kernelName:zr,backendName:"webgl",kernelFunc:aP};function sP(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=Gt([s],r.shape),i=Fz({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=Du(i.shape,o),l=UD({inputs:{x:i},backend:n,attrs:{shape:c}}),u=aP({inputs:{a:r,b:l},backend:n}),h=vL({inputs:{x:u},backend:n}),d=JD({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=UD({inputs:{x:d},backend:n,attrs:{shape:c}}),G=eP({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),G}const oP={kernelName:wr,backendName:"webgl",kernelFunc:sP};const iP={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:sP({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new $z(l,u,s),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},cP=eD+"\n  return -x;\n";const lP={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=mF(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=zt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pD(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new $F(a.shape,cP),n.runWebGLProgram(r,[a],a.dtype)}},uP=Pp;const hP={kernelName:za,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=uP(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},dP=Vp;const pP={kernelName:Pa,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=dP(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GP=Bp;const CP={kernelName:Va,backendName:"webgl",kernelFunc:function(e){ts("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,G=c,C=l,{selectedIndices:A,selectedScores:T}=GP(u,h,d,p,G,C);return[n.makeTensorInfo([A.length],"int32",new Int32Array(A)),n.makeTensorInfo([T.length],"float32",new Float32Array(T))]}};class AP{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const TP={kernelName:Wa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=it(r.shape),u=new AP(l,o,i,c),h=UD({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],s);n.disposeIntermediateTensorInfo(h);const p=UD({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function fP(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=rM({inputs:{input:a},backend:n}),t=fP({inputs:{x:e},backend:n}),r=gM({inputs:{input:a},backend:n}),s=fP({inputs:{x:r},backend:n}),o=wD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return OL({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const mP={kernelName:Xr,backendName:"webgl",kernelFunc:fP};const gP={kernelName:Ba,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=rM({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=gM({inputs:{input:r},backend:a}),o=fP({inputs:{x:s},backend:a}),i=wD({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return OL({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const yP={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return kL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{st(s,e.shape,"All tensors passed to stack must have matching shapes"),rt(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=xM({inputs:t.map((e=>{const t=kL({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class bP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=v_(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class xP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=v_(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=qF("rc",a),c=qF("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let G=0,C=1===a?2:4;G<C;G++)p+="\n        ".concat(h[G],"\n        if (").concat(d,") {\n          result[").concat(G,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(G,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const vP=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===it(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return OL({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xP(r.shape,s,o):new bP(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},wP={kernelName:Ha,backendName:"webgl",kernelFunc:vP},kP=OD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+yD+"\n  return result;\n"}),IP={kernelName:ja,backendName:"webgl",kernelFunc:kP};const NP={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=Gt(s,r.shape);let u=l;const h=Mu(u,i);let d,p=r;if(null!=h&&(p=$D({inputs:{x:r},backend:n,attrs:{perm:h}}),u=zu(u.length,i),c.push(p)),Ou("prod",u,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=yF(p.shape,p.dtype,e,u);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=Fu(p.shape,u),a=it(t),s=UD({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=KD(s,ro(r.dtype),"prod",n);d=UD({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(s),c.push(o)}if(o){c.push(d);const e=Du(d.shape,l);d=UD({inputs:{x:d},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const SP={kernelName:Xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,G]=bF(c,l,u,s.shape,s.dtype,h,o.shape,i),C=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),A=n.makeTensorInfo(G,s.dtype,p);return C.concat([A])}};const EP={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=xF(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const RP={kernelName:Qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[G,C]=vF(l,r.shape,u,s.shape,s.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(G,s.dtype,C)}},_P=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=wF(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},FP={kernelName:Ja,backendName:"webgl",kernelFunc:_P},DP=DD({opSnippet:"return 1.0 / x;"}),OP={kernelName:$a,backendName:"webgl",kernelFunc:DP},MP=DD({opSnippet:eD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),LP={kernelName:er,backendName:"webgl",kernelFunc:MP},zP=DD({opSnippet:eD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PP={kernelName:or,backendName:"webgl",kernelFunc:zP};class VP{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class BP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const WP={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=zt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BP(r.shape,c,l,s,o):new VP(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class UP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,G=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(G,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const HP={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new UP(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class jP{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class qP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const KP={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=zt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qP(r.shape,c,l,s,o):new jP(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class XP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,G=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(G,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const YP={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new XP(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class QP{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=v_(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class JP{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=qF("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=v_(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const ZP={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=Gt(s,r.shape);if(0===o)return xD({inputs:{x:r},backend:n});const c=zt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JP(r.shape,i):new QP(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class $P{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const eV={kernelName:Jr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=new $P(r.shape,o),[u,h]=WG(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,d)}},tV=DD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),nV={kernelName:cr,backendName:"webgl",kernelFunc:tV},aV=DD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:kF}),rV={kernelName:lr,backendName:"webgl",kernelFunc:aV};class sV{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=v_(r.length),c=v_(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const G="getDefaultValue(".concat(p,")"),C=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(C,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(G,", sum, float(found)));\n        }\n      ")}}class oV{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=v_(r.length),c=v_(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const G="getDefaultValue(".concat(p,")"),C=t>1?"strides[j]":"strides",A=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(C,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(A,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(G,", sum, found));\n        }\n      ")}}const iV={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Yd(0,r,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=UD({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),G=UD({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),C=n.makeTensorInfo([],"float32",new Float32Array([0]));let A;A=zt().getBool("WEBGL_PACK")?new oV(c,i,p.shape.length,G.shape.length,u,d):new sV(c,i,p.shape.length,G.shape.length,u,d);const T=n.runWebGLProgram(A,[G,p,C],G.dtype),f=UD({inputs:{x:T},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(C),f}};class cV{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===zt().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const lV={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new cV(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class uV{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=v_(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const hV={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new uV(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],ao(r.dtype,s.dtype))}},dV=DD({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(YG,";\n  float scale = ").concat(QG,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),pV={kernelName:Gr,backendName:"webgl",kernelFunc:dV},GV=DD({opSnippet:FD+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:NF}),CV={kernelName:mr,backendName:"webgl",kernelFunc:GV},AV=DD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),TV={kernelName:fr,backendName:"webgl",kernelFunc:AV},fV=DD({opSnippet:FD+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(yD,"\n  return result;\n")}),mV={kernelName:Ar,backendName:"webgl",kernelFunc:fV},gV=DD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),yV={kernelName:Tr,backendName:"webgl",kernelFunc:gV},bV=DD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),xV={kernelName:gr,backendName:"webgl",kernelFunc:bV},vV={kernelName:xr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;rt(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let T=1+s.length;T<r.shape.length;++T)c.push([0,0]);const l=[],u=vP({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=UG(u.shape,s,i,!1),d=HG(h.length,s.length,!1),p=jG(u.shape,s,i,!1),G=UD({inputs:{x:u},backend:n,attrs:{shape:h}}),C=$D({inputs:{x:G},backend:n,attrs:{perm:d}}),A=UD({inputs:{x:C},backend:n,attrs:{shape:p}});return l.push(u),l.push(G),l.push(C),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}};const wV={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[h,d,p,G,C]=RF(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([G.length],"bool",new Uint8Array(G.map((e=>Number(e))))),n.makeTensorInfo([C.length],a.dtype,new Int32Array(C))]}};const kV={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,h]=_F(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const IV={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=FF(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const NV={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=FF(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const SV={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Yd(0,r,i);if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=Es(n.readSync(o.dataId)[0]),p=IF(e,t,i,d,u,l,c,h,a,false);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new sV(l,c,r.shape.length,s.shape.length,h,[d,1],false),G=n.runWebGLProgram(p,[s,r,o],s.dtype),C=UD({inputs:{x:G},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(G),C}};const EV={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Gt(o,r.shape)[0],c=yC(r,s,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((e=>{const t=[...h];t[i]=e;const a=QO({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},RV="return sqrt(x);",_V=DD({opSnippet:RV,packedOpSnippet:RV,cpuKernelImpl:DF}),FV={kernelName:yr,backendName:"webgl",kernelFunc:_V},DV={kernelName:_r,backendName:"webgl",kernelFunc:DD({opSnippet:"return x * x;"})},OV="return (a - b) * (a - b);",MV=OD({opSnippet:OV,packedOpSnippet:OV}),LV={kernelName:Rr,backendName:"webgl",kernelFunc:MV};const zV={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=LC(n.readSync(r.dataId)),o=OF(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const PV={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=eD+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new $F(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class VV{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=v_(n.length),s=v_(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const BV={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:G,isIdentity:C,sliceDim0:A,isSimpleSlice:T,begin:f,end:m,strides:g}=cl(r.shape,s,o,i,c,l,u,h,d);let y;if(C)y=UD({inputs:{x:r},backend:n,attrs:{shape:G}});else if(A||T){rt(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Yc(f,m,g),t=QO({inputs:{x:r},backend:n,attrs:{begin:f,size:e}});y=UD({inputs:{x:t},backend:n,attrs:{shape:G}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ui(r.shape,r.dtype,e),a=MF(p,t,g,f);y=n.makeTensorInfo(G,r.dtype,a.values)}else{const e=new VV(f,g,p);y=n.runWebGLProgram(e,[r],r.dtype)}}const b=UD({inputs:{x:y},backend:n,attrs:{shape:G}});return n.disposeIntermediateTensorInfo(y),b}};const WV={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[G,C]=LF(d,p,r,s,o,i,c,l);return[n.makeTensorInfo([G.length],"string",G),n.makeTensorInfo(h.shape,"int32",C)]}};const UV={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=zF(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const HV={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=PF(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},jV=DD({opSnippet:"return tan(x);"}),qV={kernelName:Pr,backendName:"webgl",kernelFunc:jV},KV=DD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),XV={kernelName:Vr,backendName:"webgl",kernelFunc:KV};const YV={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Yd(0,s,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=UD({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),G=UD({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),C=UD({inputs:{x:r},backend:n,attrs:{shape:d}}),A=new sV(c,i,p.shape.length,G.shape.length,u,d,!1,!0),T=n.runWebGLProgram(A,[G,p,C],C.dtype),f=UD({inputs:{x:T},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(G),n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(T),f}};class QV{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=v_(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function JV(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Es(e))):e,a=Ui(r.shape,r.dtype,t),o=BF(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new QV(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const ZV={kernelName:Br,backendName:"webgl",kernelFunc:JV};class $V{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class eB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function tB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function nB(e){let t=1;for(;t<e;)t*=2;return t}const aB={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=zt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=zt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const e=n.readSync(r.dataId),[t,a]=WF(e,l,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,OL({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,G=it(l)/u,C=UD({inputs:{x:p},attrs:{shape:[G,u]},backend:n});d&&tB(n,p);const A=nB(s),T=nB(u);let f=null;const m=()=>null===f?[C,C]:[C,f],g=(e,t,a)=>{const r=m(),s=new $V(a),o=[[u],[null===f?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=f;f=n.runWebGLProgram(s,r,"int32",o),tB(n,i)};for(let w=1;w<A;w*=2){const e=2*w;for(let t=w;t>=1;t/=2)g(e,t,[G,T])}for(let w=T;w>A;w/=2){const e=m(),t=new eB([G,w/2]),a=[[u],[null===f?1:0],[A]],r=f;f=n.runWebGLProgram(t,e,"int32",a),tB(n,r);const s=A/2,o=2*s;for(let n=s;n>=1;n/=2)g(o,n,f.shape)}let y=f;f=QO({inputs:{x:f},backend:n,attrs:{begin:0,size:[G,s]}}),tB(n,y);let b=ez({inputs:{x:C,indices:f},backend:n,attrs:{axis:1,batchDims:1}});tB(n,C);const x=l.slice(0,-1);x.push(s),y=f,f=UD({inputs:{x:f},attrs:{shape:x},backend:n}),tB(n,y);const v=b;return b=UD({inputs:{x:b},attrs:{shape:x},backend:n}),tB(n,v),[b,f]}};class rB{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const sB={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[G,C]=null!=l?l:[h,d],A=new rB(h,d,o,i,c,[u,G,C,p]);return n.runWebGLProgram(A,[r,s],"float32")}};const oB={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;o_(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=HF(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const iB={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let C=0;C<i;C++)C!==s&&(l[u++]=o.shape[C]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const G=new Array(c);for(let C=0;C<G.length;C++){d[s]=C;const e=QO({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),t=UD({inputs:{x:e},backend:n,attrs:{shape:l}});G[C]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),G}};class cB{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const lB={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=Mu([l],i);let h=r;null!=u&&(h=$D({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=zu(1,i)[0]);const d=OC(h.shape,l,o),p=it([h.shape[l]]),G=UD({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(G);const C=ro(r.dtype),A=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],l=DC(i,s),u=new cB({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),h=n.compileAndRun(u,[e,a],r);if(c.push(h),h.shape[1]===s)return h;const d=_P({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=JV({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return A(h,t,p,r,s)},T=UD({inputs:{x:A(G,"unsortedSegmentSum",s,C,o)},backend:n,attrs:{shape:d}});let f=T;if(null!=u){c.push(T);const e=Lu(u);f=$D({inputs:{x:f},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},uB=[aO,sO,iO,lO,dO,CO,AO,TO,xO,vO,kO,NO,EO,_O,DO,LO,zO,BO,WO,UO,qO,ZO,$O,eM,tM,iM,uM,pM,kD,AM,vM,_M,LM,PM,VM,BM,WM,HM,qM,XM,eL,tL,nL,rL,iL,uL,hL,pL,CL,AL,fL,mL,yL,xL,wL,IL,EL,FL,ML,zL,BL,UL,qL,YL,QL,ZL,tz,az,sz,vD,oz,yM,cz,uz,dz,SD,Gz,Az,Tz,mz,yz,xz,wz,Iz,Ez,_z,Dz,Mz,Lz,zz,Bz,Wz,Uz,Hz,jz,Kz,Qz,Zz,iP,WD,lP,hP,pP,CP,aM,TP,gP,yP,wP,IP,_D,NP,SP,EP,RP,FP,sM,tP,OP,LP,PP,HD,WP,HP,KP,YP,ZP,eV,nV,rV,iV,lV,hV,pV,CV,TV,mV,yV,JO,oP,xV,vV,wV,kV,IV,NV,SV,EV,FV,DV,LV,zV,PV,BV,WV,UV,HV,rP,ZD,qV,XV,YV,ZV,aB,sB,eO,oB,iB,lB,mP];for(const n of uB)cs(n);class hB{static encodeAndEqualPadSequence(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:576;e=e.split("");const n=new Int32Array(e.length);for(let c=0;c<e.length;c++)n[c]=this.tokenizerDictionary[e[c]]||0;const a=t-n.length;let r=this.padArrays[a];if(!r){r=new Int32Array(a);const e=a%2===0?a/2:(a+1)/2;r.fill(0,0,e),this.padArrays[a]=r}const s=r.slice(0,r.length/2),o=r.slice(r.length/2),i=new Int32Array(t);return i.set(s,0),i.set(n,s.length),i.set(o,s.length+n.length),i}static tokenizeSingleSequence(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:576;return{tokenized_sequence:Ud([hB.encodeAndEqualPadSequence(e,t)],[1,t],"int32")}}}async function dB(e,t){const n=await Gv(e),a=await async function(e,t){if(!e)return console.error("Model not loaded yet."),null;const n={};return Object.keys(e.signature.outputs).forEach(((e,a)=>{t.includes(e)&&(n[e]=a)})),n}(n,t);return{model:n,indices:a}}hB.tokenizerDictionary={A:1,T:2,G:3,C:4,N:5,P:0},hB.padArrays={};const pB=function(e){let{setSelectedChain:t,selectedChain:n,setModel:a,setOutputIndices:r,setIsLoading:s}=e;const o={IGH:"tfjs/AlignAIRR/model.json",IGK:"tfjs/AlignAIRR/model.json",IGL:"tfjs/AlignAIRR/model.json"},i=["v_segment","indel_count","d_segment","mutation_rate","j_allele","d_allele","j_segment","v_allele"],c=async()=>{const e=o[n];try{const{model:t,indices:n}=await dB(e,i);a(t),r(n),s(!1),console.log("Model loaded successfully");const o=async function(e,t,n){const a=hB.tokenizeSingleSequence("CTGGAGCAGCTGGTGCAGTCTGGGGCTAACATGAANAAGCCTGGGCTCTCGGTGAAGGTCTCATGCAACTNTTCCGGAGGCACCTGCAGNAACTATGTCAACAACTTGGTGTGACAGGCNCCTGGANAAGGGGTTGAATGGATGGGAGGGATCATACCCATCTGTGGTACAGCAAAATCCGCACGGAGATTCCAGGGCAGAGTCNCGATTACCTCGGACAAATCCACAAGCACAGCCTACATGGAACTGAGCAGCCTGAGATCTGAGGACACGTCCCTGTATTACTATGCGAGAGACGCGGGGGTAACAATATCTTCGGATCTACNACCGAATGGACGTCAGGGGCCTAGGGACCACGGTGAGCGTCACCACAG",n);let r="success";return e.predict(a)||(console.error("Prediction failed."),r="failed"),r}(t,0,576);"success"===o&&console.log("Warmup completed.")}catch(t){console.error("Error loading model:",t)}};(0,N.useEffect)((()=>{c()}),[n]);const l=e=>{t(e)};return(0,qe.jsx)("div",{children:(0,qe.jsxs)("div",{className:"row",children:[(0,qe.jsx)("p",{children:"Immunoglobulin Chain"}),(0,qe.jsxs)("div",{className:"btn-group",children:[(0,qe.jsx)("button",{onClick:()=>l("IGH"),className:"IGH"===n?"selected":"",children:"IGH"}),(0,qe.jsx)("button",{onClick:()=>l("IGK"),className:"IGK"===n?"selected":"",children:"IGK"}),(0,qe.jsx)("button",{onClick:()=>l("IGL"),className:"IGL"===n?"selected":"",children:"IGL"})]})]})})};function GB(e){let{setFile:t}=e;const n=(0,N.useRef)(null),a=(0,N.useRef)(null),r=(0,N.useRef)(null),[s,o]=(0,N.useState)(""),[i,c]=(0,N.useState)(0),l=e=>{const t=new FileReader;t.onload=function(t){const n=t.target.result,a=u(n);console.log(a),o(e.name),c(a),h()},t.readAsText(e)},u=e=>{const t=e.split("\n");let n=0;for(const a of t)a.startsWith(">")&&n++;return n},h=()=>{r.current.style.display="flex",a.current.style.display="none"};return(0,qe.jsxs)(qe.Fragment,{children:[(0,qe.jsxs)("div",{className:"row",children:[(0,qe.jsx)("p",{children:"Upload your File :"}),(0,qe.jsx)("button",{id:"clearFile",className:"example-button",onClick:()=>{n.current&&(n.current.value=""),a.current.style.display="flex",r.current.style.display="none",o(""),c(0),t(null)},children:"Clear File"})]}),(0,qe.jsxs)("div",{className:"drag-area",id:"dragArea",ref:e=>{a.current=e},style:{display:"flex"},onDragOver:e=>{e.preventDefault(),a.current.classList.add("active")},onDragLeave:()=>{a.current.classList.remove("active")},onDrop:e=>{e.preventDefault();const r=e.dataTransfer.files[0];r&&(console.log(r),n.current.files=e.dataTransfer.files,l(r),t(r)),a.current.classList.remove("active")},children:[(0,qe.jsx)("div",{className:"icon",children:(0,qe.jsx)("i",{className:"fas fa-images"})}),(0,qe.jsx)("span",{className:"header",children:"Drag & Drop"}),(0,qe.jsx)("span",{className:"header",children:"or "}),(0,qe.jsx)("span",{className:"button",onClick:()=>{n.current.click()},children:"browse"}),(0,qe.jsx)("input",{type:"file",ref:n,style:{display:"none"},onChange:e=>{const n=e.target.files[0];console.log(n),n&&(l(n),t(n))}}),(0,qe.jsx)("span",{className:"support",children:"Supports: Fasta"})]}),(0,qe.jsxs)("div",{ref:r,style:{display:"none"},children:["File Name: ",s,(0,qe.jsx)("br",{}),"Number of Sequences: ",i]})]})}function CB(e){let{selectedChain:t,setSequence:n,sequence:a}=e;const r=(0,N.useRef)(null),s={IGH:"CGGGTCGGCTTGAAGGAGCCTGGTCCTGTGCTGGTTGAACCCACAGCGACCTTCCCGCTGTCCTGCACCGNCCCTTTGTTCTCACNCAGACGTACAAGATTAGCTGCGACCTTGACTCGTCGGCCCCCAGAGGAGGCTCTGGACTGGCCGACACCCACNTTNTCGACCTGACACAGACTCTCTCCAGAACATGCCTGAGGAGGGGTCTGAACCTCTCCACGGACACCTCCAGATGTCAGGTGGTCNTTACCAAGAACAATTTGGACCCTCCGGACACAGACANCTATCTCTTTGCACGGCGAGGGGACTCCGGTGAGAANTTACGACTTTGACCAGTGGGTCAAGGAATTGCTGGCCACCGTCTCCTCAG",IGK:"CGGGTCGGCTTGAAGGAGCCTGGTCCTGTGCTGGTTGAACCCACAGCGACCTTCCCGCTGTCCTGCACCGNCCCTTTGTTCTCACNCAGACGTACAAGATTAGCTGCGACCTTGACTCGTCGGCCCCCAGAGGAGGCTCTGGACTGGCCGACACCCACNTTNTCGACCTGACACAGACTCTCTCCAGAACATGCCTGAGGAGGGGTCTGAACCTCTCCACGGACACCTCCAGATGTCAGGTGGTCNTTACCAAGAACAATTTGGACCCTCCGGACACAGACANCTATCTCTTTGCACGGCGAGGGGACTCCGGTGAGAANTTACGACTTTGACCAGTGGGTCAAGGAATTGCTGGCCACCGTCTCCTCAG",IGL:"CGGGTCGGCTTGAAGGAGCCTGGTCCTGTGCTGGTTGAACCCACAGCGACCTTCCCGCTGTCCTGCACCGNCCCTTTGTTCTCACNCAGACGTACAAGATTAGCTGCGACCTTGACTCGTCGGCCCCCAGAGGAGGCTCTGGACTGGCCGACACCCACNTTNTCGACCTGACACAGACTCTCTCCAGAACATGCCTGAGGAGGGGTCTGAACCTCTCCACGGACACCTCCAGATGTCAGGTGGTCNTTACCAAGAACAATTTGGACCCTCCGGACACAGACANCTATCTCTTTGCACGGCGAGGGGACTCCGGTGAGAANTTACGACTTTGACCAGTGGGTCAAGGAATTGCTGGCCACCGTCTCCTCAG"};return(0,qe.jsxs)(qe.Fragment,{children:[(0,qe.jsxs)("div",{className:"row",children:[(0,qe.jsx)("p",{children:"Or enter a sequence :"}),(0,qe.jsx)("button",{className:"example-button",onClick:()=>{t&&(r.current.value=s[t],n(r.current.value))},ref:r,children:"Sequence example"})]}),(0,qe.jsxs)("div",{className:"sequence-text-area",children:[(0,qe.jsx)("textarea",{id:"sequenceInput",value:a,onChange:e=>n(e.target.value),children:" "}),(0,qe.jsx)("button",{onClick:()=>{r.current.value="",n(r.current.value)},children:(0,qe.jsx)("span",{id:"clear-btn",children:"Clear"})})]})]})}function AB(e){let{setParams:t,params:n}=e;const a=e=>{const{id:n,value:a}=e.target;t((e=>({...e,[n]:a})))};return(0,qe.jsxs)(qe.Fragment,{children:[(0,qe.jsx)("p",{children:"Alignment format option :"}),(0,qe.jsxs)("div",{className:"alignment-param-area",children:[(0,qe.jsxs)("div",{className:"alignment-input-row",children:[(0,qe.jsx)("div",{children:"Cap number of assignments"}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"vCap",className:"numberSpinButton",min:"1",max:"100",value:n.vCap,onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"dCap",className:"numberSpinButton",min:"1",max:"100",value:n.dCap,onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"jCap",className:"numberSpinButton",min:"1",max:"100",value:n.jCap,onChange:a})})]}),(0,qe.jsxs)("div",{className:"alignment-input-row",children:[(0,qe.jsx)("div",{children:"Confidence threshold"}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"vConf",className:"numberSpinButton",min:"0.1",max:"1",value:n.vConf,step:"0.1",onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"dConf",className:"numberSpinButton",min:"0.1",max:"1",value:n.dConf,step:"0.1",onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"jConf",className:"numberSpinButton",min:"0.1",max:"1",value:n.jConf,step:"0.1",onChange:a})})]}),(0,qe.jsxs)("div",{className:"alignment-input-row",children:[(0,qe.jsx)("div",{children:"Segmentation threshold"}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"vSeg",className:"numberSpinButton",min:"0.01",max:"1",value:n.vSeg,step:"0.01",onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"dSeg",className:"numberSpinButton",min:"0.01",max:"1",value:n.dSeg,step:"0.01",onChange:a})}),(0,qe.jsx)("div",{children:(0,qe.jsx)("input",{type:"number",id:"jSeg",className:"numberSpinButton",min:"0.01",max:"1",value:n.jSeg,step:"0.01",onChange:a})})]})]})]})}const TB=function(e){let{setSelectedChain:t,selectedChain:n,setFile:a,setSequence:r,sequence:s,setModel:o,setOutputIndices:i,setIsLoading:c,params:l,setParams:u}=e;return(0,qe.jsxs)("div",{className:"content",children:[(0,qe.jsxs)("div",{className:"left-column",children:[(0,qe.jsx)(pB,{setSelectedChain:t,selectedChain:n,setModel:o,setOutputIndices:i,setIsLoading:c}),(0,qe.jsx)(GB,{setFile:a}),(0,qe.jsx)(CB,{selectedChain:n,setSequence:r,sequence:s})]}),(0,qe.jsxs)("div",{className:"right-column",children:[(0,qe.jsx)(AB,{params:l,setParams:u}),(0,qe.jsx)("p",{children:" Genotype parameters :"}),(0,qe.jsxs)("div",{className:"genotype-param-area",children:[(0,qe.jsx)("div",{className:"text-placeholder placeholder"}),(0,qe.jsx)("div",{className:"text-placeholder placeholder"}),(0,qe.jsx)("div",{className:"text-placeholder placeholder"}),(0,qe.jsx)("div",{className:"text-placeholder placeholder"})]})]})]})};const fB=new class{queryToDict(e){const t=e.split("\n"),n={};let a="",r="",s=0;return t.forEach(((e,t)=>{0!==t||e.startsWith(">")||(a="seq 1",n["query "+s]={name:a,sequence:""}),e.startsWith(">")?(a&&r&&(n["query "+s]={name:a,sequence:r},s+=1),a=e.slice(1).trim(),r=""):r+=e.trim()})),a&&r&&(n["query "+s]={name:a,sequence:r}),n}fastaToDict(e){const t=e.split("\n"),n={};let a="",r="";return t.forEach((e=>{e.startsWith(">")?(a&&r&&(n[a]=r),a=e.slice(1).trim(),r=""):r+=e.trim()})),a&&r&&(n[a]=r),n}sortAndReturnDict(e){const t=this.fastaToDict(e),n=Object.keys(t).sort().reduce(((e,n)=>(e[n]=t[n],e)),{}),a={};return Object.keys(n).forEach(((e,t)=>{a[t]={name:e,sequence:n[e]}})),{alleleCallOHE:a,sortedDataDict:n}}processFastaContents(e,t,n){const{alleleCallOHE:a,sortedDataDict:r}=this.sortAndReturnDict(e),{alleleCallOHE:s,sortedDataDict:o}=this.sortAndReturnDict(t);s[Object.keys(s).length]="Short-D";const{alleleCallOHE:i,sortedDataDict:c}=this.sortAndReturnDict(n);return{vAlleleCallOHE:a,sortedIGHVDataDict:r,dAlleleCallOHE:s,sortedIGHDDataDict:o,jAlleleCallOHE:i,sortedIGHJDataDict:c}}},{vAlleleCallOHE:mB,sortedIGHVDataDict:gB,dAlleleCallOHE:yB,sortedIGHDDataDict:bB,jAlleleCallOHE:xB,sortedIGHJDataDict:vB}=fB.processFastaContents("\n>IGHVF1-G1*01\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAATATGGACCCTGTGGACACAGCCACATATTACTGTGCATGGATAC\n>IGHVF1-G1*02\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACGGATAC\n>IGHVF1-G1*03\nCAGGTCACCTTGAAGGAGTCTGGTCCTGTGCTGGTGAAACCCACAGAGACCCTCACGCTGACCTGCACCGTCTCTGGGTTCTCACTCAGCAATGCTAGAATGGGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACACATTTTTTCGAATGACGAAAAATCCTACAGCACATCTCTGAAGAGCAGGCTCACCATCTCCAAGGACACCTCCAAAAGCCAGGTGGTCCTTACCATGACCAATATGGACCCTGTGGACACAGCCACATATTACTGTGCACGGATAC\n>IGHVF1-G2*01\nCAGATCACCTTGAAGGAGTCTGGTCCTACGCTGGTGAAACCCACACAGACCCTCACGCTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAGTGGGTGTGGGCTGGATCCGTCAGCCCCCAGGAAAGGCCCTGGAGTGGCTTGCACTCATTTATTGGAATGATGATAAGCGCTACAGCCCATCTCTGAAGAGCAGGCTCACCATCACCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACACAGAC\n>IGHVF1-G2*02\nCAGATCACCTTGAAGGAGTCTGGTCCTACGCTGGTGAAACCCACACAGACCCTCACGCTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAGTGGGTGTGGGCTGGATCCGTCAGCCCCCAGGAAAGGCCCTGGAGTGGCTTGCACTCATTTATTGGGATGATGATAAGCGCTACAGCCCATCTCTGAAGAGCAGGCTCACCATCACCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACATATTACTGTGCACACAGAC\n>IGHVF1-G3*01\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGGTCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACTCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGA\n>IGHVF1-G3*02\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACTCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*03\nCAGGTCACCTTGAGGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGTGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATACTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*04\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGTGAGCTGGATCCGTCAGCCCCCAGGTAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*05\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGCGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF1-G3*06\nCAGGTCACCTTGAAGGAGTCTGGTCCTGCGCTGGTGAAACCCACACAGACCCTCACACTGACCTGCACCTTCTCTGGGTTCTCACTCAGCACTAGTGGAATGCGTGTGAGCTGGATCCGTCAGCCCCCAGGGAAGGCCCTGGAGTGGCTTGCACGCATTGATTGGGATGATGATAAATTCTACAGCACATCTCTGAAGACCAGGCTCACCATCTCCAAGGACACCTCCAAAAACCAGGTGGTCCTTACAATGACCAACATGGACCCTGTGGACACAGCCACGTATTACTGTGCACGGATAC\n>IGHVF2-G4*01\nCAGGTACAGCTGCAGCAGTCAGGTCCAGGACTGGTGAAGCCCTCGCAGACCCTCTCACTCACCTGTGCCATCTCCGGGGACAGTGTCTCTAGCAACAGTGCTGCTTGGAACTGGATCAGGCAGTCCCCATCGAGAGGCCTTGAGTGGCTGGGAAGGACATACTACAGGTCCAAGTGGTATAATGATTATGCAGTATCTGTGAAAAGTCGAATAACCATCAACCCAGACACATCCAAGAACCAGTTCTCCCTGCAGCTGAACTCTGTGACTCCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF2-G4*02\nCAGGTACAGCTGCAGCAGTCAGGTCCAGGACTGGTGAAGCCCTCGCAGACCCTCTCACTCACCTGTGCCATCTCCGGGGACAGTGTCTCTAGCAACAGTGCTGCTTGGAACTGGATCAGGCAGTCCCCATCGAGAGGCCTTGAGTGGCTGGGAAGGACATACTACAGGTCCAAGTGGTATAATGATTATGCAGTATCTGTGAAAAGTTGAATAACCATCAACCCAGACACATCCAAGAACCAGTTCTCCCTGCAGCTGAACTCTGTGACTCCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF3-G5*01\nCAGGTGCAGCTACAGCAGTGGGGCGCAGGACTGTTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCGCTGTCTATGGTGGGTCCTTCAGTGGTTACTACTGGAGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCAATCATAGTGGAAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCTGTGTATTACTGTGCGAGAGG\n>IGHVF3-G6*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGA\n>IGHVF3-G6*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G6*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGACA\n>IGHVF3-G6*06\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTAAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G6*07\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G6*08\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGTAGTCACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G7*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G7*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G7*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAGGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCGTCAGCAGTGGTAGTTACTACTGGAGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCTGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G8*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTGCTGTGCGAGAGA\n>IGHVF3-G8*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTCCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G8*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTAGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G8*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGGGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTAACTGGTGGAGTTGGGTCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGGAAATCTATCATAGTGGGAGCACCAACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAAGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G9*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCATCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*02\nCAGGTACAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCATCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAAA\n>IGHVF3-G9*04_A319G\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGACACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTAGTAACTGGTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGACTGGAGTGGATTGGGTACATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGTGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTTACTCCATCAGCAGTGGTTACTACTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTTACTCCATCAGCAGTGGTTACTACTGGGGCTGGATCCGGCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*03\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G10*04\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCAGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G10*05\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCAAGAC\n>IGHVF3-G10*06\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCGAGACA\n>IGHVF3-G10*07\nCAGCTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCGGAGACCCTGTCCCTCACGTGCACTGTCTCTGGTGGCTCCATCAGCAGTAGTAGTTACTACTGGGGCTGGATCCGCCAGCCCCCAGGGAAGGGGCTGGAGTGGATTGGGAGTATCTATTATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCCGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCAGACACGGCTGTGTATTACTGTGCGAGAC\n>IGHVF3-G11*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF3-G11*02\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCTAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G11*03\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGCTGGATCCGCCAGCACCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCTAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF3-G11*04\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTACTGGAGTTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAG\n>IGHVF3-G11*05\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGATTACTACTGGAGTTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G11*06\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCACTGTCTCTGGTGGCTCCATCAGCAGTGGTGATTACTACTGGAGCTGGATCCGCCAGCCCCCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAG\n>IGHVF3-G12*01\nCAGGTGCAGCTGCAGGAGTCGGGCCCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGACTGGAGTGGATTGGGTATATCTATTACAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*02\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTTACCATATCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACTGCCGCAGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*03\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGCCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAGGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF3-G12*04\nCAGCTGCAGCTGCAGGAGTCCGGCTCAGGACTGGTGAAGCCTTCACAGACCCTGTCCCTCACCTGCGCTGTCTCTGGTGGCTCCATCAGCAGTGGTGGTTACTCCTGGAGCTGGATCCGGCAGTCACCAGGGAAGGGCCTGGAGTGGATTGGGTACATCTATCATAGTGGGAGCACCTACTACAACCCGTCCCTCAAGAGTCGAGTCACCATATCAGTAGACAGGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCCAGAGA\n>IGHVF4-G13*01\nGAAGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAGGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCAGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGAGGATTGATCCTAGTGACTCTTATACCAACTACAGCCCGTCCTTCCAAGGCCACGTCACCATCTCAGCTGACAAGTCCATCAGCACTGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G13*02\nGAAGTGCAGCTGGTGCAGTCCGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAGGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCAGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGAGGATTGATCCTAGTGACTCTTATACCAACTACAGCCCGTCCTTCCAAGGCCACGTCACCATCTCAGCTGACAAGTCCATCAGCACTGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*01\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCACCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*02\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCGGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTTACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGA\n>IGHVF4-G14*03\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCCGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF4-G14*04\nGAGGTGCAGCTGGTGCAGTCTGGAGCAGAGGTGAAAAAGCCGGGGGAGTCTCTGAAGATCTCCTGTAAGGGTTCTGGATACAGCTTTACCAGCTACTGGATCGGCTGGGTGCGCCAGATGCCCGGGAAAGGCCTGGAGTGGATGGGGATCATCTATCCTGGTGACTCTGATACCAGATACAGCCCGTCCTTCCAAGGCCAGGTCACCATCTCAGCCGACAAGTCCATCAGCACCGCCTACCTGCAGTGGAGCAGCCTGAAGGCCTCGGACACCGCCATGTATTACTGTGCGAGACA\n>IGHVF5-G15*01\nCAGGTGCAGCTGGTGCAGTCTGGCCATGAGGTGAAGCAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACAGTTTCACCACCTATGGTATGAATTGGGTGCCACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGTTCAACACCTACACTGGGAACCCAACATATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCATGGACACCTCTGCCAGCACAGCATACCTGCAGATCAGCAGCCTAAAGGCTGAGGACATGGCCATGTATTACTGTGCGAGATA\n>IGHVF5-G16*01\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCACGGCATATCTGCAGATCTGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*02\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCACGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*03\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCATGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTATTACTGTGCGAGAGA\n>IGHVF5-G16*04\nCAGGTGCAGCTGGTGCAATCTGGGTCTGAGTTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGAATTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACACCAACACTGGGAACCCAACGTATGCCCAGGGCTTCACAGGACGGTTTGTCTTCTCCTTGGACACCTCTGTCAGCATGGCATATCTGCAGATCAGCAGCCTAAAGGCTGAGGACACTGCCGTGTGTTACTGTGCGAGAGA\n>IGHVF6-G17*01\nCAGGTCCAGCTGGTACAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGTTTCCGGATACACCCTCACTGAATTATCCATGCACTGGGTGCGACAGGCTCCTGGAAAAGGGCTTGAGTGGATGGGAGGTTTTGATCCTGAAGATGGTGAAACAATCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCGAGGACACATCTACAGACACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCAACAGA\n>IGHVF6-G18*01\nGAGGTCCAGCTGGTACAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCTACAGTGAAAATCTCCTGCAAGGTTTCTGGATACACCTTCACCGACTACTACATGCACTGGGTGCAACAGGCCCCTGGAAAAGGGCTTGAGTGGATGGGACTTGTTGATCCTGAAGATGGTGAAACAATATACGCAGAGAAGTTCCAGGGCAGAGTCACCATAACCGCGGACACGTCTACAGACACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCAACAGA\n>IGHVF6-G19*01\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAAGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTGTGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAG\n>IGHVF6-G19*02\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAGGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTGTGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAGA\n>IGHVF6-G19*03\nCAAATGCAGCTGGTGCAGTCTGGGCCTGAGGTGAAGAAGCCTGGGACCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATTCACCTTTACTAGCTCTGCTATGCAGTGGGTGCGACAGGCTCGTGGACAACGCCTTGAGTGGATAGGATGGATCGTCGTTGGCAGTGGTAACACAAACTACGCACAGAAGTTCCAGGAAAGAGTCACCATTACCAGGGACATGTCCACAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCCGAGGACACGGCCGTGTATTACTGTGCGGCAGA\n>IGHVF6-G20*01\nCAGATGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGACTGGGTCCTCAGTGAAGGTTTCCTGCAAGGCTTCCGGATACACCTTCACCTACCGCTACCTGCACTGGGTGCGACAGGCCCCCGGACAAGCGCTTGAGTGGATGGGATGGATCACACCTTTCAATGGTAACACCAACTACGCACAGAAATTCCAGGACAGAGTCACCATTACCAGGGACAGGTCTATGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACAGCCATGTATTACTGTGCAAGATA\n>IGHVF6-G20*02\nCAGATGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGACTGGGTCCTCAGTGAAGGTTTCCTGCAAGGCTTCCGGATACACCTTCACCTACCGCTACCTGCACTGGGTGCGACAGGCCCCCAGACAAGCGCTTGAGTGGATGGGATGGATCACACCTTTCAATGGTAACACCAACTACGCACAGAAATTCCAGGACAGAGTCACCATTACCAGGGACAGGTCTATGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACAGCCATGTATTACTGTGCAAGATA\n>IGHVF6-G21*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGATGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCAGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*04\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*05\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*06\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*07\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*08\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*09\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*10\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCACGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*11\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCTTTGGTACAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACGAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*12\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAGGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*13\nCAGGTCCAGCTGGTGCAATCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATACTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*14\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCTTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G21*15\nCAGGTCCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G21*16\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGTCCTCGGTGAAGGTCTCCTGCAAGGCTTCTGGAGGCACCTTCAGCAGCTATGCTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAAGGATCATCCCTATCCTTGGTATAGCAAACTACGCACAGAAGTTCCAGGGCAGAGTCACGATTACCGCGGACAAATCCACGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G22*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGCTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G22*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGTTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G22*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCAGCTATGATATCAACTGGGTGCGACAGGCCACTGGACAAGGGCTTGAGTGGATGGGATGGATGAACCCTAACAGTGGTAACACAGGCTATGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGAACACCTCCATAAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGG\n>IGHVF6-G23*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTGCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G23*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G23*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCATCTGGATACACCTTCACCAGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGAATAATCAACCCTAGTGGTGGTAGCACAAGCTACGCACAGAAGTTCCAGGGCAGAGTCACCATGACCAGGGACACGTCCACGAGCACAGTCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACACGGCCGTGTATTACTGTGCTAGAGA\n>IGHVF6-G24*01\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGACGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGTCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*02\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGACGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF6-G24*03\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACATAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*04\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCAGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G24*05\nCAGGTGCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGATACACCTTCACCGGCTACTATATGCACTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAACCCTAACAGTGGTGGCACAAACTATGCACAGAAGTTTCAGGGCTGGGTCACCATGACCAGGGACACGTCCATCAGCACAGCCTACATGGAGCTGAGCAGGCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*01\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTACGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*02\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTATGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G25*03\nCAGGTTCAGCTGGTGCAGTCTGGAGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTCTCCTGCAAGGCTTCTGGTTACACCTTTACCAGCTATGGTATCAGCTGGGTGCGACAGGCCCCTGGACAAGGGCTTGAGTGGATGGGATGGATCAGCGCTTACAATGGTAACACAAACTATGCACAGAAGCTCCAGGGCAGAGTCACCATGACCACAGACACATCCACGAGCACAGCCTACATGGAGCTGAGGAGCCTGAGATCTGACGACATGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*01\nCAGGTTCAGCTGGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGAGCAACGCTGGCAATGGTAACACAAAATATTCACAGGAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*02\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGAGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACGCTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*03\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACGCTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF6-G26*04\nCAGGTCCAGCTTGTGCAGTCTGGGGCTGAGGTGAAGAAGCCTGGGGCCTCAGTGAAGGTTTCCTGCAAGGCTTCTGGATACACCTTCACTAGCTATGCTATGCATTGGGTGCGCCAGGCCCCCGGACAAAGGCTTGAGTGGATGGGATGGATCAACACTGGCAATGGTAACACAAAATATTCACAGAAGTTCCAGGGCAGAGTCACCATTACCAGGGACACATCCGCGAGCACAGCCTACATGGAGCTGAGCAGCCTGAGATCTGAAGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF7-G27*01\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACGTGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*02\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTGAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*03\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGATCAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF7-G27*04\nGAGGCCCAGCTTACAGAGTCTGGGGGAGACTTGGTACACTTAGAGGGGCCCCTGAGGCTCTCCTGTGCAGCCTCTTGGTTCACCTTCAGTATCTATGAGATTCACTGGGTTTGCCAGGCCTCAGGGAAGGGGCTGGAATGGGTTGCAGTTATATGGCGTGGTGAAAGTCATCAATACAATGCAGACTATGTTAGGGGCAGACTCACCACTTCCAGAGACAACACCAAGTACATGCTGTACATGCAAATGAACAGCCTGAGAACCCAGAACATGGCAGCATTTAACTGTGCAGGAAA\n>IGHVF8-G28*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACCACTACATGGACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTGGCCGTACTAGAAACAAAGCTAACAGTTACACCACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAGAACTCACTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTGCTAGAGA\n>IGHVF8-G29*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAAACTCTCCTGTGCAGCCTCTGGGTTCACCTTCAGTGGCTCTGCTATGCACTGGGTCCGCCAGGCTTCCGGGAAAGGGCTGGAGTGGGTTGGCCGTATTAGAAGCAAAGCTAACAGTTACGCGACAGCATATGCTGCGTCGGTGAAAGGCAGGTTCACCATCTCCAGAGATGATTCAAAGAACACGGCGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTACTAGACA\n>IGHVF8-G29*02\nGAGGTGCAGCTGGTGGAGTCCGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAAACTCTCCTGTGCAGCCTCTGGGTTCACCTTCAGTGGCTCTGCTATGCACTGGGTCCGCCAGGCTTCCGGGAAAGGGCTGGAGTGGGTTGGCCGTATTAGAAGCAAAGCTAACAGTTACGCGACAGCATATGCTGCGTCGGTGAAAGGCAGGTTCACCATCTCCAGAGATGATTCAAAGAACACGGCGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCGTGTATTACTGTACTAGACA\n>IGHVF8-G30*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGTTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G30*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGTTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G30*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCAGGGCGGTCCCTGAGACTCTCCTGTACAGCTTCTGGATTCACCTTTGGTGATTATGCTATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTAGGTTTCATTAGAAGCAAAGCTTATGGTGGGACAACAGAATACGCCGCGTCTGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCCAAAAGCATCGCCTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACTAGAGA\n>IGHVF8-G31*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTTAGACTCTCCTGTGCAGCCTCTGGATTCACTTTCAGTAACGCCTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTGGCCGTATTAAAAGCAAAACTGATGGTGGGACAACAGACTACGCTGCACCCGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAAAACACGCTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACCACAGA\n>IGHVF8-G31*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTTAGACTCTCCTGTGCAGCCTCTGGTTTCACTTTCAGTAACGCCTGGATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCGGCCGTATTAAAAGCAAAACTGATGGTGGGACAACAGACTACGCTGCACCCGTGAAAGGCAGATTCACCATCTCAAGAGATGATTCAAAAAACACGCTGTATCTGCAAATGAACAGCCTGAAAACCGAGGACACAGCCGTGTATTACTGTACCACAGA\n>IGHVF9-G32*01\nGAGACGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGGGCGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTGTATTACTGTACCAGAGA\n>IGHVF9-G32*02\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTGTATTAGTGTACCAGAGA\n>IGHVF9-G32*03\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTTGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTCTATTAGTGTACCAGAGA\n>IGHVF9-G32*04\nGAGATGCAGCTGGTGGAGTCTGGGGGAGGCTTGGCAAAGCCTGCGTGGTCCCCGAGACTCTCCTGTGCAGCCTCTCAATTCACCTTCAGTAGCTACTACATGAACTGTGTCCGCCAGGCTCCAGGGAATGGGCTGGAGTTGGTTGGACAAGTTAATCCTAATGGGGGTAGCACATACCTCATAGACTCCGGTAAGGACCGATTCAATACCTCCAGAGATAACGCCAAGAACACACTTCATCTGCAAATGAACAGCCTGAAAACCGAGGACACGGCCCTCTATTAGTGTACCAGAGA\n>IGHVF10-G33*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCAAGAG\n>IGHVF10-G33*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACCCATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G33*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAGTGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G33*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACGACATGCACTGGGTCCGCCAAGCTACAGGAAAAGGTCTGGAATGGGTCTCAGCTATTGGTACTGCTGGTGACACATACTATCCAGGCTCCGTGAAGGGCCGATTCACCATCTCCAGAGAAAATGCCAAGAACTCCTTGTATCTTCAAATGAACAGCCTGAGAGCCGGGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G34*01\nGAGGATCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGCGACCCTCCTGTGCAGCCTCTGGATTCGCCTTCAGTAGCTATGCTCTGCACTGGGTTCGCCGGGCTCCAGGGAAGGGTCTGGAGTGGGTATCAGCTATTGGTACTGGTGGTGATACATACTATGCAGACTCCGTGATGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAAGTCCTTGTATCTTCATATGAACAGCCTGATAGCTGAGGACATGGCTGTGTATTATTGTGCAAGAGA\n>IGHVF10-G34*02\nGAGGATCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACCCTCCTGTGCAGCCTCTGGATTCGCCTTCAGTAGCTATGTTCTGCACTGGGTTCGCCGGGCTCCAGGGAAGGGTCCGGAGTGGGTATCAGCTATTGGTACTGGTGGTGATACATACTATGCAGACTCCGTGATGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAAGTCCTTGTATCTTCAAATGAACAGCCTGATAGCTGAGGACATGGCTGTGTATTATTGTGCAAGAGA\n>IGHVF10-G35*01\nGAGGTGCAGCTGGTGGAGTCTCGGGGAGTCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGTCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGCATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTAAGAAAGA\n>IGHVF10-G35*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGTCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGTGTATTACTGTGCCAGATATA\n>IGHVF10-G35*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGCGTATTACTGTGCCAGATATA\n>IGHVF10-G35*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTAGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAATGAGATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTGGTGGTAGCACATACTACGCAGACTCCAGGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAACCTGAGAGCTGAGGGCACGGCCGTGTATTACTGTGCCAGATATA\n>IGHVF10-G36*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGTAGCACATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAG\n>IGHVF10-G37*02\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTAGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*03\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGCAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*04\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*05\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGCAATAAATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G37*06\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*07\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATCATATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*08\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCATTTATACGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G37*09\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G37*10\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G37*11\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTCCAGCCTGGGAGGTCCCTGAGACTCTCCTGTGCAGCGTCTGGATTCACCTTCAGTAGCTATGGCATGCACTGGGTCCGCCAGGCTCCAGGCAAGGGGCTGGAGTGGGTGGCAGTTATATGGTATGATGGAAGTAATAAATACTATGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAAAGA\n>IGHVF10-G38*01\nGAGGTGCAGCTGGTGGAGTCTGGGGAAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAGACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAAACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATATTATGCAGACTCTGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGGGCAGCCTGAGAGCTGAGGACATGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G38*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCAGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G38*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G38*06\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTTCAGCCTCTGGATTCACCTTCAGTAGCTATGCTATGCACTGGGTCCGCCAGGCTCCAGGGAAGGGACTGGAATATGTTTCAGCTATTAGTAGTAATGGGGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACTCTGTATCTTCAAATGAGCAGTCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G39*01\nGAGGTGCAGCTGGTGGAGTCCGGGGGAGGCTTAGTTCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTACTGGATGCACTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGTGTGGGTCTCACGTATTAATAGTGATGGGAGTAGCACAAGCTACGCGGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACACGCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCAAGAGA\n>IGHVF10-G40*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCAGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*03\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCTGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*04\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGACACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*05\nGAGGTGCAGCTGGTGGAGACTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCTGAGGACACGGCCGTGTATTACTGTGCGAGAG\n>IGHVF10-G40*06\nGAGGTGCAGCTGGTGGAGTCTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G40*07\nGAGGTGCAGCTGGTGGAGACTGGAGGAGGCTTGATCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGGTTCACCGTCAGTAGCAACTACATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGATTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTTCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G41*01\nGAGGTGCAGCTGTTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGTTATTTATAGCGGTGGTAGTAGCACATACTATGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGATAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G41*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGCTATTAGTGGTAGTGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G41*03\nGAGGTGCAGCTGTTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGCAGCTATGCCATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCAGCTATTAGTGGTAGTGGTGGTAGCACATACTACGCAGACTCCGTGAAGGGCCGGTTCACCATCTCCAGAGACAATTCCAAGAACACGCTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTATATTACTGTGCGAAAGA\n>IGHVF10-G42*01\nGAAATGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGAT\n>IGHVF10-G42*02\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACCTACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G42*03\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGTCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACCGCCTTGTATTACTGTGCAAAAGAT\n>IGHVF10-G42*04\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGTCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATACCATGCACTGGGTCCGTCAAGCTCCGGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTTGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAACTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G42*05\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCGTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGTCAAGCTCCAGGGAAGGGTCTGGAGTGGGTCTCTCTTATTAGTGGGGATGGTGGTAGCACATACTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACAGCAAAAACTCCCTGTATCTGCAAATGAACAGTCTGAGAACTGAGGACACCGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G43*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATTACTGTGCGAGAGA\n>IGHVF10-G43*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATCACTGTGCGAGAGA\n>IGHVF10-G43*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGTGTGGTACGGCCTGGGGGGTCCCTGAGACTCTCCTTTGCAGCCTCTGGATTCACCTTTGATGATTATGGCATGAGCTGGGTCCGCCAAGCTCCAGGGAAGGGGCTGGAGTGGGTCTCTGGTATTAATTGGAATGGTGGTAGCACAGGTTATGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCCGAGGACACGGCCTTGTATCACTGTGCGAGAGA\n>IGHVF10-G44*01\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATCACTGTGCAAAAG\n>IGHVF10-G44*02\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACATGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G44*03\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G44*04\nGAAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGCAGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTCTGATGATTATGCCATGCACTGGGTCCGGCAAGCTCCAGGGAAGGGCCTGGAGTGGGTCTCAGGTATTAGTTGGAATAGTGGTAGCATAGGCTATGCGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCCCTGTATCTGCAAATGAACAGTCTGAGAGCTGAGGACACGGCCTTGTATTACTGTGCAAAAGATA\n>IGHVF10-G45*01\nGAGGTGCAGCTGGTGGAGTCTGGGGAAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTCTGCTATGCACTGGGTCCGCCAGGCTCCAAGAAAGGGTTTGTAGTGGGTCTCAGTTATTAGTACAAGTGGTGATACCGTACTCTACACAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCCAGAATTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGACGACATGGCTGTGTATTACTGTGTGAAAGA\n>IGHVF10-G46*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGATACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCCGCAAGGCTCCAGGAAAGGGGCTGAAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G46*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCCGCAAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G46*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGCCTGCAAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGTGGACTCCGTGAAGCGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTCCCTGTATCTGCAAAAGAACAGACGGAGAGCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G47*01\nACAGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAGAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCGCCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCGATTCATCATCTCCAGAGACAATTCCAGGAACTTCCTGTATCAGCAAATGAACAGCCTGAGGCCCGAGGACATGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G48*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGATCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCATCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCGATTCATCATCTCCAGAGACAATTCCAGGAACACCCTGTATCTGCAAACGAATAGCCTGAGGGCCGAGGACACGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G48*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGATCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAACAGTGACATGAACTGGGTCCATCAGGCTCCAGGAAAGGGGCTGGAGTGGGTATCGGGTGTTAGTTGGAATGGCAGTAGGACGCACTATGCAGACTCTGTGAAGGGCCAATTCATCATCTCCAGAGACAATTCCAGGAACACCCTGTATCTGCAAACGAATAGCCTGAGGGCCGAGGACACGGCTGTGTATTACTGTGTGAGAAA\n>IGHVF10-G49*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAAGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGGG\n>IGHVF10-G49*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAAGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G49*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G49*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCCAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTTAGTAGCTATTGGATGAGCTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTGGCCAACATAAAGCAAGATGGAAGTGAGAAATACTATGTGGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*01\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGGGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*02\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGGGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*03\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACACAAACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCCGTGTATTACTGTGCGAGAGA\n>IGHVF10-G50*04\nCAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTCAAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAGCTGGATCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACACAAACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAG\n>IGHVF10-G51*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAATTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G51*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCCTGGTCAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTAGTTACATATACTACGCAGACTCAGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACAGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*01\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*02\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTAAAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTGACTACTACATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTCTCATCCATTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTTTATTACTGTGCGAGAGA\n>IGHVF10-G52*03\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGAGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGTTATGAAATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTGGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTTTATTACTGTGCGAGAGA\n>IGHVF10-G52*04\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAACGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*05\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGCCGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n>IGHVF10-G52*06\nGAGGTGCAGCTGGTGGAGTCTGGGGGAGGCTTGGTACAGCCTGGGGGGTCCCTGAGACTCTCCTGTGCAGCCTCTGGATTCACCTTCAGTAGCTATAGCATGAACTGGGTCCGCCAGGCTCCAGGGAAGGGGCTGGAGTGGGTTTCATACATTAGTAGTAGTAGTAGTACCATATACTACGCAGACTCTGTGAAGGGCCGATTCACCATCTCCAGAGACAATGCCAAGAACTCACTGTATCTGCAAATGAACAGCCTGAGAGACGAGGACACGGCTGTGTATTACTGTGCGAGAGA\n","\n>IGHD1-1*01\nGGTACAACTGGAACGAC\n>IGHD1-14*01\nGGTATAACCGGAACCAC\n>IGHD1-20*01\nGGTATAACTGGAACGAC\n>IGHD1-26*01\nGGTATAGTGGGAGCTACTAC\n>IGHD1-7*01\nGGTATAACTGGAACTAC\n>IGHD2-15*01\nAGGATATTGTAGTGGTGGTAGCTGCTACTCC\n>IGHD2-2*01\nAGGATATTGTAGTAGTACCAGCTGCTATGCC\n>IGHD2-2*02\nAGGATATTGTAGTAGTACCAGCTGCTATACC\n>IGHD2-21*01\nAGCATATTGTGGTGGTGATTGCTATTCC\n>IGHD2-21*02\nAGCATATTGTGGTGGTGACTGCTATTCC\n>IGHD2-8*01\nAGGATATTGTACTAATGGTGTATGCTATACC\n>IGHD2-8*02\nAGGATATTGTACTGGTGGTGTATGCTATACC\n>IGHD3-10*01\nGTATTACTATGGTTCGGGGAGTTATTATAAC\n>IGHD3-10*03\nGTATTACTATGGTTCAGGGAGTTATTATAAC\n>IGHD3-16*02\nGTATTATGATTACGTTTGGGGGAGTTATCGTTATACC\n>IGHD3-16*03\nGTATTATGATTACATTTGGGGGAGTTATCGTTATACC\n>IGHD3-22*01\nGTATTACTATGATAGTAGTGGTTATTACTAC\n>IGHD3-3*01\nGTATTACGATTTTTGGAGTGGTTATTATACC\n>IGHD3-9*01\nGTATTACGATATTTTGACTGGTTATTATAAC\n>IGHD4-11*01\nTGACTACAGTAACTAC\n>IGHD4-17*01\nTGACTACGGTGACTAC\n>IGHD4-23*01\nTGACTACGGTGGTAACTCC\n>IGHD4-4*01\nTGACTACAGTAACTAC\n>IGHD5-12*01\nGTGGATATAGTGGCTACGATTAC\n>IGHD5-18*01\nGTGGATACAGCTATGGTTAC\n>IGHD5-18*02\nGTGAATATAGTGGCTACGATTAC\n>IGHD5-24*01\nGTAGAGATGGCTACAATTAC\n>IGHD5-5*01\nGTGGATACAGCTATGGTTAC\n>IGHD6-13*01\nGGGTATAGCAGCAGCTGGTAC\n>IGHD6-19*01\nGGGTATAGCAGTGGCTGGTAC\n>IGHD6-25*01\nGGGTATAGCAGCGGCTAC\n>IGHD6-6*01\nGAGTATAGCAGCTCGTCC\n>IGHD7-27*01\nCTAACTGGGGA\n","\n>IGHJ1*01\nGCTGAATACTTCCAGCACTGGGGCCAGGGCACCCTGGTCACCGTCTCCTCAG\n>IGHJ2*01\nCTACTGGTACTTCGATCTCTGGGGCCGTGGCACCCTGGTCACTGTCTCCTCAG\n>IGHJ3*02\nTGATGCTTTTGATATCTGGGGCCAAGGGACAATGGTCACCGTCTCTTCAG\n>IGHJ4*02\nACTACTTTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG\n>IGHJ5*02\nACAACTGGTTCGACCCCTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG\n>IGHJ6*02\nATTACTACTACTACTACGGTATGGACGTCTGGGGCCAAGGGACCACGGTCACCGTCTCCTCAG\n>IGHJ6*03\nATTACTACTACTACTACTACATGGACGTCTGGGGCAAAGGGACCACGGTCACCGTCTCCTCAG\n");class wB{static async dynamicCumulativeConfidenceThreshold(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,a=arguments.length>3?arguments[3]:void 0;const r=(await e.array()).flat(),s=r.map(((e,t)=>({value:e,index:t}))).sort(((e,t)=>t.value-e.value)).slice(0,n),o=s.reduce(((e,t)=>e+t.value),0),i=t*o;let c=0;const l=[];for(const u of s)if(c+=u.value,l.push(u.index),c>=i||l.length>=n)break;return l.map((e=>({index:a[e].name,prob:r[e]})))}}class kB{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;this.referenceAlleles=e,this.segmentThreshold=t}static async extractValueIndices(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.3;return(await e.array()).map(((e,n)=>e>t?n:-1))}static async applySegmentThresholding(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.3;const n=await e.map((async e=>kB.extractValueIndices(e,t)));console.log(n);const a=Array(n.length).fill(-1),r=Array(n.length).fill(-1);return n.forEach(((e,t)=>{const n=e.reduce(((e,t,n)=>(t&&e.push(n),e)),[]);n.length>0&&(a[t]=n[0],r[t]=n[n.length-1])})),[a,r]}static hammingDistance(e,t){const n=Math.abs(e.length-t.length),a=Math.min(e.length,t.length);let r=n;for(let s=0;s<a;s++)e[s]!==t[s]&&r++;return r}static calculatePadSize(e){const t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:512)-e.length;return Math.floor(t/2)}AA_Score(e,t){let n=0,a=0;const r=.05;let s=null;for(let o=0;o<e.length;o++){const i=e[o]===t[o];let c;i?(s?a+=r:a=r,c=-1-a):(!1===s?a+=r:a=r,c=1+a),n+=c,s=i}return n}alignWithGermline(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:25;if(e.length<20)return[!1,-1,-1];const r=e.length,s=t.length,o=s-r;a=Math.min(o,a)+1;const i=e.slice(-n);let c=1/0,l=s;for(let G=0;G<a;G++){const e=t.slice(s-(n+G),s-G),a=this.AA_Score(i,e);if(a<c&&(c=a,l=s-G,0===c))break}c=1/0;const u=e.slice(0,n),h=l-r;let d=h;const p=Math.min(9,o);for(let G=-p-1;G<=p+1;G++){const e=Math.max(0,h+G),a=Math.min(e+n,s),r=t.slice(e,a);if(r.length!==u.length)continue;const o=this.AA_Score(u,r)+Math.abs(G);if(o<c&&(c=o,d=e,0===o))break}return[d,l]}match(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:15,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.1,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:576;const[i,c]=kB.applySegmentThresholding(t,s),l=e.map((e=>kB.calculatePadSize(e,o))),u=i.map(((e,t)=>Math.max(0,e-l[t]))),h=c.map(((e,t)=>Math.max(0,e-l[t]))),d=[];return e.forEach(((e,t)=>{const s=u[t],o=h[t],i=n[t],c=e.slice(s,o),l=this.referenceAlleles[i],p=o-s,G=l.length;if(p===G)d.push({start_in_seq:s,end_in_seq:o,start_in_ref:0,end_in_ref:G});else if(p>G){const[e,t]=this.alignWithGermline(c,l,a,r);d.push({start_in_seq:s,end_in_seq:o,start_in_ref:e,end_in_ref:t})}else if(p<G){const[e,t]=this.alignWithGermline(c,l,a,r);if(null===e)throw new Error("Error");d.push({start_in_seq:s,end_in_seq:o,start_in_ref:e,end_in_ref:t})}})),d}}async function IB(e,t,n,a,r,s,o,i){console.log(n);const c=e.map((e=>t[e])).map((e=>hB.encodeAndEqualPadSequence(e.sequence.replace(/\n/g,"").toUpperCase()))),l=await Promise.all(c),u=zd(l),h=o.predict(u),d=[];await Promise.all(["v_allele","d_allele","j_allele"].map((async s=>{const o=h[i[s]],c=tp(o),l=await Promise.all(c.map((async e=>{const t=wB.dynamicCumulativeConfidenceThreshold(e,a[s],r[s],n[s]);return d.push(e),t})));l.forEach(((n,a)=>{const r=e[a];t[r]||(t[r]={}),t[r][s]=n}))})));new kB(n,s);d.forEach((e=>Lo(e))),h.forEach((e=>e.dispose()))}const NB=e=>e.split(">").filter(Boolean).length,SB=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=0,a="";const r=async(t,n)=>new Promise(((a,r)=>{const s=new FileReader;s.onload=e=>a(e.target.result),s.onerror=e=>r(e),s.readAsText(e.slice(t,n))})),s=e.size;let o=0,i=Math.min(t,s);for(;o<s;){for(a+=await r(o,i);a.includes(">");){const e=a.indexOf(">"),t=a.slice(0,e);a=a.slice(e+1),n+=NB(t)}o=i,i=Math.min(o+t,s)}return n+=NB(a),n};async function EB(e,t,n,a,r,s,o){let i=e;!e&&t&&(SB(t,100).then((e=>{console.log("Total sequences:",e)})).catch((e=>{console.error("Error:",e)})),i=await async function(e){return new Promise(((t,n)=>{const a=new FileReader;a.onload=e=>t(e.target.result),a.onerror=e=>n(e),a.readAsText(e)}))}(t));const c=fB.queryToDict(i),l={v_allele:n.vConf,d_allele:n.dConf,j_allele:n.jConf},u={v_allele:n.vCap,d_allele:n.dCap,j_allele:n.jCap},h={v_allele:n.vSeg,d_allele:n.dSeg,j_allele:n.jSeg},d={v_allele:mB,d_allele:yB,j_allele:xB},p=Object.keys(c);await async function(e,t,n,a,r,s,o,i){let c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:500;const l=e.length,u=Math.min(l,c);for(let h=0;h<l;h+=u){const c=l-h,d=Math.min(u,c),p=e.slice(h,h+d);await IB(p,t,n,a,r,s,o,i)}}(p,c,d,l,u,h,a,r,500),console.log("Sequence data:",c),s(c),o(Object.keys(c).length<15)}function RB(e){let{setSubmission:t,submission:n,sequence:a,file:r,params:s,model:o,outputIndices:i,setResults:c,setInteractiveState:l}=e;const[u,h]=(0,N.useState)(!1),[d,p]=(0,N.useState)(0);return(0,qe.jsxs)(qe.Fragment,{children:[(0,qe.jsx)("div",{className:"submmit-button-container",children:(0,qe.jsx)("button",{id:"submitButton",className:"submmit-button",onClick:()=>{if(a||r){if(a||r){t(!0);const e=(new Date).getTime();EB(a,r,s,o,i,c,l).then((()=>{const t=(new Date).getTime();p((t-e)/1e3)})),t(!1),h(!0)}}else window.alert("No sequence or file to submit")},children:"Submit"})}),n&&(0,qe.jsx)("p",{children:"Submitting sequences..."}),u&&!n&&(0,qe.jsxs)(qe.Fragment,{children:[(0,qe.jsx)("button",{id:"resetButton",className:"example-button",onClick:()=>{t(!1),h(!1),c(null)},children:"Reset results"}),(0,qe.jsxs)("p",{children:["Process sequences in: ",(0,qe.jsx)("span",{children:(G=d,G<60?"".concat(G," second(s)"):G<3600?"".concat(Math.round(G/60)," minute(s)"):"".concat(Math.round(G/3600)," hour(s)"))})]})]})]});var G}function _B(){const[e,t]=(0,N.useState)(!1),[n,a]=(0,N.useState)(null),[r,s]=(0,N.useState)(""),[o,i]=(0,N.useState)("IGH"),[c,l]=(0,N.useState)(null),[u,h]=(0,N.useState)(null),[d,p]=(0,N.useState)(!0),[G,C]=(0,N.useState)(null),[A,T]=(0,N.useState)({vCap:3,dCap:3,jCap:3,vConf:.9,dConf:.2,jConf:.8,vSeg:.1,dSeg:.01,jSeg:.01}),[f,m]=(0,N.useState)(!1);return(0,qe.jsxs)("div",{children:[(0,qe.jsx)(Ke,{}),(0,qe.jsx)(TB,{setFile:a,setSequence:s,sequence:r,setSelectedChain:i,selectedChain:o,setModel:l,setOutputIndices:h,setIsLoading:p,params:A,setParams:T}),(0,qe.jsx)(RB,{setSubmission:t,submission:e,sequence:r,file:n,params:A,model:c,outputIndices:u,setResults:C,setInteractiveState:m}),(0,qe.jsx)(Xe,{})]})}const FB=()=>(0,qe.jsxs)(Ve,{children:[(0,qe.jsx)(ze,{path:"/",element:(0,qe.jsx)(Qe,{})}),(0,qe.jsx)(ze,{path:"/tool",element:(0,qe.jsx)(_B,{})}),(0,qe.jsx)(ze,{path:"*",element:(0,qe.jsx)(Le,{to:"/"})})]}),DB=document.getElementById("root");E.render((0,qe.jsx)(N.StrictMode,{children:(0,qe.jsx)(Ue,{children:(0,qe.jsx)(FB,{})})}),DB)})()})();
//# sourceMappingURL=main.c32b38d5.js.map